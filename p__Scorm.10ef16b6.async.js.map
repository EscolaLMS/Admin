{"version":3,"sources":["webpack:///./src/services/escola-lms/scorm.ts","webpack:///./node_modules/@ant-design/icons-svg/es/asn/SendOutlined.js","webpack:///./node_modules/@ant-design/icons/es/icons/SendOutlined.js","webpack:///./src/components/Scorm/upload.tsx","webpack:///./src/pages/Scorm/index.tsx"],"names":["params","options","request","method","useCache","per_page","pageSize","page","current","id","UploadScorm","onSuccess","onError","hideLabel","info","file","response","status","success","data","model","handleRemove","deleteScorm","TableList","actionRef","useRef","intl","useIntl","columns","title","dataIndex","hideInSearch","sorter","width","hideInTable","renderFormItem","reload","formatMessage","defaultMessage","error","message","toString","render","_","record","scos","map","sco","uuid","valueType","layout","sort","sortArr","Object","entries","scorms","order_by","order","undefined","then","total"],"mappings":"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","file":"p__Scorm.10ef16b6.async.js","sourcesContent":["import { request } from 'umi';\nimport type { RequestOptionsInit } from 'umi-request';\n\n/**  GET /api/admin/users */\nexport async function scorms(\n  params: API.PageParams &\n    API.PaginationParams & {\n      search?: string;\n    },\n  options?: RequestOptionsInit,\n) {\n  return request<API.ScormList>('/api/admin/scorm', {\n    params,\n    method: 'GET',\n    /* useCache: true */ useCache: false,\n    ...(options || {}),\n  });\n}\n\n/**  GET /api/scorm/scos */\nexport async function scormssco(\n  params: {\n    // query\n    current?: number;\n    pageSize?: number;\n    search?: string;\n  },\n  options?: RequestOptionsInit,\n) {\n  return request<API.ScormScosList>('/api/admin/scorm/scos', {\n    params: {\n      ...params,\n      per_page: params.pageSize,\n      page: params.current,\n    },\n    method: 'GET',\n    /* useCache: true */ useCache: false,\n    ...(options || {}),\n  });\n}\n\nexport async function deleteScorm(id: number, options?: RequestOptionsInit) {\n  return request<API.SCORM>(`/api/admin/scorm/${id}`, {\n    method: 'DELETE',\n    ...(options || {}),\n  });\n}\n","// This icon file is generated automatically.\nvar SendOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"defs\", \"attrs\": {}, \"children\": [{ \"tag\": \"style\", \"attrs\": {} }] }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M931.4 498.9L94.9 79.5c-3.4-1.7-7.3-2.1-11-1.2a15.99 15.99 0 00-11.7 19.3l86.2 352.2c1.3 5.3 5.2 9.6 10.4 11.3l147.7 50.7-147.6 50.7c-5.2 1.8-9.1 6-10.3 11.3L72.2 926.5c-.9 3.7-.5 7.6 1.2 10.9 3.9 7.9 13.5 11.1 21.5 7.2l836.5-417c3.1-1.5 5.6-4.1 7.2-7.1 3.9-8 .7-17.6-7.2-21.6zM170.8 826.3l50.3-205.6 295.2-101.3c2.3-.8 4.2-2.6 5-5 1.4-4.2-.8-8.7-5-10.2L221.1 403 171 198.2l628 314.9-628.2 313.2z\" } }] }, \"name\": \"send\", \"theme\": \"outlined\" };\nexport default SendOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SendOutlinedSvg from \"@ant-design/icons-svg/es/asn/SendOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar SendOutlined = function SendOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: SendOutlinedSvg\n  }));\n};\nSendOutlined.displayName = 'SendOutlined';\nexport default /*#__PURE__*/React.forwardRef(SendOutlined);","import SecureUpload from '@/components/SecureUpload';\nimport React from 'react';\n\nexport const UploadScorm: React.FC<{\n  onSuccess: (scorm: API.SCORM) => void;\n  onError: (error: API.DefaultResponseError) => void;\n  hideLabel?: boolean;\n}> = ({ onSuccess, onError, hideLabel }) => {\n  return (\n    <SecureUpload<API.SCORMUPloaded>\n      url=\"/api/admin/scorm/upload\"\n      name=\"zip\"\n      accept=\"application/zip\"\n      hideLabel={hideLabel}\n      onChange={(info) => {\n        if (!info.file.response || info.file.status !== 'done') return;\n        const response = info.file.response;\n\n        if (!response.success) {\n          onError(response);\n          return;\n        }\n\n        onSuccess(response.data.model);\n      }}\n    />\n  );\n};\n\nexport default UploadScorm;\n","import { Button, Tooltip, Popconfirm, message } from 'antd';\nimport React, { useRef } from 'react';\nimport { useIntl, FormattedMessage, Link } from 'umi';\nimport { PageContainer } from '@ant-design/pro-layout';\nimport type { ProColumns, ActionType } from '@ant-design/pro-table';\nimport ProTable from '@ant-design/pro-table';\n\nimport { DeleteOutlined, SendOutlined } from '@ant-design/icons';\nimport { scorms, deleteScorm } from '@/services/escola-lms/scorm';\nimport UploadScorm from '@/components/Scorm/upload';\n\nconst handleRemove = async (id: number) => {\n  await deleteScorm(id);\n  return true;\n};\n\nconst TableList: React.FC = () => {\n  const actionRef = useRef<ActionType>();\n  const intl = useIntl();\n\n  const columns: ProColumns<API.SCORM>[] = [\n    {\n      title: <FormattedMessage id=\"ID\" defaultMessage=\"ID\" />,\n      dataIndex: 'id',\n      hideInSearch: true,\n      sorter: true,\n      width: '80px',\n    },\n    {\n      title: <FormattedMessage id=\"version\" defaultMessage=\"version\" />,\n      dataIndex: 'version',\n      hideInSearch: true,\n      sorter: true,\n    },\n\n    {\n      title: <FormattedMessage id=\"newScorm\" defaultMessage=\"New Scorm\" />,\n      dataIndex: 'upload',\n      hideInSearch: false,\n      hideInTable: true,\n\n      renderFormItem: () => [\n        <UploadScorm\n          key=\"upload\"\n          hideLabel\n          onSuccess={() => {\n            if (actionRef.current) {\n              actionRef.current.reload();\n            }\n            message.success(\n              intl.formatMessage({ id: 'scorm_uploaded', defaultMessage: 'Scorm uploaded' }),\n            );\n          }}\n          onError={(error) => message.error(error.message || error.toString())}\n        />,\n      ],\n    },\n\n    {\n      title: <FormattedMessage id=\"SCOS\" defaultMessage=\"Sharable Content Objects\" />,\n      dataIndex: 'SCOS',\n      hideInSearch: true,\n      render: (_, record) => [\n        record.scos.map((sco) => (\n          <Link key={sco.uuid} to={`/courses/scorms/preview/${sco.uuid}`}>\n            <Tooltip title={<FormattedMessage id=\"preview\" defaultMessage=\"preview\" />}>\n              <Button size=\"small\" icon={<SendOutlined />} type=\"primary\">\n                {sco.title}\n              </Button>{' '}\n            </Tooltip>\n          </Link>\n        )),\n      ],\n    },\n\n    {\n      hideInSearch: true,\n      title: <FormattedMessage id=\"pages.searchTable.titleOption\" defaultMessage=\"操作\" />,\n      dataIndex: 'option',\n      valueType: 'option',\n      render: (_, record) => [\n        <Popconfirm\n          key=\"delete\"\n          title={\n            <FormattedMessage\n              id=\"deleteQuestion\"\n              defaultMessage=\"Are you sure to delete this record?\"\n            />\n          }\n          onConfirm={async () => {\n            const success = await handleRemove(record.id);\n            if (success) {\n              if (actionRef.current) {\n                actionRef.current.reload();\n              }\n            }\n          }}\n          okText={<FormattedMessage id=\"yes\" defaultMessage=\"Yes\" />}\n          cancelText={<FormattedMessage id=\"no\" defaultMessage=\"No\" />}\n        >\n          <Tooltip title={<FormattedMessage id=\"delete\" defaultMessage=\"delete\" />}>\n            <Button type=\"primary\" icon={<DeleteOutlined />} danger />\n          </Tooltip>\n        </Popconfirm>,\n      ],\n    },\n  ];\n\n  return (\n    <PageContainer>\n      <ProTable<API.SCORM, API.PageParams & { search: string; role: string }>\n        headerTitle={intl.formatMessage({\n          id: 'menu.Courses.SCORMs',\n          defaultMessage: 'scorms',\n        })}\n        actionRef={actionRef}\n        rowKey=\"id\"\n        search={{\n          layout: 'vertical',\n        }}\n        request={({ pageSize, current }, sort) => {\n          const sortArr = sort && Object.entries(sort)[0];\n          return scorms({\n            per_page: pageSize,\n            page: current,\n            order_by: sortArr && sortArr[0], // i like nested ternary\n            /* eslint-disable */ order: sortArr\n              ? sortArr[1] === 'ascend'\n                ? 'ASC'\n                : 'DESC'\n              : undefined,\n          }).then((response) => {\n            if (response.success) {\n              return {\n                data: response.data.data,\n                total: response.data.total,\n                success: true,\n              };\n            }\n            return [];\n          });\n        }}\n        columns={columns}\n      />\n    </PageContainer>\n  );\n};\n\nexport default TableList;\n"],"sourceRoot":""}