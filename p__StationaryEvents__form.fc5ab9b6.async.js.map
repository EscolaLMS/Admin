{"version":3,"file":"p__StationaryEvents__form.fc5ab9b6.async.js","mappings":"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","sources":["webpack://ant-design-pro/./node_modules/@ant-design/icons/es/icons/SwapOutlined.js","webpack://ant-design-pro/./node_modules/@ant-design/pro-form/es/components/TimePicker/index.js","webpack://ant-design-pro/./src/components/Agenda/ModalForm/index.tsx","webpack://ant-design-pro/./src/components/Agenda/index.tsx","webpack://ant-design-pro/./src/components/UnsavedPrompt/index.tsx","webpack://ant-design-pro/./src/pages/StationaryEvents/form.tsx"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SwapOutlinedSvg from \"@ant-design/icons-svg/es/asn/SwapOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar SwapOutlined = function SwapOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: SwapOutlinedSvg\n  }));\n};\nvar RefIcon = /*#__PURE__*/React.forwardRef(SwapOutlined);\nif (process.env.NODE_ENV !== 'production') {\n  RefIcon.displayName = 'SwapOutlined';\n}\nexport default RefIcon;","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"fieldProps\", \"proFieldProps\"],\n  _excluded2 = [\"fieldProps\", \"proFieldProps\"];\nimport { dateArrayFormatter } from '@ant-design/pro-utils';\nimport React, { useContext } from 'react';\nimport FieldContext from \"../../FieldContext\";\nimport ProField from \"../Field\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar valueType = 'time';\n\n/** 时间区间选择器 */\nvar TimeRangePicker = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var fieldProps = _ref.fieldProps,\n    proFieldProps = _ref.proFieldProps,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var context = useContext(FieldContext);\n  return /*#__PURE__*/_jsx(ProField, _objectSpread({\n    ref: ref,\n    fieldProps: _objectSpread({\n      getPopupContainer: context.getPopupContainer\n    }, fieldProps),\n    valueType: \"timeRange\",\n    proFieldProps: proFieldProps,\n    filedConfig: {\n      valueType: 'timeRange',\n      customLightMode: true,\n      lightFilterLabelFormatter: function lightFilterLabelFormatter(value) {\n        return dateArrayFormatter(value, 'HH:mm:ss');\n      }\n    }\n  }, rest));\n});\n\n/**\n * 时间选择组件\n *\n * @param\n */\nvar ProFormTimePicker = function ProFormTimePicker(_ref2) {\n  var fieldProps = _ref2.fieldProps,\n    proFieldProps = _ref2.proFieldProps,\n    rest = _objectWithoutProperties(_ref2, _excluded2);\n  var context = useContext(FieldContext);\n  return /*#__PURE__*/_jsx(ProField, _objectSpread({\n    fieldProps: _objectSpread({\n      getPopupContainer: context.getPopupContainer\n    }, fieldProps),\n    valueType: valueType,\n    proFieldProps: proFieldProps,\n    filedConfig: {\n      customLightMode: true,\n      valueType: valueType\n    }\n  }, rest));\n};\nvar WrappedProFormTimePicker = ProFormTimePicker;\nWrappedProFormTimePicker.RangePicker = TimeRangePicker;\nexport default WrappedProFormTimePicker;","import ProForm, {\n  ModalForm,\n  ProFormText,\n  ProFormTextArea,\n  ProFormTimePicker,\n} from '@ant-design/pro-form';\nimport { Form } from 'antd';\nimport React, { useEffect } from 'react';\n\nimport type { AgendaType } from '@/components/Agenda';\nimport UserSelect from '@/components/UserSelect';\nimport { FormattedMessage, useIntl } from 'umi';\n\nexport const AgendaModalForm: React.FC<{\n  id?: number | false;\n  fields: AgendaType | null;\n  name: string | boolean;\n  visible: boolean;\n  onVisibleChange: (visible: boolean) => void;\n  onFinish: (formData: API.Setting) => Promise<boolean | void>;\n}> = (props) => {\n  const intl = useIntl();\n\n  const { visible, fields, onVisibleChange, onFinish, id } = props;\n\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    if (fields) {\n      form.setFieldsValue(fields);\n      return;\n    }\n    form.resetFields();\n  }, [fields]);\n\n  return (\n    <ModalForm\n      form={form}\n      title={intl.formatMessage({\n        id: id ? 'editSetting' : 'newSetting',\n        defaultMessage: id ? 'editSetting' : 'newSetting',\n      })}\n      width=\"40vw\"\n      visible={visible}\n      onVisibleChange={(newVisibleValue) => {\n        onVisibleChange(newVisibleValue);\n        form.resetFields();\n      }}\n      onFinish={(formData) => {\n        form.resetFields();\n        return onFinish({ ...formData, id: fields?.id || null });\n      }}\n    >\n      <ProForm.Group>\n        <ProFormText\n          label={<FormattedMessage id=\"title\" defaultMessage=\"title\" />}\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n          width=\"lg\"\n          name=\"title\"\n        />\n        <ProFormText\n          label={<FormattedMessage id=\"subtitle\" defaultMessage=\"subtitle\" />}\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n          width=\"lg\"\n          name=\"subtitle\"\n        />\n        <ProFormTimePicker\n          name=\"hour\"\n          label={<FormattedMessage id=\"hour\" defaultMessage=\"hour\" />}\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n          width=\"xs\"\n        />\n        <ProForm.Item\n          name=\"tutors\"\n          label={<FormattedMessage id=\"tutors\" />}\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n          convertValue={(v) => {\n            return v;\n          }}\n          valuePropName=\"value\"\n        >\n          <UserSelect multiple />\n        </ProForm.Item>\n\n        <ProFormTextArea\n          label={<FormattedMessage id=\"description\" defaultMessage=\"description\" />}\n          rules={[\n            {\n              required: false,\n            },\n          ]}\n          width=\"lg\"\n          name=\"description\"\n        />\n\n        <ProForm.Item name=\"asCandidate\" hidden={true} />\n      </ProForm.Group>\n    </ModalForm>\n  );\n};\n\nexport default AgendaModalForm;\n","import type { ComponentClass } from 'react';\nimport React, { useEffect, useRef, useState } from 'react';\nimport './index.css';\n\nimport TypeButtonDrawer from '@/components/TypeButtonDrawer';\nimport {\n  DeleteOutlined,\n  EditOutlined,\n  MenuOutlined,\n  PlusOutlined,\n  SwapOutlined,\n} from '@ant-design/icons';\nimport { PageContainer } from '@ant-design/pro-layout';\nimport type { ActionType, ProColumns } from '@ant-design/pro-table';\nimport ProTable from '@ant-design/pro-table';\nimport { Button, Popconfirm, Space, Tooltip } from 'antd';\nimport { arrayMoveImmutable } from 'array-move';\nimport type { SortableContainerProps, SortableElementProps } from 'react-sortable-hoc';\nimport { SortableContainer, SortableElement, SortableHandle } from 'react-sortable-hoc';\nimport { FormattedMessage, useIntl } from 'umi';\nimport AgendaModalForm from './ModalForm';\n\nexport interface AgendaType {\n  id: number;\n  title: string;\n  subtitle: string;\n  hour: string;\n  tutors: number[];\n  description?: string;\n  asCandidate?: boolean;\n}\n\nconst SortableItem: ComponentClass<SortableElementProps & { className?: string }, any> =\n  SortableElement((props: React.HTMLAttributes<HTMLTableRowElement>) => <tr {...props} />);\nconst SortableBody = SortableContainer((props: React.HTMLAttributes<HTMLTableSectionElement>) => (\n  <tbody {...props} />\n));\nconst DragHandle = SortableHandle(() => (\n  <MenuOutlined\n    style={{\n      cursor: 'grab',\n      color: '#999',\n    }}\n  />\n));\n\ninterface RenderAgendaType extends Omit<AgendaType, 'tutors'> {\n  tutors: number[];\n}\n\nconst Agenda = ({\n  data,\n  onCreate,\n  lastDataUpdateDate,\n}: {\n  data: AgendaType[];\n  onCreate: (value: string) => void;\n  lastDataUpdateDate: Date;\n}) => {\n  const actionRef = useRef<ActionType>();\n  const agendaOrder = useRef<number[] | null>(null);\n  const intl = useIntl();\n\n  const [source, setSource] = useState<RenderAgendaType[]>([]);\n  const [fields, setFields] = useState<AgendaType | null>(null);\n  const [modalVisible, setModalVisible] = useState<boolean>(false);\n  const [receivedData, setReceivedData] = useState<AgendaType[]>(data);\n  const [candidateData, setCandidateData] = useState<AgendaType[]>([]);\n  const [wasOrderChanged, setWasOrderChanged] = useState(false);\n\n  const TableColumns: ProColumns[] = [\n    {\n      title: 'Sort',\n      dataIndex: 'sort',\n      width: '5%',\n      className: 'drag-visible',\n      render: () => <DragHandle />,\n    },\n    {\n      width: '20%',\n      title: <FormattedMessage id=\"title\" defaultMessage=\"Title\" />,\n      dataIndex: 'title',\n      hideInSearch: true,\n      renderText: (title: string) => (title.length > 80 ? `${title.slice(0, 77)}...` : title),\n    },\n    {\n      width: '20%',\n      title: <FormattedMessage id=\"subtitle\" defaultMessage=\"subtitle\" />,\n      dataIndex: 'subtitle',\n      hideInSearch: true,\n      renderText: (subtitle: string) =>\n        subtitle.length > 80 ? `${subtitle.slice(0, 77)}...` : subtitle,\n    },\n    {\n      width: '10%',\n      title: <FormattedMessage id=\"hour\" defaultMessage=\"hour\" />,\n      dataIndex: 'hour',\n      hideInSearch: true,\n    },\n    {\n      width: '15%',\n      title: <FormattedMessage id=\"tutors\" defaultMessage=\"tutors\" />,\n      dataIndex: 'tutors',\n      hideInSearch: true,\n      render: (_, { tutors }) =>\n        tutors && (\n          <Space>\n            {tutors.map((tutorId: number) => (\n              <TypeButtonDrawer key={tutorId} type={'App\\\\Models\\\\User'} type_id={tutorId} />\n            ))}\n          </Space>\n        ),\n    },\n    {\n      width: '18%',\n      title: <FormattedMessage id=\"description\" defaultMessage=\"description\" />,\n      dataIndex: 'description',\n      hideInSearch: true,\n      renderText: (description: string) =>\n        !description\n          ? '-'\n          : description.length > 80\n          ? `${description.trim().slice(0, 77)}...`\n          : description.trim(),\n    },\n  ];\n\n  const onSortEnd = ({ oldIndex, newIndex }: { oldIndex: number; newIndex: number }) => {\n    if (oldIndex !== newIndex) {\n      const newData = arrayMoveImmutable(source.slice(), oldIndex, newIndex).filter(Boolean);\n      setSource(newData);\n    }\n  };\n\n  const DraggableContainer = (props: SortableContainerProps) => {\n    return (\n      <SortableBody\n        useDragHandle\n        disableAutoscroll\n        helperClass=\"row-dragging\"\n        onSortEnd={onSortEnd}\n        {...props}\n      />\n    );\n  };\n\n  const DraggableBodyRow = ({ ...restProps }) => {\n    const index = source.findIndex(({ id }) => id === restProps['data-row-key']);\n    const updatedRestProps = {\n      ...restProps,\n      className: `${restProps.className} ${\n        !!source[index]?.asCandidate ? 'agenda-row-candidate' : ''\n      }`,\n    };\n    return <SortableItem index={index} {...updatedRestProps} />;\n  };\n\n  useEffect(() => {\n    setCandidateData([]);\n    setReceivedData(data);\n    setFields(null);\n    setWasOrderChanged(false);\n    agendaOrder.current = null;\n  }, [lastDataUpdateDate]);\n\n  useEffect(() => {\n    (async () => {\n      if (!receivedData || !candidateData) return;\n\n      const dataResponse = [...receivedData, ...candidateData];\n\n      const uniqueData = dataResponse.reduce((acc, item, _, arr) => {\n        const value = arr.filter(({ id }) => id === item.id);\n\n        if (value.length > 1) {\n          const duplicatedItem = value.find((i) => 'asCandidate' in i);\n          if (!duplicatedItem) return [...acc, value[-1]];\n          const isInAccumulator = duplicatedItem && acc.find(({ id }) => id === duplicatedItem.id);\n          return isInAccumulator ? acc : [...acc, duplicatedItem];\n        }\n        return [...acc, value[0]];\n      }, [] as typeof dataResponse);\n\n      const newItems = source.length\n        ? uniqueData.filter(\n            ({ id }) => source.findIndex((singleSource) => singleSource.id === id) === -1,\n          )\n        : [];\n\n      const sortedData = source.length\n        ? source.map((item) => {\n            const idx = uniqueData.findIndex(({ id }) => id === item.id);\n            return uniqueData[idx];\n          })\n        : uniqueData;\n\n      const mergedData = [...sortedData, ...newItems];\n\n      setSource(mergedData.filter(Boolean));\n    })();\n  }, [receivedData, candidateData]);\n\n  useEffect(() => {\n    const a = source.map((item) => {\n      const { id, title, subtitle, hour, description, tutors } = item;\n      return {\n        id,\n        title,\n        subtitle,\n        hour,\n        description,\n        tutors,\n      };\n    });\n    onCreate(JSON.stringify(a));\n\n    const sortedSource = source.map(({ id }) => id);\n\n    if (agendaOrder.current === null) {\n      if (!sortedSource.length) return;\n      agendaOrder.current = sortedSource;\n    }\n\n    if (sortedSource.length > agendaOrder.current.length) {\n      const checkIfOrderWasChanged =\n        JSON.stringify(sortedSource.slice(0, agendaOrder.current.length)) !==\n        JSON.stringify(agendaOrder.current);\n      setWasOrderChanged(checkIfOrderWasChanged);\n      if (!checkIfOrderWasChanged) {\n        agendaOrder.current = sortedSource;\n        return;\n      }\n    }\n\n    setWasOrderChanged(JSON.stringify(sortedSource) !== JSON.stringify(agendaOrder.current));\n  }, [source]);\n\n  return (\n    <PageContainer header={{ breadcrumb: {} }} className=\"agenda-container\">\n      <ProTable<AgendaType | any>\n        className=\"agenda-table\"\n        headerTitle={intl.formatMessage({\n          id: 'agenda',\n          defaultMessage: 'Agenda',\n        })}\n        actionRef={actionRef}\n        rowKey={(record) => record.id}\n        search={false}\n        toolBarRender={() => [\n          <Button type=\"primary\" key=\"primary\" onClick={() => setModalVisible(true)}>\n            <PlusOutlined /> <FormattedMessage id=\"new\" defaultMessage=\"new\" />\n          </Button>,\n        ]}\n        pagination={false}\n        dataSource={source}\n        columns={[\n          ...TableColumns,\n          {\n            width: '12%',\n            hideInSearch: true,\n            title: <FormattedMessage id=\"pages.searchTable.titleOption\" />,\n            dataIndex: 'option',\n            valueType: 'option',\n            render: (_, record) => [\n              <Button\n                key=\"edit\"\n                type=\"primary\"\n                icon={<EditOutlined />}\n                onClick={() => {\n                  if ('asCandidate' in record) {\n                    setFields(candidateData.find(({ id }) => id === record.id) ?? null);\n                  } else {\n                    setFields(data.find(({ id }) => id === record.id) ?? null);\n                  }\n                  setModalVisible(true);\n                }}\n              />,\n              <Popconfirm\n                key=\"delete\"\n                title={\n                  <FormattedMessage\n                    id=\"deleteQuestion\"\n                    defaultMessage=\"Are you sure to delete this record?\"\n                  />\n                }\n                onConfirm={async () => {\n                  if ('asCandidate' in record) {\n                    setCandidateData((current) => current.filter(({ id }) => id !== record.id));\n                    return;\n                  }\n                  setReceivedData((current) => current.filter(({ id }) => id !== record.id));\n                }}\n                okText={<FormattedMessage id=\"yes\" />}\n                cancelText={<FormattedMessage id=\"no\" />}\n              >\n                <Tooltip title={<FormattedMessage id=\"delete\" defaultMessage=\"delete\" />}>\n                  <Button type=\"primary\" icon={<DeleteOutlined />} danger />\n                </Tooltip>\n              </Popconfirm>,\n            ],\n          },\n        ]}\n        components={{\n          body: {\n            wrapper: DraggableContainer,\n            row: DraggableBodyRow,\n          },\n        }}\n      />\n\n      {!!candidateData.length && (\n        <div className=\"legend\">\n          <div className=\"legend__dot\" />\n          <p className=\"legend__label\">\n            <FormattedMessage id=\"changesToBeApproved\" defaultMessage=\"Changes to be approved\" />\n          </p>\n        </div>\n      )}\n\n      {wasOrderChanged && (\n        <div className=\"legend\">\n          <SwapOutlined className=\"legend__icon\" />\n          <p className=\"legend__label\">\n            <FormattedMessage id=\"orderHasBeenChanged\" defaultMessage=\"Order has been changed\" />\n          </p>\n        </div>\n      )}\n\n      <AgendaModalForm\n        name={modalVisible}\n        visible={modalVisible}\n        fields={fields}\n        onVisibleChange={(value: boolean) => {\n          if (value === false) {\n            setModalVisible(false);\n            setFields(null);\n          }\n        }}\n        onFinish={async (value: any) => {\n          if (value.id) {\n            const isCandidate = 'asCandidate' in value;\n            const referenceSource = isCandidate ? candidateData : data;\n\n            const valueInReferenceSource = referenceSource.find(({ id }) => id === value.id);\n            const wasValueUpdated = valueInReferenceSource\n              ? JSON.stringify(valueInReferenceSource) !== JSON.stringify(value)\n              : false;\n\n            if (wasValueUpdated) {\n              const mappedCandidateAgenda = isCandidate\n                ? candidateData.map((agenda) => (agenda.id === value.id ? value : agenda))\n                : [...candidateData, { ...value, asCandidate: true }];\n              setCandidateData(mappedCandidateAgenda);\n            }\n\n            setFields(null);\n            setModalVisible(false);\n            return;\n          }\n          setCandidateData((current) => [\n            ...current,\n            { ...value, asCandidate: true, id: Date.now() },\n          ]);\n          setFields(null);\n          setModalVisible(false);\n        }}\n      />\n    </PageContainer>\n  );\n};\n\nexport default Agenda;\n","//import { Prompt, useIntl } from 'umi';\n// TODO #1023 there is no Prompt in umi anymore\n\nimport { FormattedMessage } from 'umi';\n\nconst UnsavedPrompt = ({ show }: { show?: boolean }) => {\n  return show ? (\n    <p>\n      <FormattedMessage id=\"unsaved_changes\" />\n    </p>\n  ) : (\n    <></>\n  );\n\n  // return (\n  //   <Prompt\n  //     when={show}\n  //     message={intl.formatMessage({\n  //       id: 'unsaved_changes',\n  //     })}\n  //   />\n  // );\n};\n\nexport default UnsavedPrompt;\n","import ProCard from '@ant-design/pro-card';\nimport ProForm, {\n  ProFormDatePicker,\n  ProFormDigit,\n  ProFormSelect,\n  ProFormText,\n  ProFormTextArea,\n} from '@ant-design/pro-form';\nimport { Col, Row, Spin, message } from 'antd';\nimport { useEffect, useMemo, useState } from 'react';\n\nimport WysiwygMarkdown from '@/components/WysiwygMarkdown';\nimport { PageContainer } from '@ant-design/pro-layout';\n\nimport UserSelect from '@/components/UserSelect';\nimport { useCallback } from 'react';\nimport { FormattedMessage, history, useIntl, useParams } from 'umi';\n\nimport {\n  createStationaryEvent,\n  getStationaryEvent,\n  updateStationaryEvent,\n} from '@/services/escola-lms/stationary_events';\n\nimport ProFormImageUpload from '@/components/ProFormImageUpload';\n\nimport Agenda from '@/components/Agenda';\nimport CategoryCheckboxTree from '@/components/CategoryCheckboxTree';\nimport ProductWidget from '@/components/ProductWidget';\nimport UnsavedPrompt from '@/components/UnsavedPrompt';\nimport UserSubmissions from '@/components/UsersSubmissions';\nimport { categoriesArrToIds, mapper, splitImagePath } from '@/utils/utils';\nimport './index.css';\n\nexport type StationaryEventType = Omit<\n  EscolaLms.StationaryEvents.Models.StationaryEvent,\n  'categories' | 'agenda' | 'image_url'\n> & {\n  image_url?: string;\n  categories: (number | string)[];\n  agenda: AgendaType[] | undefined;\n};\n\nexport interface AgendaType {\n  id: number;\n  title: string;\n  subtitle: string;\n  hour: string;\n  tutors: number[];\n  description?: string;\n  asCandidate?: boolean;\n}\n\nconst StationaryEventForm = () => {\n  const intl = useIntl();\n  const params = useParams<{ id?: string; tab?: string }>();\n  const { id, tab = 'attributes' } = params;\n  const isNew = id === 'new';\n  const [agendaData, setAgendaData] = useState<string | null>(null);\n  const [unsavedChanges, setUnsavedChanges] = useState(false);\n  const [data, setData] = useState<Partial<StationaryEventType>>();\n  const [form] = ProForm.useForm();\n  const [lastDataUpdateDate, setLastDataUpdateDate] = useState(new Date());\n\n  //  Promise<API.DefaultResponse<EscolaLms.StationaryEvents.Models.StationaryEvent>>\n  //  Promise<API.DefaultResponse<EscolaLms.StationaryEvents.Models.StationaryEvent>>\n\n  const fetchData = useCallback(async () => {\n    const response = await getStationaryEvent(Number(id));\n    if (response.success) {\n      setData({\n        ...(response.data as Omit<StationaryEventType, 'categories' | 'agenda'>),\n        categories: response?.data?.categories?.map(mapper),\n      });\n    }\n  }, [id]);\n\n  useEffect(() => {\n    if (isNew) {\n      setData({\n        name: '...',\n      });\n      return;\n    }\n\n    fetchData();\n  }, [id]);\n\n  const formProps = useMemo(\n    () => ({\n      onFinish: async (\n        values: Partial<\n          EscolaLms.StationaryEvents.Models.StationaryEvent & {\n            image_url: string;\n            agenda: AgendaType;\n          }\n        >,\n      ) => {\n        const postData = {\n          ...values,\n          agenda: agendaData,\n          authors: values.authors && values.authors.map(categoriesArrToIds),\n          categories: values.categories && values.categories.map(categoriesArrToIds),\n          image_url: data && data.image_url,\n          image_path: data && data.image_path && splitImagePath(data.image_path),\n        };\n        let response: API.DefaultResponse<EscolaLms.StationaryEvents.Models.StationaryEvent>;\n        if (isNew) {\n          response = await createStationaryEvent(postData);\n          if (response.success) {\n            setUnsavedChanges(false);\n            history.push(`/other/stationary-events/${response.data.id}`);\n          }\n        } else {\n          response = await updateStationaryEvent(Number(id), postData);\n          if (response.success) {\n            setUnsavedChanges(false);\n            setData({\n              ...(response.data as Omit<StationaryEventType, 'categories' | 'agenda'>),\n              categories: response?.data?.categories?.map(mapper),\n            });\n            setLastDataUpdateDate(new Date());\n            history.push(`/other/stationary-events/${response.data.id}/${tab}`);\n          }\n        }\n        message.success(response.message);\n      },\n      initialValues: data,\n    }),\n    [data, id, tab, agendaData],\n  );\n\n  if (!data) {\n    return <Spin />;\n  }\n\n  return (\n    <PageContainer\n      title={\n        isNew ? (\n          <FormattedMessage id=\"stationary_event\" />\n        ) : (\n          <FormattedMessage id=\"stationary_event.edit\" />\n        )\n      }\n      header={{\n        breadcrumb: {\n          routes: [\n            {\n              path: 'other/stationary-events',\n              breadcrumbName: intl.formatMessage({\n                id: 'menu.Other activities.StationaryEvents',\n              }),\n            },\n            {\n              path: String(id),\n              breadcrumbName: intl.formatMessage({\n                id: 'form',\n              }),\n            },\n            {\n              path: '/',\n              breadcrumbName: intl.formatMessage({\n                id: id === 'new' ? 'new' : 'edit',\n              }),\n            },\n            {\n              path: String(tab),\n              breadcrumbName: intl.formatMessage({\n                id: String(tab),\n              }),\n            },\n          ],\n        },\n      }}\n    >\n      <ProCard\n        tabs={{\n          type: 'card',\n          activeKey: tab,\n          onChange: (key) => history.push(`/other/stationary-events/${id}/${key}`),\n        }}\n      >\n        <ProCard.TabPane key=\"attributes\" tab={<FormattedMessage id=\"attributes\" />}>\n          <UnsavedPrompt show={unsavedChanges} />{' '}\n          <ProForm\n            {...formProps}\n            form={form}\n            onValuesChange={() => {\n              setUnsavedChanges(true);\n            }}\n          >\n            <ProForm.Group>\n              <ProFormText\n                width=\"md\"\n                name=\"name\"\n                label={<FormattedMessage id=\"name\" />}\n                tooltip={<FormattedMessage id=\"name_tooltip\" />}\n                placeholder={intl.formatMessage({\n                  id: 'name',\n                  defaultMessage: 'name',\n                })}\n                required\n              />\n              <ProFormText\n                width=\"md\"\n                name=\"place\"\n                label={<FormattedMessage id=\"place\" />}\n                tooltip={<FormattedMessage id=\"place_tooltip\" />}\n                placeholder={intl.formatMessage({\n                  id: 'place',\n                  defaultMessage: 'place',\n                })}\n                required\n              />\n              <ProForm.Item\n                name=\"authors\"\n                label={<FormattedMessage id=\"tutor\" />}\n                valuePropName=\"value\"\n              >\n                <UserSelect multiple />\n              </ProForm.Item>\n              <ProFormDigit\n                width=\"xs\"\n                name=\"max_participants\"\n                label={<FormattedMessage id=\"max_participants\" />}\n                tooltip={<FormattedMessage id=\"max_participants_tooltip\" />}\n                placeholder={intl.formatMessage({\n                  id: 'max_participants',\n                  defaultMessage: 'max_participants',\n                })}\n                min={0}\n                max={9999}\n                fieldProps={{ step: 1 }}\n              />\n              <ProFormSelect\n                name=\"status\"\n                width=\"md\"\n                label={<FormattedMessage id=\"status\" />}\n                tooltip={<FormattedMessage id=\"status_consultation_tooltip\" />}\n                valueEnum={{\n                  draft: intl.formatMessage({\n                    id: 'draft',\n                    defaultMessage: 'draft',\n                  }),\n                  published: intl.formatMessage({\n                    id: 'published',\n                    defaultMessage: 'published',\n                  }),\n                  archived: intl.formatMessage({\n                    id: 'archived',\n                    defaultMessage: 'archived',\n                  }),\n                }}\n                initialValue={{\n                  draft: intl.formatMessage({\n                    id: 'draft',\n                    defaultMessage: 'draft',\n                  }),\n                }}\n                placeholder={intl.formatMessage({\n                  id: 'status',\n                })}\n                rules={[{ required: true, message: <FormattedMessage id=\"select\" /> }]}\n              />\n            </ProForm.Group>\n\n            <ProForm.Group>\n              <ProFormDatePicker\n                width=\"sm\"\n                name=\"started_at\"\n                label={<FormattedMessage id=\"started_at\" />}\n                tooltip={<FormattedMessage id=\"started_at_tooltip\" />}\n                placeholder={intl.formatMessage({\n                  id: 'started_at',\n                  defaultMessage: 'started_at',\n                })}\n              />\n              <ProFormDatePicker\n                width=\"sm\"\n                name=\"finished_at\"\n                label={<FormattedMessage id=\"finished_at\" />}\n                tooltip={<FormattedMessage id=\"finished_at_tooltip\" />}\n                placeholder={intl.formatMessage({\n                  id: 'finished_at',\n                  defaultMessage: 'finished_at',\n                })}\n              />\n            </ProForm.Group>\n\n            <ProForm.Group>\n              <ProFormTextArea\n                width=\"lg\"\n                name=\"short_desc\"\n                label={<FormattedMessage id=\"short_description\" />}\n                tooltip={<FormattedMessage id=\"short_description\" />}\n              />\n            </ProForm.Group>\n\n            <ProForm.Item\n              name=\"program\"\n              label={<FormattedMessage id=\"program\" />}\n              tooltip={<FormattedMessage id=\"program_tooltip\" />}\n              valuePropName=\"value\"\n            >\n              <WysiwygMarkdown directory={`stationary_events/${id}/wysiwyg`} />\n            </ProForm.Item>\n\n            <ProForm.Item\n              name=\"description\"\n              label={<FormattedMessage id=\"description\" />}\n              tooltip={<FormattedMessage id=\"description_tooltip\" />}\n              valuePropName=\"value\"\n            >\n              <WysiwygMarkdown directory={`stationary_events/${id}/wysiwyg`} />\n            </ProForm.Item>\n          </ProForm>\n        </ProCard.TabPane>{' '}\n        {!isNew && (\n          <ProCard.TabPane key=\"agenda\" tab={<FormattedMessage id=\"agenda\" />}>\n            <ProForm {...formProps}>\n              <Agenda\n                data={data.agenda ?? []}\n                onCreate={(agenda) => setAgendaData(agenda)}\n                lastDataUpdateDate={lastDataUpdateDate}\n              />\n            </ProForm>\n          </ProCard.TabPane>\n        )}\n        {!isNew && (\n          <ProCard.TabPane key=\"product\" tab={<FormattedMessage id=\"product\" />}>\n            {id && (\n              <ProductWidget\n                productable={{\n                  class_type: 'App\\\\Models\\\\StationaryEvent',\n                  class_id: id,\n                  name: String(data.name),\n                  quantity: 1,\n                }}\n              />\n            )}\n          </ProCard.TabPane>\n        )}\n        {!isNew && (\n          <ProCard.TabPane key=\"media\" tab={<FormattedMessage id=\"media\" />}>\n            <ProForm {...formProps}>\n              <ProFormImageUpload\n                folder={`stationary-events/${id}`}\n                title=\"image\"\n                action={`/api/admin/stationary-events/${id}/?_method=PUT`}\n                src_name=\"image_url\"\n                form_name=\"image\"\n                getUploadedSrcField={(info) => info.file.response.data.image_url}\n                setPath={(removedPath) =>\n                  setData((prevState) => ({\n                    ...prevState,\n                    ...removedPath,\n                  }))\n                }\n              />\n            </ProForm>\n          </ProCard.TabPane>\n        )}\n        {!isNew && (\n          <ProCard.TabPane key=\"categories\" tab={<FormattedMessage id=\"categories\" />}>\n            <Row>\n              <Col span={12}>\n                <ProForm {...formProps}>\n                  <ProForm.Item\n                    label={<FormattedMessage id=\"categories\" />}\n                    name=\"categories\"\n                    valuePropName=\"value\"\n                  >\n                    <CategoryCheckboxTree multiple={false} />\n                  </ProForm.Item>\n                </ProForm>\n              </Col>\n            </Row>\n          </ProCard.TabPane>\n        )}\n        {!isNew && (\n          <ProCard.TabPane key=\"user_submission\" tab={<FormattedMessage id=\"user_submission\" />}>\n            <Row>\n              <Col span={12}>\n                {id && <UserSubmissions id={Number(id)} type=\"App\\Models\\StationaryEvent\" />}\n              </Col>\n            </Row>\n          </ProCard.TabPane>\n        )}\n      </ProCard>\n    </PageContainer>\n  );\n};\n\nexport default StationaryEventForm;\n"],"names":["SwapOutlined","props","ref","AntdIcon","RefIcon","_excluded","_excluded2","valueType","TimeRangePicker","_ref","fieldProps","proFieldProps","rest","context","FieldContext","value","dateArrayFormatter","ProFormTimePicker","_ref2","WrappedProFormTimePicker","AgendaModalForm","intl","useIntl","visible","fields","onVisibleChange","onFinish","id","_Form$useForm","Form","useForm","_Form$useForm2","_slicedToArray","form","useEffect","setFieldsValue","resetFields","_jsx","ModalForm","title","formatMessage","defaultMessage","width","newVisibleValue","formData","_objectSpread","children","_jsxs","ProForm","ProFormText","label","FormattedMessage","rules","required","name","Item","convertValue","v","valuePropName","UserSelect","multiple","ProFormTextArea","hidden","SortableItem","SortableElement","SortableBody","SortableContainer","DragHandle","SortableHandle","MenuOutlined","style","cursor","color","Agenda","data","onCreate","lastDataUpdateDate","actionRef","useRef","agendaOrder","_useState","useState","_useState2","source","setSource","_useState3","_useState4","setFields","_useState5","_useState6","modalVisible","setModalVisible","_useState7","_useState8","receivedData","setReceivedData","_useState9","_useState10","candidateData","setCandidateData","_useState11","_useState12","wasOrderChanged","setWasOrderChanged","TableColumns","dataIndex","className","render","hideInSearch","renderText","length","concat","slice","subtitle","_","tutors","Space","map","tutorId","TypeButtonDrawer","type","type_id","description","trim","onSortEnd","_ref3","oldIndex","newIndex","newData","arrayMoveImmutable","filter","Boolean","DraggableContainer","useDragHandle","disableAutoscroll","helperClass","DraggableBodyRow","_ref4","_source$index","restProps","Object","assign","_objectDestructuringEmpty","index","findIndex","_ref5","updatedRestProps","asCandidate","current","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dataResponse","uniqueData","newItems","sortedData","mergedData","wrap","_context","prev","next","abrupt","_toConsumableArray","reduce","acc","item","arr","_ref7","duplicatedItem","find","i","isInAccumulator","_ref8","_ref9","singleSource","idx","_ref10","stop","a","hour","JSON","stringify","sortedSource","_ref11","checkIfOrderWasChanged","PageContainer","header","breadcrumb","ProTable","headerTitle","rowKey","record","search","toolBarRender","Button","onClick","PlusOutlined","pagination","dataSource","columns","icon","EditOutlined","_candidateData$find","_ref12","_data$find","_ref13","Popconfirm","onConfirm","_callee2","_context2","_ref15","_ref16","okText","cancelText","Tooltip","DeleteOutlined","danger","components","body","wrapper","row","_ref17","_callee3","isCandidate","referenceSource","valueInReferenceSource","wasValueUpdated","mappedCandidateAgenda","_context3","_ref18","agenda","Date","now","_x","apply","arguments","UnsavedPrompt","show","_Fragment","StationaryEventForm","_data$agenda","params","useParams","_params$tab","tab","isNew","agendaData","setAgendaData","unsavedChanges","setUnsavedChanges","setData","_ProForm$useForm","_ProForm$useForm2","setLastDataUpdateDate","fetchData","useCallback","response","_response$data","getStationaryEvent","Number","sent","success","categories","mapper","formProps","useMemo","_onFinish","values","postData","_response","authors","categoriesArrToIds","image_url","image_path","splitImagePath","createStationaryEvent","history","push","updateStationaryEvent","message","initialValues","routes","path","breadcrumbName","String","ProCard","tabs","activeKey","onChange","key","TabPane","onValuesChange","tooltip","placeholder","ProFormDigit","min","max","step","ProFormSelect","valueEnum","draft","published","archived","initialValue","ProFormDatePicker","WysiwygMarkdown","directory","ProductWidget","productable","class_type","class_id","quantity","ProFormImageUpload","folder","action","src_name","form_name","getUploadedSrcField","info","file","setPath","removedPath","prevState","Row","Col","span","CategoryCheckboxTree","UserSubmissions","Spin"],"sourceRoot":""}