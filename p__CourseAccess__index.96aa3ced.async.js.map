{"version":3,"file":"p__CourseAccess__index.96aa3ced.async.js","mappings":"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","sources":["webpack://ant-design-pro/./src/components/CollectionSelect/index.tsx","webpack://ant-design-pro/./src/services/escola-lms/course_access.ts","webpack://ant-design-pro/./src/pages/CourseAccess/index.tsx"],"sourcesContent":["import { Select, Spin } from 'antd';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\n\nimport {\n  getConsultation,\n  consultations as getConsultations,\n} from '@/services/escola-lms/consultations';\nimport { getCourse, course as getCourses } from '@/services/escola-lms/course';\nimport { getWebinar, webinars as getWebinars } from '@/services/escola-lms/webinars';\nimport type { DefaultOptionType, LabeledValue } from 'antd/lib/select';\nimport { FormattedMessage } from 'umi';\n\ntype CollectionModelItem = {\n  id: number;\n  name: string;\n};\n\n// this creates a simple state object with typegurad\nconst prepareObj = (arr: (API.Course | API.Webinar | API.Consultation)[]) =>\n  arr.map((item: API.Course | API.Webinar | API.Consultation) => {\n    if ('name' in item) {\n      return {\n        id: Number(item.id),\n        name: item.name,\n      };\n    }\n\n    return {\n      id: Number(item.id),\n      name: item.title ? item.title : '',\n    };\n  });\n\nexport const CollectionSelect: React.FC<{\n  state?: {\n    type: number;\n  };\n  multiple?: boolean;\n  value?: string;\n  onChange?: (\n    value: string | string[] | number | number[] | LabeledValue | LabeledValue[],\n    option: DefaultOptionType | DefaultOptionType[],\n  ) => void;\n  defaultValue?: string | string[] | number | number[] | LabeledValue | LabeledValue[];\n  modelType?: string;\n}> = ({ value, onChange, multiple = false, defaultValue, modelType = 'COURSE' }) => {\n  const [modelCollection, setModelCollection] = useState<CollectionModelItem[]>([]);\n  const [fetching, setFetching] = useState(false);\n\n  const abortController = useRef<AbortController>();\n\n  const modelCollectionMethod = useCallback(\n    (params: Partial<API.CourseParams & API.WebinarsParams & API.ConsultationsParams>) => {\n      switch (modelType) {\n        case 'COURSE':\n          return getCourses(params, { signal: abortController?.current?.signal });\n        case 'WEBINAR':\n          return getWebinars(params, { signal: abortController?.current?.signal });\n        case 'CONSULTATIONS':\n          return getConsultations(params, { signal: abortController?.current?.signal });\n        default:\n          return getCourses(params, { signal: abortController?.current?.signal });\n      }\n    },\n    [modelType, abortController],\n  );\n  const modelSingleMethod = useCallback(\n    (id: string | number) => {\n      switch (modelType) {\n        case 'COURSE':\n          return getCourse(Number(id), { signal: abortController.current?.signal });\n        case 'WEBINAR':\n          return getWebinar(Number(id), { signal: abortController.current?.signal });\n        case 'CONSULTATIONS':\n          return getConsultation(Number(id), { signal: abortController.current?.signal });\n        default:\n          return getCourse(Number(id), { signal: abortController.current?.signal });\n      }\n    },\n    [modelType, abortController],\n  );\n\n  const fetch = useCallback(\n    (search?: string) => {\n      setFetching(true);\n      if (abortController.current) {\n        abortController.current.abort();\n      }\n\n      abortController.current = new AbortController();\n\n      modelCollectionMethod(\n        search\n          ? { name: search }\n          : ({} as Partial<API.CourseParams & API.WebinarsParams & API.ConsultationsParams>),\n      )\n        .then((response) => {\n          if (response.success) {\n            setModelCollection(prepareObj(response.data));\n          }\n        })\n        .catch((error) => console.error(error))\n        .finally(() => {\n          setFetching(false);\n        });\n    },\n    [modelType],\n  );\n\n  const onSearch = useCallback(\n    (search: string) => {\n      fetch(search);\n    },\n    [fetch],\n  );\n\n  useEffect(() => {\n    abortController.current = new AbortController();\n\n    if (value) {\n      modelSingleMethod(Number(value)).then((response) => {\n        if (response) {\n          if (response.success) {\n            setModelCollection((prevCourses) => [...prevCourses, ...prepareObj([response.data])]);\n          }\n        }\n      });\n    }\n    return () => {\n      if (abortController.current) {\n        abortController.current.abort();\n      }\n    };\n  }, [value, modelType]);\n\n  return (\n    <Select<string | string[] | number | number[] | LabeledValue | LabeledValue[]>\n      defaultValue={defaultValue}\n      onFocus={() => fetch()}\n      allowClear\n      style={{ width: '100%' }}\n      value={value}\n      onChange={onChange}\n      mode={multiple ? 'multiple' : undefined}\n      showSearch\n      onSearch={onSearch}\n      placeholder={<FormattedMessage id=\"select_content\" defaultMessage=\"select_content\" />}\n      optionFilterProp=\"children\"\n      filterOption={(input, option) => {\n        if (option && option.children) {\n          return option?.children?.toString().toLowerCase().indexOf(input.toLowerCase()) >= 0;\n        }\n        return true;\n      }}\n      loading={fetching}\n      notFoundContent={fetching ? <Spin size=\"small\" /> : null}\n      optionLabelProp=\"label\"\n    >\n      {modelCollection.map((modelItem: CollectionModelItem) => (\n        <Select.Option key={modelItem.id} value={modelItem.id} label={modelItem.name}>\n          {modelItem.name}\n        </Select.Option>\n      ))}\n    </Select>\n  );\n};\n","import { request } from 'umi';\n\nimport type { AxiosRequestConfig } from '@umijs/max';\n\n/**  GET /api/admin/course-access-enquiries */\nexport async function courseAccess(\n  params: API.CourseAccessEnquiryListParams,\n  options?: AxiosRequestConfig,\n) {\n  return request<API.CourseAccessEnquiryList>(`/api/admin/course-access-enquiries`, {\n    method: 'GET',\n    params: {\n      ...params,\n      per_page: params.pageSize,\n      page: params.current,\n    },\n    ...(options || {}),\n  });\n}\n\n/**  DELETE /api/admin/course-access-enquiries/:id */\nexport async function deleteCourseAccess(id: number, options?: AxiosRequestConfig) {\n  return request<API.DefaultResponse<API.CourseAccessEnquiry>>(\n    `/api/admin/course-access-enquiries/${id}`,\n    {\n      method: 'DELETE',\n      ...(options || {}),\n    },\n  );\n}\n\n/**  POST /api/admin/tasks/:id */\nexport async function approveCourseAccess(id: number, options?: AxiosRequestConfig) {\n  return request<API.DefaultResponse<API.CourseAccessEnquiry>>(\n    `/api/admin/course-access-enquiries/approve/${id}`,\n    {\n      method: 'POST',\n      ...(options || {}),\n    },\n  );\n}\n","import UserSelect from '@/components/UserSelect';\nimport { DATETIME_FORMAT } from '@/consts/dates';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { PageContainer } from '@ant-design/pro-layout';\nimport type { ActionType, ProColumns } from '@ant-design/pro-table';\nimport ProTable from '@ant-design/pro-table';\nimport { Button, Drawer, Popconfirm, Tag, Tooltip, Typography, message } from 'antd';\nimport { format } from 'date-fns';\nimport React, { useRef, useState } from 'react';\nimport { FormattedMessage, useIntl } from 'umi';\n\nimport { CollectionSelect } from '@/components/CollectionSelect';\nimport TypeButtonDrawer from '@/components/TypeButtonDrawer';\nimport {\n  approveCourseAccess,\n  courseAccess,\n  deleteCourseAccess,\n} from '@/services/escola-lms/course_access';\n\nconst handleRemove = async (id: number) => {\n  return deleteCourseAccess(id).then((response) => {\n    if (response.success) {\n      message.success(response.message);\n    }\n    return true;\n  });\n};\n\nconst DataDisplay: React.FC<{ data: unknown }> = ({ data }) => {\n  const [visible, setVisible] = useState(false);\n  return data && typeof data === 'object' && Object.keys(data).length > 0 ? (\n    <React.Fragment>\n      <Button size=\"small\" onClick={() => setVisible(true)}>\n        <FormattedMessage id=\"show\" defaultMessage=\"show\" />\n      </Button>\n      <Drawer width={700} open={visible} onClose={() => setVisible(false)}>\n        <Typography.Paragraph>\n          {Object.keys(data).map((key) => (\n            <p key={key}>\n              <FormattedMessage id={key} defaultMessage={key} />:\n              <span> {data[key as keyof typeof data]}</span>\n            </p>\n          ))}\n        </Typography.Paragraph>\n      </Drawer>\n    </React.Fragment>\n  ) : (\n    <React.Fragment />\n  );\n};\n\nconst TableList: React.FC = () => {\n  const actionRef = useRef<ActionType>();\n  const intl = useIntl();\n\n  const columns: ProColumns<API.CourseAccessEnquiryListItem>[] = [\n    {\n      title: <FormattedMessage id=\"ID\" defaultMessage=\"ID\" />,\n      dataIndex: 'id',\n      hideInSearch: true,\n      sorter: true,\n      width: '80px',\n    },\n\n    {\n      title: <FormattedMessage id=\"course\" defaultMessage=\"course\" />,\n      dataIndex: 'course_id',\n      renderFormItem: (item, { type, defaultRender, ...rest }, form) => {\n        if (type === 'form') {\n          return null;\n        }\n        const stateType = form.getFieldValue('state');\n        return (\n          <CollectionSelect\n            {...rest}\n            state={{\n              type: stateType,\n            }}\n          />\n        );\n      },\n      render: (_, record) =>\n        record.course &&\n        record.course.id && (\n          <TypeButtonDrawer key={'course_id'} type=\"App\\Models\\Course\" type_id={record.course.id} />\n        ),\n    },\n    {\n      title: <FormattedMessage id=\"user\" defaultMessage=\"user\" />,\n      dataIndex: 'user_id',\n      renderFormItem: (item, { type, defaultRender, ...rest }, form) => {\n        if (type === 'form') {\n          return null;\n        }\n        const stateType = form.getFieldValue('state');\n        return (\n          <UserSelect\n            {...rest}\n            state={{\n              type: stateType,\n            }}\n          />\n        );\n      },\n      render: (_, record) =>\n        record.user?.id && (\n          <TypeButtonDrawer\n            key={'user'}\n            type=\"EscolaLms\\Core\\Models\\User\"\n            type_id={record.user?.id}\n          />\n        ),\n    },\n    {\n      title: <FormattedMessage id=\"created_at\" defaultMessage=\"Created at\" />,\n      dataIndex: 'created_at',\n      hideInSearch: true,\n      sorter: true,\n      render: (_, record) =>\n        record.created_at && format(new Date(record.created_at), DATETIME_FORMAT),\n    },\n    {\n      title: <FormattedMessage id=\"status\" defaultMessage=\"Status\" />,\n      dataIndex: 'status',\n      sorter: true,\n      valueType: 'select',\n      valueEnum: {\n        pending: {\n          text: (\n            <Tag color=\"processing\">\n              <FormattedMessage id=\"pending\" defaultMessage=\"pending\" />\n            </Tag>\n          ),\n          status: 'pending',\n        },\n        approved: {\n          text: (\n            <Tag color=\"success\">\n              <FormattedMessage id=\"approved\" defaultMessage=\"approved\" />\n            </Tag>\n          ),\n          status: 'approved',\n        },\n      },\n      render: (_, record) =>\n        record.status === 'pending' ? (\n          <Button\n            size=\"small\"\n            type=\"primary\"\n            onClick={() => {\n              approveCourseAccess(record.id).then((response) => {\n                if (response.success) {\n                  if (actionRef.current) {\n                    actionRef.current.reload();\n                  }\n                }\n              });\n            }}\n          >\n            <FormattedMessage id=\"approve\" defaultMessage=\"Approve\" />\n          </Button>\n        ) : (\n          <Tag color={record.status === 'approved' ? 'success' : 'processing'}>\n            <FormattedMessage id={record.status} defaultMessage={record.status} />\n          </Tag>\n        ),\n    },\n    {\n      title: <FormattedMessage id=\"extra_data\" defaultMessage=\"Extra data\" />,\n      dataIndex: 'data',\n      hideInSearch: true,\n      render: (_, record) => <DataDisplay data={record.data} />,\n    },\n    {\n      hideInSearch: true,\n      title: <FormattedMessage id=\"pages.searchTable.titleOption\" defaultMessage=\"option\" />,\n      dataIndex: 'option',\n      valueType: 'option',\n      render: (_, record) => [\n        <Popconfirm\n          key=\"delete\"\n          title={\n            <FormattedMessage\n              id=\"deleteQuestion\"\n              defaultMessage=\"Are you sure to delete this record?\"\n            />\n          }\n          onConfirm={async () => {\n            const success = await handleRemove(record.id);\n            if (success) {\n              if (actionRef.current) {\n                actionRef.current.reload();\n              }\n            }\n          }}\n          okText={<FormattedMessage id=\"yes\" />}\n          cancelText={<FormattedMessage id=\"no\" />}\n        >\n          <Tooltip title={<FormattedMessage id=\"delete\" defaultMessage=\"delete\" />}>\n            <Button type=\"primary\" icon={<DeleteOutlined />} danger />\n          </Tooltip>\n        </Popconfirm>,\n      ],\n    },\n  ];\n\n  return (\n    <PageContainer>\n      <ProTable<API.CourseAccessEnquiryListItem, API.CourseAccessEnquiryListParams>\n        headerTitle={intl.formatMessage({\n          id: 'courseAccessEnquiries',\n          defaultMessage: 'Course Access Enquiries',\n        })}\n        search={{\n          layout: 'vertical',\n        }}\n        actionRef={actionRef}\n        rowKey=\"id\"\n        request={({ pageSize, current, course_id, status, user_id }, sort) => {\n          const sortArr = sort && Object.entries(sort)[0];\n          return courseAccess({\n            pageSize,\n            current,\n            course_id,\n            user_id,\n            status,\n            order_by: sortArr && sortArr[0],\n            order: sortArr ? (sortArr[1] === 'ascend' ? 'ASC' : 'DESC') : undefined,\n          }).then((response) => {\n            if (response.success) {\n              return {\n                data: response.data,\n                total: response.meta.total,\n                success: true,\n              };\n            }\n            return [];\n          });\n        }}\n        columns={columns}\n      />\n    </PageContainer>\n  );\n};\n\nexport default TableList;\n"],"names":["prepareObj","arr","map","item","id","Number","name","title","CollectionSelect","_ref","value","onChange","_ref$multiple","multiple","defaultValue","_ref$modelType","modelType","_useState","useState","_useState2","_slicedToArray","modelCollection","setModelCollection","_useState3","_useState4","fetching","setFetching","abortController","useRef","modelCollectionMethod","useCallback","params","_abortController$curr","_abortController$curr2","_abortController$curr3","_abortController$curr4","getCourses","signal","current","getWebinars","getConsultations","modelSingleMethod","_abortController$curr5","_abortController$curr6","_abortController$curr7","_abortController$curr8","getCourse","getWebinar","getConsultation","fetch","search","abort","AbortController","then","response","success","data","error","console","onSearch","useEffect","prevCourses","concat","_toConsumableArray","_jsx","Select","onFocus","allowClear","style","width","mode","undefined","showSearch","placeholder","FormattedMessage","defaultMessage","optionFilterProp","filterOption","input","option","children","_option$children","toString","toLowerCase","indexOf","loading","notFoundContent","Spin","size","optionLabelProp","modelItem","Option","label","courseAccess","_x","_x2","_courseAccess","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","options","wrap","_context","prev","next","abrupt","request","_objectSpread","method","per_page","pageSize","page","stop","deleteCourseAccess","_x3","_x4","_deleteCourseAccess","_callee2","_context2","approveCourseAccess","_x5","_x6","_approveCourseAccess","_callee3","_context3","handleRemove","message","DataDisplay","_ref2","visible","setVisible","_typeof","Object","keys","length","_jsxs","React","Button","onClick","Drawer","open","onClose","Typography","Paragraph","key","TableList","actionRef","intl","useIntl","columns","dataIndex","hideInSearch","sorter","renderFormItem","_ref3","form","type","defaultRender","rest","_objectWithoutProperties","_excluded","stateType","getFieldValue","state","render","_","record","course","TypeButtonDrawer","type_id","_ref4","_excluded2","UserSelect","_record$user","_record$user2","user","created_at","format","Date","DATETIME_FORMAT","valueType","valueEnum","pending","text","Tag","color","status","approved","reload","Popconfirm","onConfirm","sent","okText","cancelText","Tooltip","icon","DeleteOutlined","danger","PageContainer","ProTable","headerTitle","formatMessage","layout","rowKey","_ref6","sort","course_id","user_id","sortArr","entries","order_by","order","total","meta"],"sourceRoot":""}