{"version":3,"sources":["webpack:///./node_modules/@ant-design/pro-form/es/components/Digit/index.js","webpack:///./src/components/UnsavedPrompt/index.tsx","webpack:///./node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/extends.js","webpack:///./node_modules/@ant-design/icons-svg/es/asn/SwapOutlined.js","webpack:///./node_modules/@ant-design/icons/es/icons/SwapOutlined.js","webpack:///./node_modules/@ant-design/pro-form/es/components/TimePicker/index.js","webpack:///./src/components/Agenda/ModalForm/index.tsx","webpack:///./src/components/Agenda/index.tsx","webpack:///./src/pages/StationaryEvents/form.tsx","webpack:///./node_modules/@ant-design/pro-form/es/components/DatePicker/DatePicker.js","webpack:///./node_modules/@ant-design/pro-form/es/components/DatePicker/MonthPicker.js","webpack:///./node_modules/@ant-design/pro-form/es/components/DatePicker/QuarterPicker.js","webpack:///./node_modules/@ant-design/pro-form/es/components/DatePicker/WeekPicker.js","webpack:///./node_modules/@ant-design/pro-form/es/components/DatePicker/YearPicker.js","webpack:///./node_modules/@ant-design/pro-form/es/components/DatePicker/index.js","webpack:///./src/components/ProductWidget/index.tsx"],"names":["_excluded","ProFormDigit","_ref","ref","fieldProps","min","proFieldProps","max","rest","_objectWithoutProperties","_jsx","ProFormField","_objectSpread","valueType","filedConfig","defaultProps","width","React","forwardRef","UnsavedPrompt","show","intl","useIntl","formatMessage","id","_excluded2","TimeRangePicker","context","useContext","FieldContext","ProField","getPopupContainer","lightFilterLabelFormatter","value","dateArrayFormatter","ProFormTimePicker","_ref2","customLightMode","WrappedProFormTimePicker","RangePicker","AgendaModalForm","props","visible","fields","onVisibleChange","onFinish","useForm","form","useEffect","setFieldsValue","resetFields","defaultMessage","newVisibleValue","formData","required","v","SortableItem","SortableElement","SortableBody","SortableContainer","DragHandle","SortableHandle","cursor","color","Agenda","data","onCreate","lastDataUpdateDate","actionRef","useRef","agendaOrder","useState","source","setSource","setFields","modalVisible","setModalVisible","receivedData","setReceivedData","candidateData","setCandidateData","wasOrderChanged","setWasOrderChanged","TableColumns","title","dataIndex","className","render","hideInSearch","renderText","length","slice","subtitle","_","tutors","map","tutorId","description","trim","onSortEnd","oldIndex","newIndex","newData","arrayMoveImmutable","filter","Boolean","DraggableContainer","DraggableBodyRow","restProps","index","findIndex","updatedRestProps","asCandidate","current","dataResponse","uniqueData","reduce","acc","item","arr","duplicatedItem","find","i","isInAccumulator","newItems","singleSource","sortedData","idx","mergedData","a","hour","JSON","stringify","sortedSource","checkIfOrderWasChanged","breadcrumb","record","body","wrapper","row","isCandidate","referenceSource","valueInReferenceSource","wasValueUpdated","mappedCandidateAgenda","agenda","Date","now","StationaryEventForm","params","useParams","tab","isNew","agendaData","setAgendaData","unsavedChanges","setUnsavedChanges","setData","ProForm","setLastDataUpdateDate","fetchData","useCallback","getStationaryEvent","Number","response","success","categories","mapper","name","formProps","useMemo","values","postData","authors","categoriesArrToIds","image_url","image_path","splitImagePath","createStationaryEvent","history","push","updateStationaryEvent","message","initialValues","routes","path","breadcrumbName","String","type","activeKey","onChange","key","step","draft","published","archived","class_type","class_id","quantity","info","file","removedPath","prevState","ProFormDatePicker","ProFormDatePickerMonth","ProFormDatePickerQuarter","ProFormDatePickerWeek","ProFormDatePickerYear","ExportComponent","Week","Month","Quarter","Year","displayName","ProductWidget","productable","setTab","newTab"],"mappings":"6FAAA,kFAEIA,GAAY,CAAC,aAAc,MAAO,gBAAiB,OAUnDC,EAAe,SAAsBC,EAAMC,EAAK,CAClD,GAAIC,GAAaF,EAAKE,WAClBC,GAAMH,EAAKG,IACXC,EAAgBJ,EAAKI,cACrBC,EAAML,EAAKK,IACXC,GAAOC,YAAyBP,EAAMF,IAE1C,MAAOU,eAAKC,IAAcC,YAAc,CACtCC,UAAW,QACXT,WAAYQ,YAAc,CACxBP,IAAKA,GACLE,IAAKA,GACJH,GACHD,IAAKA,EACLW,YAAa,CACXC,aAAc,CACZC,MAAO,SAGXV,cAAeA,GACdE,MAGuBS,QAAMC,WAAWjB,I,scCjCvCkB,EAAgB,SAAC,EAAiC,IAA/BC,GAA+B,EAA/BA,KACjBC,EAAOC,cAEb,MACE,eAAC,KAAD,CACE,KAAMF,EACN,QAASC,EAAKE,cAAc,CAC1BC,GAAI,uBAMGL,I,uGCfA,aAAoB,CACjC,UAAW,OAAO,OAAS,OAAO,OAAO,OAAS,SAAU,EAAQ,CAClE,OAAS,GAAI,EAAG,EAAI,UAAU,OAAQ,IAAK,CACzC,GAAI,GAAS,UAAU,GAEvB,OAAS,KAAO,GACV,OAAO,UAAU,eAAe,KAAK,EAAQ,IAC/C,GAAO,GAAO,EAAO,IAK3B,MAAO,IAEF,GAAS,MAAM,KAAM,W,sICb1B,GAAe,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,8TAAkU,KAAQ,OAAQ,MAAS,YACte,M,aCIX,GAAe,SAAsB,EAAO,EAAK,CACnD,MAAoB,iBAAoB,KAAU,aAAc,aAAc,GAAI,GAAQ,GAAI,CAC5F,IAAK,EACL,KAAM,OAGV,GAAa,YAAc,eACC,oBAAiB,I,wGCXzCnB,GAAY,CAAC,aAAc,iBAC3ByB,GAAa,CAAC,aAAc,iBAM5BZ,GAAY,OAGZa,GAA+BT,KAAMC,WAAW,SAAUhB,EAAMC,EAAK,CACvE,GAAIC,GAAaF,EAAKE,WAClBE,EAAgBJ,EAAKI,cACrBE,EAAOC,aAAyBP,EAAMF,IAEtC2B,EAAUC,qBAAWC,MACzB,MAAOnB,eAAKoB,KAAUlB,aAAc,CAClCT,IAAKA,EACLC,WAAYQ,aAAc,CACxBmB,kBAAmBJ,EAAQI,mBAC1B3B,GACHS,UAAW,YACXP,cAAeA,EACfQ,YAAa,CACXD,UAAW,YACXmB,0BAA2B,SAAmCC,EAAO,CACnE,MAAOC,cAAmBD,EAAO,eAGpCzB,MAQD2B,GAAoB,SAA2BC,EAAO,CACxD,GAAIhC,GAAagC,EAAMhC,WACnBE,EAAgB8B,EAAM9B,cACtBE,EAAOC,aAAyB2B,EAAOX,IAEvCE,EAAUC,qBAAWC,MACzB,MAAOnB,eAAKoB,KAAUlB,aAAc,CAClCR,WAAYQ,aAAc,CACxBmB,kBAAmBJ,EAAQI,mBAC1B3B,GACHS,UAAWA,GACXP,cAAeA,EACfQ,YAAa,CACXuB,gBAAiB,GACjBxB,UAAWA,KAEZL,KAGD8B,GAA2BH,GAC/BG,GAAyBC,YAAcb,GACxBY,UC/CFE,GAOR,SAACC,EAAU,CACd,GAAMpB,GAAOC,cAELoB,EAAmDD,EAAnDC,QAASC,EAA0CF,EAA1CE,OAAQC,EAAkCH,EAAlCG,gBAAiBC,EAAiBJ,EAAjBI,SAAUrB,EAAOiB,EAAPjB,GAEpD,GAAe,KAAKsB,UAApB,qBAAOC,EAAP,MAEAC,2BAAU,UAAM,CACd,GAAIL,EAAQ,CACVI,EAAKE,eAAeN,GACpB,OAEFI,EAAKG,eACJ,CAACP,IAGF,cAAC,KAAD,CACE,KAAMI,EACN,MAAO1B,EAAKE,cAAc,CACxBC,GAAIA,EAAK,cAAgB,aACzB2B,eAAgB3B,EAAK,cAAgB,eAEvC,MAAM,OACN,QAASkB,EACT,gBAAiB,SAACU,GAAoB,CACpCR,EAAgBQ,IAChBL,EAAKG,eAEP,SAAU,SAACG,GAAa,CACtBN,SAAKG,cACEL,EAAS,2BAAKQ,IAAN,IAAgB7B,GAAImB,IAAM,KAAN,OAAAA,EAAQnB,KAAM,SAdrD,SAiBE,eAAC,IAAQ,MAAT,WACE,cAAC,IAAD,CACE,MAAO,cAAC,IAAD,CAAkB,GAAG,QAAQ,eAAe,UACnD,MAAO,CACL,CACE8B,SAAU,KAGd,MAAM,KACN,KAAK,UAEP,cAAC,IAAD,CACE,MAAO,cAAC,IAAD,CAAkB,GAAG,WAAW,eAAe,aACtD,MAAO,CACL,CACEA,SAAU,KAGd,MAAM,KACN,KAAK,aAEP,cAAC,GAAD,CACE,KAAK,OACL,MAAO,cAAC,IAAD,CAAkB,GAAG,OAAO,eAAe,SAClD,MAAO,CACL,CACEA,SAAU,KAGd,MAAM,OAER,cAAC,IAAQ,KAAT,CACE,KAAK,SACL,MAAO,cAAC,IAAD,CAAkB,GAAG,WAC5B,MAAO,CACL,CACEA,SAAU,KAGd,aAAc,SAACC,GAAM,CACnB,MAAOA,KAET,cAAc,QAXhB,SAaE,cAAC,KAAD,CAAY,SAAQ,OAGtB,cAAC,KAAD,CACE,MAAO,cAAC,IAAD,CAAkB,GAAG,cAAc,eAAe,gBACzD,MAAO,CACL,CACED,SAAU,KAGd,MAAM,KACN,KAAK,gBAGP,cAAC,IAAQ,KAAT,CAAc,KAAK,cAAc,OAAQ,WAMlCd,M,aC5FTgB,GACJC,aAAgB,SAAChB,EAAD,OAAsD,mCAAQA,MAC1EiB,GAAeC,aAAkB,SAAClB,EAAD,OACrC,sCAAWA,MAEPmB,GAAaC,aAAe,iBAChC,eAAC,KAAD,CACE,MAAO,CACLC,OAAQ,OACRC,MAAO,YASPC,GAAS,SAAC,EAQV,IAPJC,GAOI,EAPJA,KACAC,EAMI,EANJA,SACAC,EAKI,EALJA,mBAMMC,EAAYC,mBACZC,EAAcD,iBAAwB,MACtChD,EAAOC,cAEb,GAA4BiD,mBAA6B,IAAzD,qBAAOC,EAAP,MAAeC,GAAf,MACA,GAA4BF,mBAA4B,MAAxD,qBAAO5B,GAAP,MAAe+B,EAAf,MACA,GAAwCH,mBAAkB,IAA1D,qBAAOI,EAAP,MAAqBC,EAArB,MACA,GAAwCL,mBAAuBN,GAA/D,qBAAOY,GAAP,MAAqBC,GAArB,MACA,GAA0CP,mBAAuB,IAAjE,qBAAOQ,EAAP,MAAsBC,GAAtB,MACA,GAA8CT,mBAAS,IAAvD,oBAAOU,EAAP,KAAwBC,EAAxB,KAEMC,EAA6B,CACjC,CACEC,MAAO,OACPC,UAAW,OACXrE,MAAO,KACPsE,UAAW,eACXC,OAAQ,iBAAM,eAAC,GAAD,MAEhB,CACEvE,MAAO,MACPoE,MAAO,cAAC,IAAD,CAAkB,GAAG,QAAQ,eAAe,UACnDC,UAAW,QACXG,aAAc,GACdC,WAAY,SAACL,EAAD,OAAoBA,GAAMM,OAAS,GAAf,UAAuBN,EAAMO,MAAM,EAAG,IAAtC,OAAiDP,IAEnF,CACEpE,MAAO,MACPoE,MAAO,cAAC,IAAD,CAAkB,GAAG,WAAW,eAAe,aACtDC,UAAW,WACXG,aAAc,GACdC,WAAY,SAACG,EAAD,OACVA,GAASF,OAAS,GAAlB,UAA0BE,EAASD,MAAM,EAAG,IAA5C,OAAuDC,IAE3D,CACE5E,MAAO,MACPoE,MAAO,cAAC,IAAD,CAAkB,GAAG,OAAO,eAAe,SAClDC,UAAW,OACXG,aAAc,IAEhB,CACExE,MAAO,MACPoE,MAAO,cAAC,IAAD,CAAkB,GAAG,SAAS,eAAe,WACpDC,UAAW,SACXG,aAAc,GACdD,OAAQ,SAACM,EAAD,MAAMC,GAAN,EAAMA,OAAN,MACNA,IACE,6BACGA,EAAOC,IAAI,SAACC,EAAD,OACV,eAAC,KAAD,CAAgC,KAAM,oBAAqB,QAASA,GAA7CA,SAKjC,CACEhF,MAAO,MACPoE,MAAO,cAAC,IAAD,CAAkB,GAAG,cAAc,eAAe,gBACzDC,UAAW,cACXG,aAAc,GACdC,WAAY,SAACQ,EAAD,OACTA,GAEGA,EAAYP,OAAS,GAArB,UACGO,EAAYC,OAAOP,MAAM,EAAG,IAD/B,OAEAM,EAAYC,OAHZ,OAOJC,GAAY,SAAC,EAAmE,IAAjEC,GAAiE,EAAjEA,SAAUC,EAAuD,EAAvDA,SAC7B,GAAID,IAAaC,EAAU,CACzB,GAAMC,GAAUC,aAAmB/B,EAAOmB,QAASS,EAAUC,GAAUG,OAAOC,SAC9EhC,GAAU6B,KAIRI,EAAqB,SAACjE,EAAkC,CAC5D,MACE,eAAC,GAAD,aACE,cAAa,GACb,kBAAiB,GACjB,YAAY,eACZ,UAAW0D,IACP1D,KAKJkE,GAAmB,SAAC,EAAqB,OAAhBC,EAAgB,SACvCC,EAAQrC,EAAOsC,UAAU,eAAGtF,GAAH,EAAGA,GAAH,MAAYA,KAAOoF,EAAU,kBACtDG,EAAmB,2BACpBH,GADiB,IAEpBtB,UAAW,GAAF,OAAKsB,EAAUtB,UAAf,YACN,GAACd,EAAOqC,MAAR,kBAAC,EAAeG,YAAc,uBAAyB,MAG5D,MAAO,eAAC,GAAD,aAAc,MAAOH,GAAWE,KAGzC/D,2BAAU,UAAM,CACdgC,GAAiB,IACjBF,GAAgBb,GAChBS,EAAU,MACVQ,EAAmB,IACnBZ,EAAY2C,QAAU,MACrB,CAAC9C,IAEJnB,oBAAU,UAAM,CACd,+BAAC,yGACK,EAAC6B,IAAgB,CAACE,GADvB,iDAGOmC,EAHP,sBAG0BrC,IAH1B,YAG2CE,IAEpCoC,EAAaD,EAAaE,OAAO,SAACC,EAAKC,EAAMzB,EAAG0B,GAAQ,CAC5D,GAAMtF,IAAQsF,GAAIf,OAAO,gBAAGhF,IAAH,GAAGA,GAAH,MAAYA,MAAO8F,EAAK9F,KAEjD,GAAIS,GAAMyD,OAAS,EAAG,CACpB,GAAM8B,IAAiBvF,GAAMwF,KAAK,SAACC,GAAD,OAAO,eAAiBA,MAC1D,GAAI,CAACF,GAAgB,MAAO,GAAP,mBAAWH,GAAX,CAAgBpF,GAAM,MAC3C,GAAM0F,IAAkBH,IAAkBH,EAAII,KAAK,gBAAGjG,IAAH,GAAGA,GAAH,MAAYA,MAAOgG,GAAehG,KACrF,MAAOmG,IAAkBN,EAAH,sBAAaA,GAAb,CAAkBG,KAE1C,MAAO,GAAP,mBAAWH,GAAX,CAAgBpF,GAAM,MACrB,IAEG2F,EAAWpD,EAAOkB,OACpByB,EAAWX,OACT,eAAGhF,GAAH,EAAGA,GAAH,MAAYgD,GAAOsC,UAAU,SAACe,EAAD,OAAkBA,GAAarG,KAAOA,MAAQ,KAE7E,GAEEsG,EAAatD,EAAOkB,OACtBlB,EAAOuB,IAAI,SAACuB,EAAS,CACnB,GAAMS,GAAMZ,EAAWL,UAAU,eAAGtF,IAAH,EAAGA,GAAH,MAAYA,MAAO8F,EAAK9F,KACzD,MAAO2F,GAAWY,KAEpBZ,EAEEa,EA9BP,sBA8BwBF,GA9BxB,YA8BuCF,IAEtCnD,GAAUuD,EAAWxB,OAAOC,cAhC7B,wCAkCA,CAAC5B,GAAcE,IAElB/B,oBAAU,UAAM,CACd,GAAMiF,GAAIzD,EAAOuB,IAAI,SAACuB,EAAS,CAC7B,GAAQ9F,GAAmD8F,EAAnD9F,GAAI4D,EAA+CkC,EAA/ClC,MAAOQ,EAAwC0B,EAAxC1B,SAAUsC,EAA8BZ,EAA9BY,KAAMjC,EAAwBqB,EAAxBrB,YAAaH,EAAWwB,EAAXxB,OAChD,MAAO,CACLtE,KACA4D,QACAQ,WACAsC,OACAjC,cACAH,YAGJ5B,EAASiE,KAAKC,UAAUH,IAExB,GAAMI,GAAe7D,EAAOuB,IAAI,eAAGvE,GAAH,EAAGA,GAAH,MAAYA,KAE5C,GAAI8C,EAAY2C,UAAY,KAAM,CAChC,GAAI,CAACoB,EAAa3C,OAAQ,OAC1BpB,EAAY2C,QAAUoB,EAGxB,GAAIA,EAAa3C,OAASpB,EAAY2C,QAAQvB,OAAQ,CACpD,GAAM4C,GACJH,KAAKC,UAAUC,EAAa1C,MAAM,EAAGrB,EAAY2C,QAAQvB,WACzDyC,KAAKC,UAAU9D,EAAY2C,SAE7B,GADA/B,EAAmBoD,GACf,CAACA,EAAwB,CAC3BhE,EAAY2C,QAAUoB,EACtB,QAIJnD,EAAmBiD,KAAKC,UAAUC,KAAkBF,KAAKC,UAAU9D,EAAY2C,WAC9E,CAACzC,IAGF,eAAC,KAAD,CAAe,OAAQ,CAAE+D,WAAY,IAAM,UAAU,mBAArD,UACE,cAAC,KAAD,CACE,UAAU,eACV,YAAalH,EAAKE,cAAc,CAC9BC,GAAI,SACJ2B,eAAgB,WAElB,UAAWiB,EACX,OAAQ,SAACoE,EAAD,OAAYA,GAAOhH,IAC3B,OAAQ,GACR,cAAe,iBAAM,CACnB,qBAAQ,KAAK,UAAwB,QAAS,iBAAMoD,GAAgB,KAApE,UACE,cAAC,KAAD,IADF,IACmB,cAAC,IAAD,CAAkB,GAAG,MAAM,eAAe,UADlC,aAI7B,WAAY,GACZ,WAAYJ,EACZ,QAAO,UACFW,EADE,CAEL,CACEnE,MAAO,MACPwE,aAAc,GACdJ,MAAO,cAAC,IAAD,CAAkB,GAAG,kCAC5BC,UAAW,SACXxE,UAAW,SACX0E,OAAQ,SAACM,EAAG2C,EAAJ,OAAe,CACrB,oBAEE,KAAK,UACL,KAAM,cAAC,KAAD,IACN,QAAS,UAAM,CACb,GAAI,eAAiBA,GAAQ,OAC3B9D,EAAS,GAACK,EAAc0C,KAAK,eAAGjG,GAAH,EAAGA,GAAH,MAAYA,KAAOgH,EAAOhH,QAA9C,mBAAqD,UACzD,OACLkD,EAAS,GAACT,EAAKwD,KAAK,eAAGjG,GAAH,EAAGA,GAAH,MAAYA,KAAOgH,EAAOhH,QAArC,mBAA4C,MAEvDoD,EAAgB,MATd,QAYN,oBAEE,MACE,cAAC,IAAD,CACE,GAAG,iBACH,eAAe,wCAGnB,UAAS,+BAAE,2FACL,gBAAiB4D,IADZ,gBAEPxD,UAAiB,SAACiC,EAAD,OAAaA,GAAQT,OAAO,eAAGhF,GAAH,EAAGA,GAAH,MAAYA,KAAOgH,EAAOhH,OAFhE,0BAKTsD,GAAgB,SAACmC,EAAD,OAAaA,GAAQT,OAAO,eAAGhF,GAAH,EAAGA,GAAH,MAAYA,KAAOgH,EAAOhH,WAL7D,qCAOX,OAAQ,cAAC,IAAD,CAAkB,GAAG,QAC7B,WAAY,cAAC,IAAD,CAAkB,GAAG,OAhBnC,SAkBE,oBAAS,MAAO,cAAC,IAAD,CAAkB,GAAG,SAAS,eAAe,WAA7D,SACE,oBAAQ,KAAK,UAAU,KAAM,cAAC,KAAD,IAAoB,OAAM,QAlBrD,eAwBZ,WAAY,CACViH,KAAM,CACJC,QAAShC,EACTiC,IAAKhC,OAKV,CAAC,CAAC5B,EAAcW,QACf,sBAAK,UAAU,SAAf,UACE,qBAAK,UAAU,gBACf,mBAAG,UAAU,gBAAb,SACE,cAAC,IAAD,CAAkB,GAAG,sBAAsB,eAAe,gCAK/DT,GACC,sBAAK,UAAU,SAAf,UACE,cAAC,GAAD,CAAc,UAAU,iBACxB,mBAAG,UAAU,gBAAb,SACE,cAAC,IAAD,CAAkB,GAAG,sBAAsB,eAAe,gCAKhE,cAAC,GAAD,CACE,KAAMN,EACN,QAASA,EACT,OAAQhC,GACR,gBAAiB,SAACV,EAAmB,CAC/BA,IAAU,IACZ2C,GAAgB,IAChBF,EAAU,QAGd,SAAQ,gDAAE,WAAOzC,EAAP,6FACJA,EAAMT,GADF,gBAEAoH,SAAc,eAAiB3G,GAC/B4G,EAAkBD,EAAc7D,EAAgBd,EAEhD6E,EAAyBD,EAAgBpB,KAAK,eAAGjG,IAAH,EAAGA,GAAH,MAAYA,MAAOS,EAAMT,KACvEuH,EAAkBD,EACpBX,KAAKC,UAAUU,KAA4BX,KAAKC,UAAUnG,GAC1D,GAEA8G,GACIC,GAAwBJ,EAC1B7D,EAAcgB,IAAI,SAACkD,EAAD,OAAaA,GAAOzH,KAAOS,EAAMT,GAAKS,EAAQgH,IAD3B,sBAEjClE,GAFiC,4BAEb9C,GAFa,IAEN+E,YAAa,OAChDhC,GAAiBgE,IAGnBtE,EAAU,MACVE,EAAgB,IAlBV,0BAqBRI,GAAiB,SAACiC,EAAD,6BACZA,GADY,aAAC,eAEXhF,GAFU,IAEH+E,YAAa,GAAMxF,GAAI0H,KAAKC,YAE1CzE,EAAU,MACVE,EAAgB,QA1BR,sCAAF,4DAiCDZ,MCvTToF,GAAsB,UAAM,OAC1B/H,EAAOC,cACP+H,EAASC,eACP9H,EAA2B6H,EAA3B7H,GAAR,EAAmC6H,EAAvBE,MAAZ,WAAkB,aAAlB,EACMC,EAAQhI,IAAO,MACrB,GAAoC+C,mBAAwB,MAA5D,qBAAOkF,EAAP,MAAmBC,GAAnB,MACA,GAA4CnF,mBAAS,IAArD,qBAAOoF,GAAP,MAAuBC,EAAvB,MACA,GAAwBrF,qBAAxB,qBAAON,EAAP,MAAa4F,EAAb,MACA,GAAeC,IAAQhH,UAAvB,qBAAOC,GAAP,MACA,GAAoDwB,mBAAS,GAAI2E,OAAjE,qBAAO/E,GAAP,MAA2B4F,EAA3B,MAKMC,GAAYC,sBAAW,+BAAC,iHACLC,aAAmBC,OAAO3I,QADrB,GACtB4I,EADsB,OAExBA,EAASC,SACXR,EAAQ,2BACFO,EAASnG,MADR,IAELqG,WAAYF,GAAF,SAAEA,EAAUnG,QAAZ,qBAAE,EAAgBqG,cAAlB,wBAAE,EAA4BvE,IAAIwE,YALpB,qCAQ3B,CAAC/I,IAEJwB,oBAAU,UAAM,CACd,GAAIwG,EAAO,CACTK,EAAQ,CACNW,KAAM,QAER,OAGFR,MACC,CAACxI,IAEJ,GAAMiJ,IAAYC,kBAChB,iBAAO,CACL7H,SAAU,UAAF,sCAAE,WACR8H,EADQ,8FAQFC,GARE,2BASHD,GATG,IAUN1B,OAAQQ,EACRoB,QAASF,EAAOE,SAAWF,EAAOE,QAAQ9E,IAAI+E,KAC9CR,WAAYK,EAAOL,YAAcK,EAAOL,WAAWvE,IAAI+E,KACvDC,UAAW9G,GAAQA,EAAK8G,UACxBC,WAAY/G,GAAQA,EAAK+G,YAAcC,YAAehH,EAAK+G,cAdrD,CAiBJxB,EAjBI,gCAkBW0B,aAAsBN,QAlBjC,GAkBNR,EAlBM,OAmBFA,EAASC,SACXT,GAAkB,IAClBuB,IAAQC,KAAR,mCAAyChB,EAASnG,KAAKzC,MArBnD,wCAwBW6J,aAAsBlB,OAAO3I,GAAKoJ,QAxB7C,IAwBNR,EAxBM,OAyBFA,EAASC,SACXT,GAAkB,IAClBC,EAAQ,2BACFO,EAASnG,MADR,IAELqG,WAAU,IAAEF,KAAF,sBAAE,GAAUnG,QAAZ,qBAAE,EAAgBqG,cAAlB,wBAAE,EAA4BvE,IAAIwE,QAE9CR,EAAsB,GAAIb,OAC1BiC,IAAQC,KAAR,mCAAyChB,EAASnG,KAAKzC,GAAvD,YAA6D+H,SAhCzD,IAmCR,KAAQc,QAAQD,EAASkB,aAnCjB,sCAAF,yDAqCRC,cAAetH,IAEjB,CAACA,EAAMzC,EAAI+H,EAAKE,IAGlB,MAAKxF,GAKH,cAAC,KAAD,CACE,MACEuF,EACE,cAAC,IAAD,CAAkB,GAAG,qBAErB,cAAC,IAAD,CAAkB,GAAG,0BAGzB,OAAQ,CACNjB,WAAY,CACViD,OAAQ,CACN,CACEC,KAAM,0BACNC,eAAgBrK,EAAKE,cAAc,CACjCC,GAAI,4CAGR,CACEiK,KAAME,OAAOnK,GACbkK,eAAgBrK,EAAKE,cAAc,CACjCC,GAAI,UAGR,CACEiK,KAAM,IACNC,eAAgBrK,EAAKE,cAAc,CACjCC,GAAIA,IAAO,MAAQ,MAAQ,UAG/B,CACEiK,KAAME,OAAOpC,GACbmC,eAAgBrK,EAAKE,cAAc,CACjCC,GAAImK,OAAOpC,SAhCvB,SAuCE,eAAC,IAAD,CACE,KAAM,CACJqC,KAAM,OACNC,UAAWtC,EACXuC,SAAU,SAACC,EAAD,OAASZ,KAAQC,KAAR,mCAAyC5J,EAAzC,YAA+CuK,MAJtE,UAOE,eAAC,IAAQ,QAAT,CAAkC,IAAK,cAAC,IAAD,CAAkB,GAAG,eAA5D,UACE,cAAC,EAAD,CAAe,KAAMpC,KAAmB,IACxC,eAAC,IAAD,2BACMc,IADN,IAEE,KAAM1H,GACN,eAAgB,UAAM,CACpB6G,EAAkB,KAJtB,UAOE,eAAC,IAAQ,MAAT,WACE,cAAC,IAAD,CACE,MAAM,KACN,KAAK,OACL,MAAO,cAAC,IAAD,CAAkB,GAAG,SAC5B,QAAS,cAAC,IAAD,CAAkB,GAAG,iBAC9B,YAAavI,EAAKE,cAAc,CAC9BC,GAAI,OACJ2B,eAAgB,SAElB,SAAQ,KAEV,cAAC,IAAD,CACE,MAAM,KACN,KAAK,QACL,MAAO,cAAC,IAAD,CAAkB,GAAG,UAC5B,QAAS,cAAC,IAAD,CAAkB,GAAG,kBAC9B,YAAa9B,EAAKE,cAAc,CAC9BC,GAAI,QACJ2B,eAAgB,UAElB,SAAQ,KAEV,cAAC,IAAQ,KAAT,CACE,KAAK,UACL,MAAO,cAAC,IAAD,CAAkB,GAAG,UAC5B,cAAc,QAHhB,SAKE,cAAC,KAAD,CAAY,SAAQ,OAEtB,cAAC,KAAD,CACE,MAAM,KACN,KAAK,mBACL,MAAO,cAAC,IAAD,CAAkB,GAAG,qBAC5B,QAAS,cAAC,IAAD,CAAkB,GAAG,6BAC9B,YAAa9B,EAAKE,cAAc,CAC9BC,GAAI,mBACJ2B,eAAgB,qBAElB,IAAK,EACL,IAAK,KACL,WAAY,CAAE6I,KAAM,KAEtB,cAAC,KAAD,CACE,KAAK,SACL,MAAM,KACN,MAAO,cAAC,IAAD,CAAkB,GAAG,WAC5B,QAAS,cAAC,IAAD,CAAkB,GAAG,gCAC9B,UAAW,CACTC,MAAO5K,EAAKE,cAAc,CACxBC,GAAI,QACJ2B,eAAgB,UAElB+I,UAAW7K,EAAKE,cAAc,CAC5BC,GAAI,YACJ2B,eAAgB,cAElBgJ,SAAU9K,EAAKE,cAAc,CAC3BC,GAAI,WACJ2B,eAAgB,cAGpB,aAAc,CACZ8I,MAAO5K,EAAKE,cAAc,CACxBC,GAAI,QACJ2B,eAAgB,WAGpB,YAAa9B,EAAKE,cAAc,CAC9BC,GAAI,WAEN,MAAO,CAAC,CAAE8B,SAAU,GAAMgI,QAAS,cAAC,IAAD,CAAkB,GAAG,kBAI5D,eAAC,IAAQ,MAAT,WACE,cAAC,KAAD,CACE,MAAM,KACN,KAAK,aACL,MAAO,cAAC,IAAD,CAAkB,GAAG,eAC5B,QAAS,cAAC,IAAD,CAAkB,GAAG,uBAC9B,YAAajK,EAAKE,cAAc,CAC9BC,GAAI,aACJ2B,eAAgB,iBAGpB,cAAC,KAAD,CACE,MAAM,KACN,KAAK,cACL,MAAO,cAAC,IAAD,CAAkB,GAAG,gBAC5B,QAAS,cAAC,IAAD,CAAkB,GAAG,wBAC9B,YAAa9B,EAAKE,cAAc,CAC9BC,GAAI,cACJ2B,eAAgB,qBAKtB,cAAC,IAAQ,MAAT,UACE,cAAC,KAAD,CACE,MAAM,KACN,KAAK,aACL,MAAO,cAAC,IAAD,CAAkB,GAAG,sBAC5B,QAAS,cAAC,IAAD,CAAkB,GAAG,0BAIlC,cAAC,IAAQ,KAAT,CACE,KAAK,UACL,MAAO,cAAC,IAAD,CAAkB,GAAG,YAC5B,QAAS,cAAC,IAAD,CAAkB,GAAG,oBAC9B,cAAc,QAJhB,SAME,cAAC,KAAD,CAAiB,UAAS,4BAAuB3B,EAAvB,gBAG5B,cAAC,IAAQ,KAAT,CACE,KAAK,cACL,MAAO,cAAC,IAAD,CAAkB,GAAG,gBAC5B,QAAS,cAAC,IAAD,CAAkB,GAAG,wBAC9B,cAAc,QAJhB,SAME,cAAC,KAAD,CAAiB,UAAS,4BAAuBA,EAAvB,sBAnIX,cAsIF,IAClB,CAACgI,GACA,cAAC,IAAQ,QAAT,CAA8B,IAAK,cAAC,IAAD,CAAkB,GAAG,WAAxD,SACE,cAAC,IAAD,2BAAaiB,IAAb,aACE,cAAC,GAAD,CACE,KAAI,GAAExG,EAAKgF,UAAP,mBAAiB,GACrB,SAAU,SAACA,EAAD,OAAYS,IAAcT,IACpC,mBAAoB9E,SALL,UAUtB,CAACqF,GACA,cAAC,IAAQ,QAAT,CAA+B,IAAK,cAAC,IAAD,CAAkB,GAAG,YAAzD,SACGhI,GACC,cAAC,IAAD,CACE,YAAa,CACX4K,WAAY,+BACZC,SAAU7K,EACVgJ,KAAMmB,OAAO1H,EAAKuG,MAClB8B,SAAU,MAPG,WAatB,CAAC9C,GACA,cAAC,IAAQ,QAAT,CAA6B,IAAK,cAAC,IAAD,CAAkB,GAAG,UAAvD,SACE,cAAC,IAAD,2BAAaiB,IAAb,aACE,cAAC,KAAD,CACE,OAAM,4BAAuBjJ,GAC7B,MAAM,QACN,OAAM,uCAAkCA,EAAlC,iBACN,SAAS,YACT,UAAU,QACV,oBAAqB,SAAC+K,EAAD,OAAUA,GAAKC,KAAKpC,SAASnG,KAAK8G,WACvD,QAAS,SAAC0B,EAAD,OACP5C,GAAQ,SAAC6C,EAAD,oBAAC,eACJA,GACAD,YAZQ,SAmBtB,CAACjD,GACA,cAAC,IAAQ,QAAT,CAAkC,IAAK,cAAC,IAAD,CAAkB,GAAG,eAA5D,SACE,4BACE,mBAAK,KAAM,GAAX,SACE,cAAC,IAAD,2BAAaiB,IAAb,aACE,cAAC,IAAQ,KAAT,CACE,MAAO,cAAC,IAAD,CAAkB,GAAG,eAC5B,KAAK,aACL,cAAc,QAHhB,SAKE,cAAC,KAAD,CAAsB,SAAU,eATrB,cAgBtB,CAACjB,GACA,cAAC,IAAQ,QAAT,CAAuC,IAAK,cAAC,IAAD,CAAkB,GAAG,oBAAjE,SACE,4BACE,mBAAK,KAAM,GAAX,SACGhI,GAAM,cAAC,KAAD,CAAiB,GAAI2I,OAAO3I,GAAK,KAAK,sCAH9B,wBAxPpB,uBAqQI4H,iB,gJCxYXpJ,GAAY,CAAC,gBAAiB,cAK9Ba,EAAY,OAOZ8L,EAAiC1L,IAAMC,WAAW,SAAUhB,EAAMC,EAAK,CACzE,GAAIG,GAAgBJ,EAAKI,cACrBF,EAAaF,EAAKE,WAClBI,EAAOC,YAAyBP,EAAMF,IAEtC2B,EAAUC,qBAAWC,KACzB,MAAOnB,eAAKC,IAAcC,YAAc,CACtCT,IAAKA,EACLU,UAAWA,EACXT,WAAYQ,YAAc,CACxBmB,kBAAmBJ,EAAQI,mBAC1B3B,GACHE,cAAeA,EACfQ,YAAa,CACXD,UAAWA,EACXwB,gBAAiB,KAElB7B,MAEUmM,IC/BX3M,EAAY,CAAC,gBAAiB,cAK9Ba,EAAY,YAOZ+L,GAAsC3L,IAAMC,WAAW,SAAUhB,EAAMC,EAAK,CAC9E,GAAIG,GAAgBJ,EAAKI,cACrBF,EAAaF,EAAKE,WAClBI,EAAOC,YAAyBP,EAAMF,GAEtC2B,EAAUC,qBAAWC,KACzB,MAAOnB,eAAKoB,IAAUlB,YAAc,CAClCT,IAAKA,EACLU,UAAWA,EACXT,WAAYQ,YAAc,CACxBmB,kBAAmBJ,EAAQI,mBAC1B3B,GACHE,cAAeA,EACfQ,YAAa,CACXD,UAAWA,EACXwB,gBAAiB,KAElB7B,MAEUoM,KC/BX5M,EAAY,CAAC,cAKba,GAAY,cAOZgM,GAAwC5L,IAAMC,WAAW,SAAUhB,EAAMC,EAAK,CAChF,GAAIC,GAAaF,EAAKE,WAClBI,EAAOC,YAAyBP,EAAMF,GAEtC2B,EAAUC,qBAAWC,KACzB,MAAOnB,eAAKoB,IAAUlB,YAAc,CAClCT,IAAKA,EACLU,UAAWA,GACXT,WAAYQ,YAAc,CACxBmB,kBAAmBJ,EAAQI,mBAC1B3B,GACHU,YAAa,CACXD,UAAWA,GACXwB,gBAAiB,KAElB7B,MAEUqM,MC7BX7M,GAAY,CAAC,gBAAiB,cAK9Ba,EAAY,WAOZiM,GAAqC7L,IAAMC,WAAW,SAAUhB,EAAMC,EAAK,CAC7E,GAAIG,GAAgBJ,EAAKI,cACrBF,EAAaF,EAAKE,WAClBI,EAAOC,YAAyBP,EAAMF,IAEtC2B,EAAUC,qBAAWC,KACzB,MAAOnB,eAAKoB,IAAUlB,YAAc,CAClCT,IAAKA,EACLU,UAAWA,EACXT,WAAYQ,YAAc,CACxBmB,kBAAmBJ,EAAQI,mBAC1B3B,GACHE,cAAeA,EACfQ,YAAa,CACXD,UAAWA,EACXwB,gBAAiB,KAElB7B,MAEUsM,MC/BX9M,EAAY,CAAC,gBAAiB,cAK9Ba,GAAY,WAOZkM,GAAqC9L,IAAMC,WAAW,SAAUhB,EAAMC,EAAK,CAC7E,GAAIG,GAAgBJ,EAAKI,cACrBF,EAAaF,EAAKE,WAClBI,EAAOC,YAAyBP,EAAMF,GAEtC2B,EAAUC,qBAAWC,KACzB,MAAOnB,eAAKC,IAAcC,YAAc,CACtCT,IAAKA,EACLU,UAAWA,GACXT,WAAYQ,YAAc,CACxBmB,kBAAmBJ,EAAQI,mBAC1B3B,GACHE,cAAeA,EACfQ,YAAa,CACXD,UAAWA,GACXwB,gBAAiB,KAElB7B,MAEUuM,MC5BXC,GAAkBL,EACtBK,GAAgBC,KAAOH,GACvBE,GAAgBE,MAAQN,EACxBI,GAAgBG,QAAUN,GAC1BG,GAAgBI,KAAOL,GAGvBC,GAAgBK,YAAc,mBACfL,e,yGCVFM,EAQR,SAAC,EAAmC,IAAjCC,GAAiC,EAAjCA,YAAiC,IAApB3B,OAAoB,WAAb,OAAa,EACvC,EAAsBrH,mBAAiB,cAAvC,oBAAOgF,EAAP,MAAYiE,EAAZ,MACA,MACE,eAAC,IAAD,CACE,YAAaD,EACb,IAAKhE,EACL,YAAa,SAACkE,GAAD,OAAYD,GAAOC,KAChC,KAAM7B,KAKG0B,O","file":"p__StationaryEvents__form.9c8698f8.async.js","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"fieldProps\", \"min\", \"proFieldProps\", \"max\"];\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport ProFormField from '../Field';\n/**\n * 数组选择组件\n *\n * @param\n */\n\nvar ProFormDigit = function ProFormDigit(_ref, ref) {\n  var fieldProps = _ref.fieldProps,\n      min = _ref.min,\n      proFieldProps = _ref.proFieldProps,\n      max = _ref.max,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return _jsx(ProFormField, _objectSpread({\n    valueType: \"digit\",\n    fieldProps: _objectSpread({\n      min: min,\n      max: max\n    }, fieldProps),\n    ref: ref,\n    filedConfig: {\n      defaultProps: {\n        width: '100%'\n      }\n    },\n    proFieldProps: proFieldProps\n  }, rest));\n};\n\nexport default /*#__PURE__*/React.forwardRef(ProFormDigit);","import { Prompt, useIntl } from 'umi';\n\nconst UnsavedPrompt = ({ show }: { show?: boolean }) => {\n  const intl = useIntl();\n\n  return (\n    <Prompt\n      when={show}\n      message={intl.formatMessage({\n        id: 'unsaved_changes',\n      })}\n    />\n  );\n};\n\nexport default UnsavedPrompt;\n","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","// This icon file is generated automatically.\nvar SwapOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M847.9 592H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h605.2L612.9 851c-4.1 5.2-.4 13 6.3 13h72.5c4.9 0 9.5-2.2 12.6-6.1l168.8-214.1c16.5-21 1.6-51.8-25.2-51.8zM872 356H266.8l144.3-183c4.1-5.2.4-13-6.3-13h-72.5c-4.9 0-9.5 2.2-12.6 6.1L150.9 380.2c-16.5 21-1.6 51.8 25.1 51.8h696c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"swap\", \"theme\": \"outlined\" };\nexport default SwapOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SwapOutlinedSvg from \"@ant-design/icons-svg/es/asn/SwapOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar SwapOutlined = function SwapOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: SwapOutlinedSvg\n  }));\n};\nSwapOutlined.displayName = 'SwapOutlined';\nexport default /*#__PURE__*/React.forwardRef(SwapOutlined);","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"fieldProps\", \"proFieldProps\"],\n    _excluded2 = [\"fieldProps\", \"proFieldProps\"];\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { dateArrayFormatter } from '@ant-design/pro-utils';\nimport React, { useContext } from 'react';\nimport FieldContext from '../../FieldContext';\nimport ProField from '../Field';\nvar valueType = 'time';\n/** 时间区间选择器 */\n\nvar TimeRangePicker = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var fieldProps = _ref.fieldProps,\n      proFieldProps = _ref.proFieldProps,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var context = useContext(FieldContext);\n  return _jsx(ProField, _objectSpread({\n    ref: ref,\n    fieldProps: _objectSpread({\n      getPopupContainer: context.getPopupContainer\n    }, fieldProps),\n    valueType: \"timeRange\",\n    proFieldProps: proFieldProps,\n    filedConfig: {\n      valueType: 'timeRange',\n      lightFilterLabelFormatter: function lightFilterLabelFormatter(value) {\n        return dateArrayFormatter(value, 'HH:mm:SS');\n      }\n    }\n  }, rest));\n});\n/**\n * 时间选择组件\n *\n * @param\n */\n\nvar ProFormTimePicker = function ProFormTimePicker(_ref2) {\n  var fieldProps = _ref2.fieldProps,\n      proFieldProps = _ref2.proFieldProps,\n      rest = _objectWithoutProperties(_ref2, _excluded2);\n\n  var context = useContext(FieldContext);\n  return _jsx(ProField, _objectSpread({\n    fieldProps: _objectSpread({\n      getPopupContainer: context.getPopupContainer\n    }, fieldProps),\n    valueType: valueType,\n    proFieldProps: proFieldProps,\n    filedConfig: {\n      customLightMode: true,\n      valueType: valueType\n    }\n  }, rest));\n};\n\nvar WrappedProFormTimePicker = ProFormTimePicker;\nWrappedProFormTimePicker.RangePicker = TimeRangePicker;\nexport default WrappedProFormTimePicker;","import React, { useEffect } from 'react';\nimport { Form } from 'antd';\nimport ProForm, {\n  ProFormText,\n  ModalForm,\n  ProFormTextArea,\n  ProFormTimePicker,\n} from '@ant-design/pro-form';\n\nimport { useIntl, FormattedMessage } from 'umi';\nimport UserSelect from '@/components/UserSelect';\nimport type { AgendaType } from '@/pages/StationaryEvents/form';\n\nexport const AgendaModalForm: React.FC<{\n  id?: number | false;\n  fields: AgendaType | null;\n  name: string | boolean;\n  visible: boolean;\n  onVisibleChange: (visible: boolean) => void;\n  onFinish: (formData: API.Setting) => Promise<boolean | void>;\n}> = (props) => {\n  const intl = useIntl();\n\n  const { visible, fields, onVisibleChange, onFinish, id } = props;\n\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    if (fields) {\n      form.setFieldsValue(fields);\n      return;\n    }\n    form.resetFields();\n  }, [fields]);\n\n  return (\n    <ModalForm\n      form={form}\n      title={intl.formatMessage({\n        id: id ? 'editSetting' : 'newSetting',\n        defaultMessage: id ? 'editSetting' : 'newSetting',\n      })}\n      width=\"40vw\"\n      visible={visible}\n      onVisibleChange={(newVisibleValue) => {\n        onVisibleChange(newVisibleValue);\n        form.resetFields();\n      }}\n      onFinish={(formData) => {\n        form.resetFields();\n        return onFinish({ ...formData, id: fields?.id || null });\n      }}\n    >\n      <ProForm.Group>\n        <ProFormText\n          label={<FormattedMessage id=\"title\" defaultMessage=\"title\" />}\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n          width=\"lg\"\n          name=\"title\"\n        />\n        <ProFormText\n          label={<FormattedMessage id=\"subtitle\" defaultMessage=\"subtitle\" />}\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n          width=\"lg\"\n          name=\"subtitle\"\n        />\n        <ProFormTimePicker\n          name=\"hour\"\n          label={<FormattedMessage id=\"hour\" defaultMessage=\"hour\" />}\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n          width=\"xs\"\n        />\n        <ProForm.Item\n          name=\"tutors\"\n          label={<FormattedMessage id=\"tutors\" />}\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n          convertValue={(v) => {\n            return v;\n          }}\n          valuePropName=\"value\"\n        >\n          <UserSelect multiple />\n        </ProForm.Item>\n\n        <ProFormTextArea\n          label={<FormattedMessage id=\"description\" defaultMessage=\"description\" />}\n          rules={[\n            {\n              required: false,\n            },\n          ]}\n          width=\"lg\"\n          name=\"description\"\n        />\n\n        <ProForm.Item name=\"asCandidate\" hidden={true} />\n      </ProForm.Group>\n    </ModalForm>\n  );\n};\n\nexport default AgendaModalForm;\n","import type { ComponentClass } from 'react';\nimport { useEffect } from 'react';\nimport { useRef } from 'react';\nimport React, { useState } from 'react';\nimport './index.css';\n\nimport { Button, Popconfirm, Space, Tooltip } from 'antd';\nimport { arrayMoveImmutable } from 'array-move';\nimport type { SortableContainerProps, SortableElementProps } from 'react-sortable-hoc';\nimport { SortableContainer, SortableElement, SortableHandle } from 'react-sortable-hoc';\nimport {\n  DeleteOutlined,\n  EditOutlined,\n  MenuOutlined,\n  PlusOutlined,\n  SwapOutlined,\n} from '@ant-design/icons';\nimport { PageContainer } from '@ant-design/pro-layout';\nimport { FormattedMessage, useIntl } from 'umi';\nimport type { ActionType, ProColumns } from '@ant-design/pro-table';\nimport ProTable from '@ant-design/pro-table';\nimport AgendaModalForm from './ModalForm';\nimport type { AgendaType } from '@/pages/StationaryEvents/form';\nimport TypeButtonDrawer from '@/components/TypeButtonDrawer';\n\nconst SortableItem: ComponentClass<SortableElementProps & { className?: string }, any> =\n  SortableElement((props: React.HTMLAttributes<HTMLTableRowElement>) => <tr {...props} />);\nconst SortableBody = SortableContainer((props: React.HTMLAttributes<HTMLTableSectionElement>) => (\n  <tbody {...props} />\n));\nconst DragHandle = SortableHandle(() => (\n  <MenuOutlined\n    style={{\n      cursor: 'grab',\n      color: '#999',\n    }}\n  />\n));\n\ninterface RenderAgendaType extends Omit<AgendaType, 'tutors'> {\n  tutors: number[];\n}\n\nconst Agenda = ({\n  data,\n  onCreate,\n  lastDataUpdateDate,\n}: {\n  data: AgendaType[];\n  onCreate: (value: string) => void;\n  lastDataUpdateDate: Date;\n}) => {\n  const actionRef = useRef<ActionType>();\n  const agendaOrder = useRef<number[] | null>(null);\n  const intl = useIntl();\n\n  const [source, setSource] = useState<RenderAgendaType[]>([]);\n  const [fields, setFields] = useState<AgendaType | null>(null);\n  const [modalVisible, setModalVisible] = useState<boolean>(false);\n  const [receivedData, setReceivedData] = useState<AgendaType[]>(data);\n  const [candidateData, setCandidateData] = useState<AgendaType[]>([]);\n  const [wasOrderChanged, setWasOrderChanged] = useState(false);\n\n  const TableColumns: ProColumns[] = [\n    {\n      title: 'Sort',\n      dataIndex: 'sort',\n      width: '5%',\n      className: 'drag-visible',\n      render: () => <DragHandle />,\n    },\n    {\n      width: '20%',\n      title: <FormattedMessage id=\"title\" defaultMessage=\"Title\" />,\n      dataIndex: 'title',\n      hideInSearch: true,\n      renderText: (title: string) => (title.length > 80 ? `${title.slice(0, 77)}...` : title),\n    },\n    {\n      width: '20%',\n      title: <FormattedMessage id=\"subtitle\" defaultMessage=\"subtitle\" />,\n      dataIndex: 'subtitle',\n      hideInSearch: true,\n      renderText: (subtitle: string) =>\n        subtitle.length > 80 ? `${subtitle.slice(0, 77)}...` : subtitle,\n    },\n    {\n      width: '10%',\n      title: <FormattedMessage id=\"hour\" defaultMessage=\"hour\" />,\n      dataIndex: 'hour',\n      hideInSearch: true,\n    },\n    {\n      width: '15%',\n      title: <FormattedMessage id=\"tutors\" defaultMessage=\"tutors\" />,\n      dataIndex: 'tutors',\n      hideInSearch: true,\n      render: (_, { tutors }) =>\n        tutors && (\n          <Space>\n            {tutors.map((tutorId: number) => (\n              <TypeButtonDrawer key={tutorId} type={'App\\\\Models\\\\User'} type_id={tutorId} />\n            ))}\n          </Space>\n        ),\n    },\n    {\n      width: '18%',\n      title: <FormattedMessage id=\"description\" defaultMessage=\"description\" />,\n      dataIndex: 'description',\n      hideInSearch: true,\n      renderText: (description: string) =>\n        !description\n          ? '-'\n          : description.length > 80\n          ? `${description.trim().slice(0, 77)}...`\n          : description.trim(),\n    },\n  ];\n\n  const onSortEnd = ({ oldIndex, newIndex }: { oldIndex: number; newIndex: number }) => {\n    if (oldIndex !== newIndex) {\n      const newData = arrayMoveImmutable(source.slice(), oldIndex, newIndex).filter(Boolean);\n      setSource(newData);\n    }\n  };\n\n  const DraggableContainer = (props: SortableContainerProps) => {\n    return (\n      <SortableBody\n        useDragHandle\n        disableAutoscroll\n        helperClass=\"row-dragging\"\n        onSortEnd={onSortEnd}\n        {...props}\n      />\n    );\n  };\n\n  const DraggableBodyRow = ({ ...restProps }) => {\n    const index = source.findIndex(({ id }) => id === restProps['data-row-key']);\n    const updatedRestProps = {\n      ...restProps,\n      className: `${restProps.className} ${\n        !!source[index]?.asCandidate ? 'agenda-row-candidate' : ''\n      }`,\n    };\n    return <SortableItem index={index} {...updatedRestProps} />;\n  };\n\n  useEffect(() => {\n    setCandidateData([]);\n    setReceivedData(data);\n    setFields(null);\n    setWasOrderChanged(false);\n    agendaOrder.current = null;\n  }, [lastDataUpdateDate]);\n\n  useEffect(() => {\n    (async () => {\n      if (!receivedData || !candidateData) return;\n\n      const dataResponse = [...receivedData, ...candidateData];\n\n      const uniqueData = dataResponse.reduce((acc, item, _, arr) => {\n        const value = arr.filter(({ id }) => id === item.id);\n\n        if (value.length > 1) {\n          const duplicatedItem = value.find((i) => 'asCandidate' in i);\n          if (!duplicatedItem) return [...acc, value[-1]];\n          const isInAccumulator = duplicatedItem && acc.find(({ id }) => id === duplicatedItem.id);\n          return isInAccumulator ? acc : [...acc, duplicatedItem];\n        }\n        return [...acc, value[0]];\n      }, [] as typeof dataResponse);\n\n      const newItems = source.length\n        ? uniqueData.filter(\n            ({ id }) => source.findIndex((singleSource) => singleSource.id === id) === -1,\n          )\n        : [];\n\n      const sortedData = source.length\n        ? source.map((item) => {\n            const idx = uniqueData.findIndex(({ id }) => id === item.id);\n            return uniqueData[idx];\n          })\n        : uniqueData;\n\n      const mergedData = [...sortedData, ...newItems];\n\n      setSource(mergedData.filter(Boolean));\n    })();\n  }, [receivedData, candidateData]);\n\n  useEffect(() => {\n    const a = source.map((item) => {\n      const { id, title, subtitle, hour, description, tutors } = item;\n      return {\n        id,\n        title,\n        subtitle,\n        hour,\n        description,\n        tutors,\n      };\n    });\n    onCreate(JSON.stringify(a));\n\n    const sortedSource = source.map(({ id }) => id);\n\n    if (agendaOrder.current === null) {\n      if (!sortedSource.length) return;\n      agendaOrder.current = sortedSource;\n    }\n\n    if (sortedSource.length > agendaOrder.current.length) {\n      const checkIfOrderWasChanged =\n        JSON.stringify(sortedSource.slice(0, agendaOrder.current.length)) !==\n        JSON.stringify(agendaOrder.current);\n      setWasOrderChanged(checkIfOrderWasChanged);\n      if (!checkIfOrderWasChanged) {\n        agendaOrder.current = sortedSource;\n        return;\n      }\n    }\n\n    setWasOrderChanged(JSON.stringify(sortedSource) !== JSON.stringify(agendaOrder.current));\n  }, [source]);\n\n  return (\n    <PageContainer header={{ breadcrumb: {} }} className=\"agenda-container\">\n      <ProTable<AgendaType | any>\n        className=\"agenda-table\"\n        headerTitle={intl.formatMessage({\n          id: 'agenda',\n          defaultMessage: 'Agenda',\n        })}\n        actionRef={actionRef}\n        rowKey={(record) => record.id}\n        search={false}\n        toolBarRender={() => [\n          <Button type=\"primary\" key=\"primary\" onClick={() => setModalVisible(true)}>\n            <PlusOutlined /> <FormattedMessage id=\"new\" defaultMessage=\"new\" />\n          </Button>,\n        ]}\n        pagination={false}\n        dataSource={source}\n        columns={[\n          ...TableColumns,\n          {\n            width: '12%',\n            hideInSearch: true,\n            title: <FormattedMessage id=\"pages.searchTable.titleOption\" />,\n            dataIndex: 'option',\n            valueType: 'option',\n            render: (_, record) => [\n              <Button\n                key=\"edit\"\n                type=\"primary\"\n                icon={<EditOutlined />}\n                onClick={() => {\n                  if ('asCandidate' in record) {\n                    setFields(candidateData.find(({ id }) => id === record.id) ?? null);\n                  } else {\n                    setFields(data.find(({ id }) => id === record.id) ?? null);\n                  }\n                  setModalVisible(true);\n                }}\n              />,\n              <Popconfirm\n                key=\"delete\"\n                title={\n                  <FormattedMessage\n                    id=\"deleteQuestion\"\n                    defaultMessage=\"Are you sure to delete this record?\"\n                  />\n                }\n                onConfirm={async () => {\n                  if ('asCandidate' in record) {\n                    setCandidateData((current) => current.filter(({ id }) => id !== record.id));\n                    return;\n                  }\n                  setReceivedData((current) => current.filter(({ id }) => id !== record.id));\n                }}\n                okText={<FormattedMessage id=\"yes\" />}\n                cancelText={<FormattedMessage id=\"no\" />}\n              >\n                <Tooltip title={<FormattedMessage id=\"delete\" defaultMessage=\"delete\" />}>\n                  <Button type=\"primary\" icon={<DeleteOutlined />} danger />\n                </Tooltip>\n              </Popconfirm>,\n            ],\n          },\n        ]}\n        components={{\n          body: {\n            wrapper: DraggableContainer,\n            row: DraggableBodyRow,\n          },\n        }}\n      />\n\n      {!!candidateData.length && (\n        <div className=\"legend\">\n          <div className=\"legend__dot\" />\n          <p className=\"legend__label\">\n            <FormattedMessage id=\"changesToBeApproved\" defaultMessage=\"Changes to be approved\" />\n          </p>\n        </div>\n      )}\n\n      {wasOrderChanged && (\n        <div className=\"legend\">\n          <SwapOutlined className=\"legend__icon\" />\n          <p className=\"legend__label\">\n            <FormattedMessage id=\"orderHasBeenChanged\" defaultMessage=\"Order has been changed\" />\n          </p>\n        </div>\n      )}\n\n      <AgendaModalForm\n        name={modalVisible}\n        visible={modalVisible}\n        fields={fields}\n        onVisibleChange={(value: boolean) => {\n          if (value === false) {\n            setModalVisible(false);\n            setFields(null);\n          }\n        }}\n        onFinish={async (value: any) => {\n          if (value.id) {\n            const isCandidate = 'asCandidate' in value;\n            const referenceSource = isCandidate ? candidateData : data;\n\n            const valueInReferenceSource = referenceSource.find(({ id }) => id === value.id);\n            const wasValueUpdated = valueInReferenceSource\n              ? JSON.stringify(valueInReferenceSource) !== JSON.stringify(value)\n              : false;\n\n            if (wasValueUpdated) {\n              const mappedCandidateAgenda = isCandidate\n                ? candidateData.map((agenda) => (agenda.id === value.id ? value : agenda))\n                : [...candidateData, { ...value, asCandidate: true }];\n              setCandidateData(mappedCandidateAgenda);\n            }\n\n            setFields(null);\n            setModalVisible(false);\n            return;\n          }\n          setCandidateData((current) => [\n            ...current,\n            { ...value, asCandidate: true, id: Date.now() },\n          ]);\n          setFields(null);\n          setModalVisible(false);\n        }}\n      />\n    </PageContainer>\n  );\n};\n\nexport default Agenda;\n","import { useMemo, useState, useEffect } from 'react';\nimport { message, Spin, Row, Col } from 'antd';\nimport ProForm, {\n  ProFormText,\n  ProFormDigit,\n  ProFormDatePicker,\n  ProFormTextArea,\n  ProFormSelect,\n} from '@ant-design/pro-form';\nimport ProCard from '@ant-design/pro-card';\n\nimport WysiwygMarkdown from '@/components/WysiwygMarkdown';\nimport { PageContainer } from '@ant-design/pro-layout';\n\nimport { useParams, history, useIntl, FormattedMessage } from 'umi';\nimport { useCallback } from 'react';\nimport UserSelect from '@/components/UserSelect';\n\nimport {\n  getStationaryEvent,\n  createStationaryEvent,\n  updateStationaryEvent,\n} from '@/services/escola-lms/stationary_events';\n\nimport ProFormImageUpload from '@/components/ProFormImageUpload';\n\nimport CategoryCheckboxTree from '@/components/CategoryCheckboxTree';\nimport { categoriesArrToIds, splitImagePath, mapper } from '@/utils/utils';\nimport './index.css';\nimport ProductWidget from '@/components/ProductWidget';\nimport UnsavedPrompt from '@/components/UnsavedPrompt';\nimport UserSubmissions from '@/components/UsersSubmissions';\nimport Agenda from '@/components/Agenda';\n\nexport type StationaryEventType = Omit<\n  EscolaLms.StationaryEvents.Models.StationaryEvent,\n  'categories' | 'agenda' | 'image_url'\n> & {\n  image_url?: string;\n  categories: (number | string)[];\n  agenda: AgendaType[] | undefined;\n};\n\nexport interface AgendaType {\n  id: number;\n  title: string;\n  subtitle: string;\n  hour: string;\n  tutors: number[];\n  description?: string;\n  asCandidate?: boolean;\n}\n\nconst StationaryEventForm = () => {\n  const intl = useIntl();\n  const params = useParams<{ id?: string; tab?: string }>();\n  const { id, tab = 'attributes' } = params;\n  const isNew = id === 'new';\n  const [agendaData, setAgendaData] = useState<string | null>(null);\n  const [unsavedChanges, setUnsavedChanges] = useState(false);\n  const [data, setData] = useState<Partial<StationaryEventType>>();\n  const [form] = ProForm.useForm();\n  const [lastDataUpdateDate, setLastDataUpdateDate] = useState(new Date());\n\n  //  Promise<API.DefaultResponse<EscolaLms.StationaryEvents.Models.StationaryEvent>>\n  //  Promise<API.DefaultResponse<EscolaLms.StationaryEvents.Models.StationaryEvent>>\n\n  const fetchData = useCallback(async () => {\n    const response = await getStationaryEvent(Number(id));\n    if (response.success) {\n      setData({\n        ...(response.data as Omit<StationaryEventType, 'categories' | 'agenda'>),\n        categories: response?.data?.categories?.map(mapper),\n      });\n    }\n  }, [id]);\n\n  useEffect(() => {\n    if (isNew) {\n      setData({\n        name: '...',\n      });\n      return;\n    }\n\n    fetchData();\n  }, [id]);\n\n  const formProps = useMemo(\n    () => ({\n      onFinish: async (\n        values: Partial<\n          EscolaLms.StationaryEvents.Models.StationaryEvent & {\n            image_url: string;\n            agenda: AgendaType;\n          }\n        >,\n      ) => {\n        const postData = {\n          ...values,\n          agenda: agendaData,\n          authors: values.authors && values.authors.map(categoriesArrToIds),\n          categories: values.categories && values.categories.map(categoriesArrToIds),\n          image_url: data && data.image_url,\n          image_path: data && data.image_path && splitImagePath(data.image_path),\n        };\n        let response: API.DefaultResponse<EscolaLms.StationaryEvents.Models.StationaryEvent>;\n        if (isNew) {\n          response = await createStationaryEvent(postData);\n          if (response.success) {\n            setUnsavedChanges(false);\n            history.push(`/other/stationary-events/${response.data.id}`);\n          }\n        } else {\n          response = await updateStationaryEvent(Number(id), postData);\n          if (response.success) {\n            setUnsavedChanges(false);\n            setData({\n              ...(response.data as Omit<StationaryEventType, 'categories' | 'agenda'>),\n              categories: response?.data?.categories?.map(mapper),\n            });\n            setLastDataUpdateDate(new Date());\n            history.push(`/other/stationary-events/${response.data.id}/${tab}`);\n          }\n        }\n        message.success(response.message);\n      },\n      initialValues: data,\n    }),\n    [data, id, tab, agendaData],\n  );\n\n  if (!data) {\n    return <Spin />;\n  }\n\n  return (\n    <PageContainer\n      title={\n        isNew ? (\n          <FormattedMessage id=\"stationary_event\" />\n        ) : (\n          <FormattedMessage id=\"stationary_event.edit\" />\n        )\n      }\n      header={{\n        breadcrumb: {\n          routes: [\n            {\n              path: 'other/stationary-events',\n              breadcrumbName: intl.formatMessage({\n                id: 'menu.Other activities.StationaryEvents',\n              }),\n            },\n            {\n              path: String(id),\n              breadcrumbName: intl.formatMessage({\n                id: 'form',\n              }),\n            },\n            {\n              path: '/',\n              breadcrumbName: intl.formatMessage({\n                id: id === 'new' ? 'new' : 'edit',\n              }),\n            },\n            {\n              path: String(tab),\n              breadcrumbName: intl.formatMessage({\n                id: String(tab),\n              }),\n            },\n          ],\n        },\n      }}\n    >\n      <ProCard\n        tabs={{\n          type: 'card',\n          activeKey: tab,\n          onChange: (key) => history.push(`/other/stationary-events/${id}/${key}`),\n        }}\n      >\n        <ProCard.TabPane key=\"attributes\" tab={<FormattedMessage id=\"attributes\" />}>\n          <UnsavedPrompt show={unsavedChanges} />{' '}\n          <ProForm\n            {...formProps}\n            form={form}\n            onValuesChange={() => {\n              setUnsavedChanges(true);\n            }}\n          >\n            <ProForm.Group>\n              <ProFormText\n                width=\"md\"\n                name=\"name\"\n                label={<FormattedMessage id=\"name\" />}\n                tooltip={<FormattedMessage id=\"name_tooltip\" />}\n                placeholder={intl.formatMessage({\n                  id: 'name',\n                  defaultMessage: 'name',\n                })}\n                required\n              />\n              <ProFormText\n                width=\"md\"\n                name=\"place\"\n                label={<FormattedMessage id=\"place\" />}\n                tooltip={<FormattedMessage id=\"place_tooltip\" />}\n                placeholder={intl.formatMessage({\n                  id: 'place',\n                  defaultMessage: 'place',\n                })}\n                required\n              />\n              <ProForm.Item\n                name=\"authors\"\n                label={<FormattedMessage id=\"tutor\" />}\n                valuePropName=\"value\"\n              >\n                <UserSelect multiple />\n              </ProForm.Item>\n              <ProFormDigit\n                width=\"xs\"\n                name=\"max_participants\"\n                label={<FormattedMessage id=\"max_participants\" />}\n                tooltip={<FormattedMessage id=\"max_participants_tooltip\" />}\n                placeholder={intl.formatMessage({\n                  id: 'max_participants',\n                  defaultMessage: 'max_participants',\n                })}\n                min={0}\n                max={9999}\n                fieldProps={{ step: 1 }}\n              />\n              <ProFormSelect\n                name=\"status\"\n                width=\"md\"\n                label={<FormattedMessage id=\"status\" />}\n                tooltip={<FormattedMessage id=\"status_consultation_tooltip\" />}\n                valueEnum={{\n                  draft: intl.formatMessage({\n                    id: 'draft',\n                    defaultMessage: 'draft',\n                  }),\n                  published: intl.formatMessage({\n                    id: 'published',\n                    defaultMessage: 'published',\n                  }),\n                  archived: intl.formatMessage({\n                    id: 'archived',\n                    defaultMessage: 'archived',\n                  }),\n                }}\n                initialValue={{\n                  draft: intl.formatMessage({\n                    id: 'draft',\n                    defaultMessage: 'draft',\n                  }),\n                }}\n                placeholder={intl.formatMessage({\n                  id: 'status',\n                })}\n                rules={[{ required: true, message: <FormattedMessage id=\"select\" /> }]}\n              />\n            </ProForm.Group>\n\n            <ProForm.Group>\n              <ProFormDatePicker\n                width=\"sm\"\n                name=\"started_at\"\n                label={<FormattedMessage id=\"started_at\" />}\n                tooltip={<FormattedMessage id=\"started_at_tooltip\" />}\n                placeholder={intl.formatMessage({\n                  id: 'started_at',\n                  defaultMessage: 'started_at',\n                })}\n              />\n              <ProFormDatePicker\n                width=\"sm\"\n                name=\"finished_at\"\n                label={<FormattedMessage id=\"finished_at\" />}\n                tooltip={<FormattedMessage id=\"finished_at_tooltip\" />}\n                placeholder={intl.formatMessage({\n                  id: 'finished_at',\n                  defaultMessage: 'finished_at',\n                })}\n              />\n            </ProForm.Group>\n\n            <ProForm.Group>\n              <ProFormTextArea\n                width=\"lg\"\n                name=\"short_desc\"\n                label={<FormattedMessage id=\"short_description\" />}\n                tooltip={<FormattedMessage id=\"short_description\" />}\n              />\n            </ProForm.Group>\n\n            <ProForm.Item\n              name=\"program\"\n              label={<FormattedMessage id=\"program\" />}\n              tooltip={<FormattedMessage id=\"program_tooltip\" />}\n              valuePropName=\"value\"\n            >\n              <WysiwygMarkdown directory={`stationary_events/${id}/wysiwyg`} />\n            </ProForm.Item>\n\n            <ProForm.Item\n              name=\"description\"\n              label={<FormattedMessage id=\"description\" />}\n              tooltip={<FormattedMessage id=\"description_tooltip\" />}\n              valuePropName=\"value\"\n            >\n              <WysiwygMarkdown directory={`stationary_events/${id}/wysiwyg`} />\n            </ProForm.Item>\n          </ProForm>\n        </ProCard.TabPane>{' '}\n        {!isNew && (\n          <ProCard.TabPane key=\"agenda\" tab={<FormattedMessage id=\"agenda\" />}>\n            <ProForm {...formProps}>\n              <Agenda\n                data={data.agenda ?? []}\n                onCreate={(agenda) => setAgendaData(agenda)}\n                lastDataUpdateDate={lastDataUpdateDate}\n              />\n            </ProForm>\n          </ProCard.TabPane>\n        )}\n        {!isNew && (\n          <ProCard.TabPane key=\"product\" tab={<FormattedMessage id=\"product\" />}>\n            {id && (\n              <ProductWidget\n                productable={{\n                  class_type: 'App\\\\Models\\\\StationaryEvent',\n                  class_id: id,\n                  name: String(data.name),\n                  quantity: 1,\n                }}\n              />\n            )}\n          </ProCard.TabPane>\n        )}\n        {!isNew && (\n          <ProCard.TabPane key=\"media\" tab={<FormattedMessage id=\"media\" />}>\n            <ProForm {...formProps}>\n              <ProFormImageUpload\n                folder={`stationary-events/${id}`}\n                title=\"image\"\n                action={`/api/admin/stationary-events/${id}/?_method=PUT`}\n                src_name=\"image_url\"\n                form_name=\"image\"\n                getUploadedSrcField={(info) => info.file.response.data.image_url}\n                setPath={(removedPath) =>\n                  setData((prevState) => ({\n                    ...prevState,\n                    ...removedPath,\n                  }))\n                }\n              />\n            </ProForm>\n          </ProCard.TabPane>\n        )}\n        {!isNew && (\n          <ProCard.TabPane key=\"categories\" tab={<FormattedMessage id=\"categories\" />}>\n            <Row>\n              <Col span={12}>\n                <ProForm {...formProps}>\n                  <ProForm.Item\n                    label={<FormattedMessage id=\"categories\" />}\n                    name=\"categories\"\n                    valuePropName=\"value\"\n                  >\n                    <CategoryCheckboxTree multiple={false} />\n                  </ProForm.Item>\n                </ProForm>\n              </Col>\n            </Row>\n          </ProCard.TabPane>\n        )}\n        {!isNew && (\n          <ProCard.TabPane key=\"user_submission\" tab={<FormattedMessage id=\"user_submission\" />}>\n            <Row>\n              <Col span={12}>\n                {id && <UserSubmissions id={Number(id)} type=\"App\\Models\\StationaryEvent\" />}\n              </Col>\n            </Row>\n          </ProCard.TabPane>\n        )}\n      </ProCard>\n    </PageContainer>\n  );\n};\n\nexport default StationaryEventForm;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"proFieldProps\", \"fieldProps\"];\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useContext } from 'react';\nimport FieldContext from '../../FieldContext';\nimport ProFormField from '../Field';\nvar valueType = 'date';\n/**\n * 日期选择组件\n *\n * @param\n */\n\nvar ProFormDatePicker = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var proFieldProps = _ref.proFieldProps,\n      fieldProps = _ref.fieldProps,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var context = useContext(FieldContext);\n  return _jsx(ProFormField, _objectSpread({\n    ref: ref,\n    valueType: valueType,\n    fieldProps: _objectSpread({\n      getPopupContainer: context.getPopupContainer\n    }, fieldProps),\n    proFieldProps: proFieldProps,\n    filedConfig: {\n      valueType: valueType,\n      customLightMode: true\n    }\n  }, rest));\n});\nexport default ProFormDatePicker;","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"proFieldProps\", \"fieldProps\"];\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useContext } from 'react';\nimport FieldContext from '../../FieldContext';\nimport ProField from '../Field';\nvar valueType = 'dateMonth';\n/**\n * 周选择组件\n *\n * @param\n */\n\nvar ProFormDatePickerMonth = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var proFieldProps = _ref.proFieldProps,\n      fieldProps = _ref.fieldProps,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var context = useContext(FieldContext);\n  return _jsx(ProField, _objectSpread({\n    ref: ref,\n    valueType: valueType,\n    fieldProps: _objectSpread({\n      getPopupContainer: context.getPopupContainer\n    }, fieldProps),\n    proFieldProps: proFieldProps,\n    filedConfig: {\n      valueType: valueType,\n      customLightMode: true\n    }\n  }, rest));\n});\nexport default ProFormDatePickerMonth;","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"fieldProps\"];\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useContext } from 'react';\nimport FieldContext from '../../FieldContext';\nimport ProField from '../Field';\nvar valueType = 'dateQuarter';\n/**\n * 周选择组件\n *\n * @param\n */\n\nvar ProFormDatePickerQuarter = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var fieldProps = _ref.fieldProps,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var context = useContext(FieldContext);\n  return _jsx(ProField, _objectSpread({\n    ref: ref,\n    valueType: valueType,\n    fieldProps: _objectSpread({\n      getPopupContainer: context.getPopupContainer\n    }, fieldProps),\n    filedConfig: {\n      valueType: valueType,\n      customLightMode: true\n    }\n  }, rest));\n});\nexport default ProFormDatePickerQuarter;","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"proFieldProps\", \"fieldProps\"];\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useContext } from 'react';\nimport FieldContext from '../../FieldContext';\nimport ProField from '../Field';\nvar valueType = 'dateWeek';\n/**\n * 周选择组件\n *\n * @param\n */\n\nvar ProFormDatePickerWeek = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var proFieldProps = _ref.proFieldProps,\n      fieldProps = _ref.fieldProps,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var context = useContext(FieldContext);\n  return _jsx(ProField, _objectSpread({\n    ref: ref,\n    valueType: valueType,\n    fieldProps: _objectSpread({\n      getPopupContainer: context.getPopupContainer\n    }, fieldProps),\n    proFieldProps: proFieldProps,\n    filedConfig: {\n      valueType: valueType,\n      customLightMode: true\n    }\n  }, rest));\n});\nexport default ProFormDatePickerWeek;","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"proFieldProps\", \"fieldProps\"];\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useContext } from 'react';\nimport FieldContext from '../../FieldContext';\nimport ProFormField from '../Field';\nvar valueType = 'dateYear';\n/**\n * 周选择组件\n *\n * @param\n */\n\nvar ProFormDatePickerYear = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var proFieldProps = _ref.proFieldProps,\n      fieldProps = _ref.fieldProps,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var context = useContext(FieldContext);\n  return _jsx(ProFormField, _objectSpread({\n    ref: ref,\n    valueType: valueType,\n    fieldProps: _objectSpread({\n      getPopupContainer: context.getPopupContainer\n    }, fieldProps),\n    proFieldProps: proFieldProps,\n    filedConfig: {\n      valueType: valueType,\n      customLightMode: true\n    }\n  }, rest));\n});\nexport default ProFormDatePickerYear;","import ProFormDatePicker from './DatePicker';\nimport ProFormDatePickerMonth from './MonthPicker';\nimport ProFormDatePickerQuarter from './QuarterPicker';\nimport ProFormDatePickerWeek from './WeekPicker';\nimport ProFormDatePickerYear from './YearPicker';\nvar ExportComponent = ProFormDatePicker;\nExportComponent.Week = ProFormDatePickerWeek;\nExportComponent.Month = ProFormDatePickerMonth;\nExportComponent.Quarter = ProFormDatePickerQuarter;\nExportComponent.Year = ProFormDatePickerYear; // @ts-ignore\n// eslint-disable-next-line no-param-reassign\n\nExportComponent.displayName = 'ProFormComponent';\nexport default ExportComponent;","import ProductsForm from '@/pages/Products/components/form';\nimport React, { useState } from 'react';\n\nexport const ProductWidget: React.FC<{\n  type?: 'line' | 'card';\n  productable?: {\n    name?: string;\n    class_type?: string;\n    class_id?: string | number;\n    quantity?: number;\n  };\n}> = ({ productable, type = 'card' }) => {\n  const [tab, setTab] = useState<string>('attributes');\n  return (\n    <ProductsForm\n      productable={productable}\n      tab={tab}\n      onTabChange={(newTab) => setTab(newTab)}\n      type={type}\n    />\n  );\n};\n\nexport default ProductWidget;\n"],"sourceRoot":""}