{"version":3,"file":"p__Templates__form.a8f47aaa.async.js","mappings":"2VASaA,EAKR,SAAHC,EAAqE,KAA/DC,EAAMD,EAANC,OAAQC,EAAUF,EAAVE,WAAYC,EAAUH,EAAVG,WAAUC,EAAAJ,EAAEK,SAAAA,EAAQD,IAAA,OAAG,cAAaA,EAC9DE,KAA0BC,EAAAA,UAAiB,CAAC,CAAC,EAACC,EAAAC,EAAAA,EAAAH,EAAA,GAAvCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAEhBI,MAAkBC,EAAAA,aACtB,SAACC,EAAqB,CACpB,IAAMC,EAAM,IAAIC,GAAAA,GAEhBF,EAASG,QAAQ,SAACC,EAAMC,EAAG,CAAF,OAAKJ,EAAIK,KAAK,GAADC,OAAIpB,EAAOkB,CAAC,EAAC,QAAQD,CAAI,CAAC,GAEhEH,EAAIO,cAAc,CAAEC,KAAM,MAAO,CAAC,EAAEC,KAAK,SAAUC,EAAS,IAC1DC,GAAAA,QAAOD,EAASpB,CAAQ,EACpBF,GACFA,EAAW,CAEf,CAAC,CACH,EACA,CAACO,EAAOL,CAAQ,CAClB,EAEAsB,SAAAA,EAAAA,WAAU,UAAM,CACd1B,EAAOgB,QAAQ,SAACW,EAAU,CACxB,IAAMC,EAASC,MAAM,GAADT,OACfU,OAAOC,mBAAqBA,kCAAiB,uBAAAX,OAAsBO,CAAK,EAC3E,CACEK,QAAS,CAAEC,cAAe,UAAFb,OAAYc,aAAaC,QAAQ,OAAO,CAAC,CAAG,CACtE,CACF,EAEAP,EACGL,KAAK,SAACa,EAAU,CAAF,OAAKA,EAASnB,KAAK,CAAC,GAClCM,KAAK,SAACc,EAAY,CACbA,GAAWA,aAAmBC,MAChC5B,EAAS,SAAC6B,EAAc,CACtB,IAAMC,GAAYD,EAAUE,OAAS,GAAKzC,EAAOyC,OACjD,OAAIxC,GACFA,EAAWuC,CAAQ,EAEjBA,GAAY,GACd7B,GAAgB,CAAC,EAAFS,OAAAsB,GAAAA,EAAKH,CAAS,GAAEF,CAAO,CAAC,GAElC,CAAC,EAARjB,OAAAsB,GAAAA,EAAWH,CAAS,GAAEF,CAAO,CAAC,CAChC,CAAC,CAEL,CAAC,CACL,CAAC,CAgBH,EAAG,CAACrC,CAAM,CAAC,KA6BT2C,EAAAA,MAAA,KAAAC,SAAA,CAAG,YACSnC,EAAMgC,OAAO,MAAIzC,EAAOyC,MAAM,EACvC,CAEP,EAEA,GAAe3C,E,iECzGR,SAAe+C,GAAIC,EAAAC,EAAA,QAAAC,GAAAC,MAAC,KAADC,SAAA,EAgB1B,SAAAF,IAAA,CAAAA,OAAAA,GAAAG,EAAAA,EAAAC,EAAAA,EAAA,EAAAC,KAhBO,SAAAC,EACLC,EACAC,EAA4B,QAAAJ,EAAAA,EAAA,EAAAK,KAAA,SAAAC,EAAA,eAAAA,EAAAC,KAAAD,EAAAE,KAAA,eAAAF,EAAAG,OAAA,YAErBC,EAAAA,SACL,kBAAiBC,GAAAA,EAAA,CAEfR,OAAMQ,GAAAA,EAAA,GACDR,CAAM,EAEXS,OAAQ,KAAK,EACTR,GAAW,CAAC,CAAC,CAErB,CAAC,0BAAAE,EAAAO,KAAA,IAAAX,CAAA,EACF,GAAAN,GAAAC,MAAA,KAAAC,SAAA,EAIM,SAAegB,GAAGC,EAAAC,EAAA,QAAAC,GAAApB,MAAC,KAADC,SAAA,EAOzB,SAAAmB,IAAA,CAAAA,OAAAA,GAAAlB,EAAAA,EAAAC,EAAAA,EAAA,EAAAC,KAPO,SAAAiB,EAAmBC,EAAYf,EAA8B,CAAF,OAAAJ,EAAAA,EAAA,EAAAK,KAAA,SAAAe,EAAE,CAAF,cAAAA,EAAAb,KAAAa,EAAAZ,KAAE,CAAF,cAAAY,EAAAX,OAAA,YACzDC,EAAAA,SAAO,aAAA1C,OAAwCmD,CAAE,EAAAR,GAAAA,EAAA,CACtDC,OAAQ,KAAK,EACTR,GAAW,CAAC,CAAC,CAClB,CAAC,0BAAAgB,EAAAP,KAAA,IAAAK,CAAA,EACH,GAAAD,GAAApB,MAAA,KAAAC,SAAA,EAIM,SAAeuB,GAAYC,EAAAC,EAAA,QAAAC,GAAA3B,MAAC,KAADC,SAAA,EAKjC,SAAA0B,IAAA,CAAAA,OAAAA,GAAAzB,kBAAAC,oBAAA,EAAAC,KALM,SAAAwB,EAA4BN,EAAYf,EAA8B,CAAF,OAAAJ,oBAAA,EAAAK,KAAA,SAAAqB,EAAE,CAAF,cAAAA,EAAAnB,KAAAmB,EAAAlB,KAAE,CAAF,cAAAkB,EAAAjB,OAAA,SAClEC,QAAO,sBAAA1C,OAAiCmD,CAAE,EAAAR,cAAA,CAC/CC,OAAQ,KAAK,EACTR,GAAW,CAAC,CAAC,CAClB,CAAC,0BAAAsB,EAAAb,KAAA,IAAAY,CAAA,EACH,GAAAD,GAAA3B,MAAA,KAAAC,SAAA,E,wCCWY6B,GAA6B,SAAHhF,EAAwC,KAAlCiF,EAAOjF,EAAPiF,QAASC,EAAWlF,EAAXkF,YAAaC,EAAKnF,EAALmF,MACjE7E,KAA0BC,EAAAA,UAAqB,CAAE6E,MAAO,SAAU,CAAC,EAAC5E,EAAAC,EAAAA,EAAAH,EAAA,GAA7D8E,EAAK5E,EAAA,GAAE6E,EAAQ7E,EAAA,GAEtB8E,KAAwC/E,EAAAA,UAAuB,CAAE6E,MAAO,SAAU,CAAC,EAACG,EAAA9E,EAAAA,EAAA6E,EAAA,GAA7EE,GAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,KAAsCnF,EAAAA,UAAkB,EAAK,EAACoF,EAAAlF,EAAAA,EAAAiF,EAAA,GAAvDE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,MAElChE,EAAAA,WAAU,UAAM,CACd0D,EAAS,CAAED,MAAO,SAAU,CAAC,EAC7B,IAAMU,EAAkB,IAAIC,gBAC5BjD,OAAAA,GAAK,CAAEmC,QAAAA,EAASC,YAAAA,CAAY,EAAG,CAAEc,OAAQF,EAAgBE,MAAO,CAAC,EAC9DxE,KAAK,SAACa,EAAa,CACdA,GAAYA,EAAS4D,QACvBZ,EAAS,CAAED,MAAO,SAAUc,KAAM7D,EAAS8D,IAAK,CAAC,EACxC9D,GAAY,CAACA,EAAS4D,SAC/BZ,EAAS,CAAED,MAAO,QAASgB,MAAO/D,EAASgE,OAAQ,CAAC,CAExD,CAAC,EAAC,MACK,SAACC,EAAK,CAAF,OAAKjB,EAAS,CAAED,MAAO,QAASgB,MAAOE,EAAIC,SAAS,CAAE,CAAC,CAAC,GAE9D,UAAM,CACXT,EAAgBU,MAAM,CACxB,CACF,EAAG,CAAC,CAAC,EAEL,IAAMC,MAAS5F,EAAAA,aAAY,SAAC2D,EAAe,CACzCiB,EAAgB,CAAEL,MAAO,SAAU,CAAC,EACpCjB,GAAIK,CAAE,EAAEhD,KAAK,SAACa,EAAa,CACrBA,EAAS4D,QACXR,EAAgB,CAAEL,MAAO,SAAUe,KAAM9D,EAAS8D,KAAK1E,OAAQ,CAAC,EAEhEgE,EAAgB,CAAEL,MAAO,SAAU,CAAC,CAExC,CAAC,CACH,EAAG,CAAC,CAAC,EAEL,OAAIA,EAAMA,QAAU,WACXsB,EAAAA,KAACC,GAAAA,EAAK,CAACN,QAAQ,aAAa9E,KAAK,OAAO,CAAE,EAG/C6D,EAAMA,QAAU,WAAaA,EAAMA,QAAU,aACxCsB,EAAAA,KAACE,EAAAA,EAAI,EAAE,KAIdhE,EAAAA,MAACiE,EAAAA,SAAQ,CAAAhE,SAAA,IACP6D,EAAAA,KAACI,GAAAA,EAAO,EAAE,EACTlB,MACCc,EAAAA,KAAC3G,GAAU,CACTE,OAAQmF,EAAMc,KAAKa,IAAI,SAACC,EAAM,CAAF,OAAKA,EAAKxC,EAAE,GACxCrE,WAAY,kBAAM0F,EAAe,EAAK,CAAC,CAAC,CACzC,KAEHa,EAAAA,KAACO,EAAAA,EAAI,CACHC,KAAK,QACLC,WAAW,aACXC,WAAYhC,EAAMc,KAClBmB,UACEzE,EAAAA,MAAA,OAAAC,SAAA,IACE6D,EAAAA,KAACY,EAAAA,iBAAgB,CAAC9C,GAAG,UAAU,CAAE,EAAE,IAClCW,MAASuB,EAAAA,KAACa,GAAAA,EAAWC,KAAI,CAACC,OAAM,GAAA5E,SAAEsC,CAAK,CAAkB,EACzD,QACDuB,EAAAA,KAACY,EAAAA,iBAAgB,CAAC9C,GAAG,iBAAiBkD,eAAe,gBAAgB,CAAE,EAAE,OACzEhB,EAAAA,KAACiB,EAAAA,GAAM,CACLC,QAAShC,EACTrE,KAAK,UACLsG,QAAS,kBAAMhC,EAAe,EAAI,CAAC,EACnCiC,QAAMpB,EAAAA,KAACqB,GAAAA,EAAgB,EAAE,EACzBb,KAAK,QAAOrE,YAEZ6D,EAAAA,KAACY,EAAAA,iBAAgB,CAAC9C,GAAG,eAAekD,eAAe,mBAAmB,CAAE,CAAC,CACnE,CAAC,EACN,EAEPM,WAAY,SAAChB,EAAM,CAAF,SACfpE,EAAAA,MAACqE,EAAAA,EAAKgB,KAAI,CACRC,QAAS,IACPxB,EAAAA,KAACyB,GAAAA,EAAuB,CACtBC,IAAG,sBAAA/G,OAAwB2F,EAAKxC,EAAE,EAClCnE,SAAQ,aAAAgB,OAAe2F,EAAKxC,GAAE,QAE9B0C,KAAK,QACLY,QAAMpB,EAAAA,KAACqB,GAAAA,EAAgB,EAAE,EACzBxG,KAAK,UACLsG,QAAS,kBAAMpB,GAAOO,EAAKxC,EAAE,CAAC,EAC9BoD,QAASpC,GAAaJ,QAAU,UAAUvC,YAE1C6D,EAAAA,KAACY,EAAAA,iBAAgB,CAAC9C,GAAG,eAAekD,eAAe,eAAe,CAAE,CAAC,EAPjE,UAQmB,CAAC,EAC1B7E,SAAA,CAEDmE,EAAK7B,MAAM,OAACuB,EAAAA,KAAC2B,GAAAA,EAAgB,CAAC9G,KAAK,oBAAkB+G,QAAStB,EAAK/B,OAAQ,CAAE,CAAC,EACtE,CAAC,CACZ,CACH,CAAC,EACM,CAEd,EAEA,GAAeD,E,sVChITiD,GAAO,SAACM,EAAqB,CACjC,SAAO3F,EAAAA,MAAA,OAAK4F,UAAS,GAAAnH,OAAKkH,EAAME,OAAOC,UAAY,UAAU,EAAG7F,SAAA,CAAC,IAAC,GAAAxB,OAAIkH,EAAME,OAAOE,IAAI,GAAQ,CACjG,EAEMC,GAOD,SAAH5I,EAAyE,KAAnE6I,EAAiB7I,EAAjB6I,kBAAmBC,EAAS9I,EAAT8I,UAAWC,EAAQ/I,EAAR+I,SAAUC,EAAKhJ,EAALgJ,MAAO5C,EAAKpG,EAALoG,MAAO6C,EAAMjJ,EAANiJ,OACtDC,EAAaJ,EAAU/B,IAAI,SAACoC,EAAW,CAAF,MAAM,CAC/CR,KAAMQ,EAAEC,UAAU,CAAC,EACnBV,SAAUG,EAAkBQ,SAASF,CAAC,CACxC,CAAC,CAAC,EAEF,SACEvG,EAAAA,MAAC0G,EAAAA,SAAc,CAAAzG,SAAA,IACb6D,EAAAA,KAAC6C,GAAAA,EAAyB,CACxBC,MAAOP,EACPT,UAAS,uDAAAnH,OAAyD+E,EAAM1D,QAAU,OAAO,EACzFqG,SAAU,SAACU,EAAG,CAAF,OAAKV,EAASU,EAAEC,OAAOV,KAAK,CAAC,EACzCW,iBAAkB,oBAAMjD,EAAAA,KAACY,EAAAA,iBAAgB,CAAC9C,GAAG,SAAS,CAAE,CAAC,EACzDoF,QAAS,EACTZ,MAAOA,EACPa,UAAW,CAAEC,SAAU,MAAO,EAC9BC,QAAS,CACP,IAAK,CACHC,aAAc,SAACC,EAAU,CACvB,OAAOf,EAAWgB,OAAO,SAACf,EAAG,CAAF,OAAKA,EAAER,KAAKwB,WAAWF,CAAK,CAAC,EAC1D,EACAG,UAAWnC,GACXoC,OAAQ,SAACrD,EAAM+C,EAAY,CAEzB,MAAO,GAAP1I,OAAU0I,CAAO,EAAA1I,OAAG2F,EAAK2B,IAAI,CAC/B,CACF,CACF,CAAE,CACH,KACDjC,EAAAA,KAAA,OAAK4D,KAAK,QAAQ9B,UAAU,8BAA6B3F,SACtDuD,CAAK,CACH,CAAC,EACQ,CAEpB,EAEA,GAAewC,G,8CCrDT2B,GAA4B,SAACC,EAAoB,CACrD,OAAQA,EAAQC,kBAAkB,EAAG,CACnC,IAAK,cACH,MAAO,WACT,IAAK,iBACH,MAAO,0BACT,IAAK,aACH,MAAO,sBACT,QACE,MAAO,aACX,CACF,EAEA,SAASC,GAASC,EAA8C,CAC9D,OAAOC,GAAAA,EAAOD,CAAG,IAAK,UAAYA,IAAQ,MAAQ,CAACE,MAAMC,QAAQH,CAAG,CACtE,CAEA,SAASI,GAAoBJ,EAA4D,CACvF,OACED,GAASC,CAAG,GACZ,OAAOA,GAAG,YAAHA,EAAKK,UAAY,UACxBN,GAASC,GAAG,YAAHA,EAAKM,kBAAkB,GAChCJ,MAAMC,QAAQH,GAAG,YAAHA,EAAK1B,MAAM,GACzB4B,MAAMC,QAAQH,GAAG,YAAHA,EAAKO,UAAU,GAC7BL,MAAMC,QAAQH,GAAG,YAAHA,EAAKQ,WAAW,CAElC,CAEA,IAAMC,GAAyB,SAC7BC,EACAvC,EACAwC,EACsB,CACtB,IAAMC,EACJC,KAAKC,IAAIvI,MACP,KACAmI,EAASH,WACL,CAACG,EAASH,WAAWnE,IAAI,SAAC2E,EAAG,CAAF,OAAKA,EAAElH,EAAE,GAAG6G,EAASF,YAAYpE,IAAI,SAAC2E,EAAG,CAAF,OAAKA,EAAElH,EAAE,EAAC,EAAEmH,KAAK,EACnF,CAAC,CAAC,CACR,EAAI,EAEAC,EAAgEP,EAASH,WAC3EG,EAASH,WAAWW,OAAO,SAACC,EAAKC,EAAS,CACxC,OAAA/H,EAAAA,EAAAA,EAAAA,EAAA,GAAY8H,CAAG,KAAAE,EAAAA,EAAA,GAAGD,EAAKpD,KAAOoD,CAAI,EACpC,EAAG,CAAC,CAAC,EACL,CAAC,EAECE,EAA+DnD,EAClE/B,IAAI,SAACyD,EAAS,CAAF,OAAKA,EAAQ0B,QAAQ,IAAK,EAAE,CAAC,GAEzCL,OAAO,SAACC,EAAKC,EAAMI,EAAU,CAC5B,OAAIL,EAAIC,CAAI,EACV/H,EAAAA,EAAAA,EAAAA,EAAA,GACK8H,CAAG,KAAAE,EAAAA,EAAA,GACLD,EAAI/H,EAAAA,EAAAA,EAAAA,EAAA,GACA8H,EAAIC,CAAI,CAAC,MACZvH,GAAI+G,EAAQY,CAAK,KAIvBnI,EAAAA,EAAAA,EAAAA,EAAA,GACK8H,CAAG,KAAAE,EAAAA,EAAA,GACLD,EAAO,CACNvH,GAAI+G,EAAQY,EACZxD,KAAMoD,EACNxK,KAAM,SACN6K,cAAe,SACfC,KAAM,GACNC,SAAU,CAAChB,EAAmBjC,SAAS0C,CAAI,EAC3CQ,QAAS,GACTC,WAAY,GACZC,iBAAkB,GAClBC,SAAUnC,GAA0BwB,CAAI,CAC1C,CAAC,EAEL,EAAGH,CAAI,EAET,OAAOe,OAAOC,OAAO,CAAC,EAAGvB,EAAU,CAAEH,WAAYyB,OAAOE,OAAOZ,CAAG,CAAE,CAAC,CACvE,EAEaa,EAMR,SAAH9M,EAA2F,KAArF+M,EAAe/M,EAAf+M,gBAAeC,EAAAhN,EAAEiN,kBAAAA,EAAiBD,IAAA,OAAG,KAAIA,EAAEE,EAAKlN,EAALkN,MAAOpE,EAAS9I,EAAT8I,UAAWqE,EAAiBnN,EAAjBmN,kBAC7DC,KAAMC,EAAAA,QAAuB,IAAI,EAEjCC,EAAkB,SAAC7D,EAAsB,CAC7C,IAAM8D,EAAW9D,EAAE+D,YAAY9D,OAAuB6D,QAAQE,YAAY,EAC1E,OAAQF,EAAS,CACf,IAAK,OACL,IAAK,SACH9D,EAAE+D,YAAYF,gBAAgB,EAC9B7D,EAAE+D,YAAYE,eAAe,EAC/B,QACE,MACJ,CACF,EAEA/L,SAAAA,EAAAA,WAAU,UAAM,CACd,GAAIyL,EAAIO,QAAS,CACf,IAAMC,EAAK,IAAIC,GAAAA,EAAUT,EAAIO,QAAS,CACpCG,kBAAmB,GACnBC,MAAO,CAAC,CAAEpF,KAAM,YAAaK,MAAO,WAAY,CAAC,EACjDgF,YAAa,YAEbC,gBAAiB,GAAF5M,OACbU,OAAOC,mBAAqBA,kCAAiB,kCAE/CkM,aAAc,UAAM,CAClBnB,EAAgBa,EAAGO,UAAU,CAAC,CAChC,EACAC,oBAAqB,UAAM,CACrBjB,GACFA,EAAkBS,EAAGO,UAAU,CAAC,CAEpC,CACF,CAAC,EAEGlB,GAAqBlC,GAAoBkC,CAAiB,GAC5DW,EAAGS,KAAKjD,GAAuB6B,EAAmBnE,EAAWoE,EAAM5B,kBAAkB,CAAC,CAE1F,CACF,EAAG,CAAC8B,CAAG,CAAC,KAGN1G,EAAAA,KAAA,OAAK0G,IAAKA,EAAK5E,UAAU,aAAaX,QAASyF,EAAgBzK,SAAC,YAEhE,CAAK,CAET,EAEA,EAAeiK,ECjIFwB,EAA6C,SAAHtO,EAAwC,KAAlC2I,EAAI3I,EAAJ2I,KAAMuE,EAAKlN,EAALkN,MAAKqB,EAAAvO,EAAE8I,UAAAA,EAASyF,IAAA,OAAG,CAAC,EAACA,EAChFC,KAA0B3N,EAAAA,aAC9B,SAAC4N,EAA2B,CAC1B,GAAMA,EAAa/L,OACjB,SACEgE,EAAAA,KAACgI,EAAAA,EAAK,CAAA7L,YACJD,EAAAA,MAAC2E,GAAAA,EAAU,CAAA1E,SAAA,IACT6D,EAAAA,KAACY,EAAAA,iBAAgB,CAAC9C,GAAG,8BAA8B,CAAE,EAAC,IAAE,IACvDiK,EAAa1H,IAAI,SAACkD,EAAO,CAAF,SACtBvD,EAAAA,KAACiI,GAAAA,EAAG,CAACC,MAAO,MAAM/L,SACfoH,CAAK,EADgBA,CAEnB,CAAC,CACP,CAAC,EACQ,CAAC,CACR,CAGb,EACA,CAACiD,EAAOvE,CAAI,CACd,EAEMkG,KAAiBhO,EAAAA,aACrB,SAACmI,EAAeyF,EAA2B,CACzC,OAAIzF,GAASyF,EAAaK,MAAM,SAACC,EAAK,CAAF,OAAK/F,EAAMK,SAAS0F,CAAG,CAAC,GACnDC,QAAQC,QAAQ,EAElBD,QAAQE,OAAO,IAAIC,MAAM,2BAA2B,CAAC,CAC9D,EACA,CAACjC,EAAOvE,CAAI,CACd,EAEMyG,KAAqBvO,EAAAA,aAAY,UAAM,CAC3C,GAAIqM,CAAAA,EAAMmC,SAGV,OAAQnC,EAAM3L,KAAM,CAClB,IAAK,OACL,IAAK,MACH,SACEqB,EAAAA,MAAC0G,EAAAA,SAAc,CAAAzG,SAAA,IACb6D,EAAAA,KAAA,SAAA7D,YACE6D,EAAAA,KAACY,EAAAA,iBAAgB,CAAC9C,GAAImE,CAAK,CAAE,CAAC,CACzB,KAEPjC,EAAAA,KAAC4I,EAAAA,GAAQrH,KAAI,CAACsH,aAAY,GAAA1M,SACvB,SAAC2M,EAAS,CACT,SACE9I,EAAAA,KAACkC,GAAgB,CACfC,kBAAmBqE,EAAM5B,mBACzBxC,UAAWA,EACXE,MAAOwG,EAAKC,cAAc9G,CAAI,EAC9BI,SAAU,SAACC,EAAe,CAAF,OAAKwG,EAAKE,eAAc1D,EAAAA,EAAC,CAAC,EAAErD,EAAOK,CAAK,CAAE,CAAC,EACnE5C,MAAOoJ,EAAKG,cAAchH,CAAI,EAC9BM,OAAQ,CACN2G,MAAO,OACPC,OAAQ,OACV,CAAE,CACH,CAEL,CAAC,CACW,KACdnJ,EAAAA,KAACoJ,GAAAA,EAAW,CACVnH,KAAMA,EACN4G,aAAY,GACZQ,OAAM,GACNC,MACE9C,EAAMmC,SACFY,OACA,CACE,CACEvH,SAAUwE,EAAMxE,SAChBrC,WAASK,EAAAA,KAACY,EAAAA,iBAAgB,CAAC9C,GAAG,yBAAyB,CAAE,CAC3D,EACA,CACE0L,UAAW,UAAF,KAAAC,EAAA/M,EAAAA,EAAAC,EAAAA,EAAA,EAAAC,KAAE,SAAAC,EAAO6M,EAAGpH,EAAO,CAAF,OAAA3F,EAAAA,EAAA,EAAAK,KAAA,SAAAC,EAAE,CAAF,cAAAA,EAAAC,KAAAD,EAAAE,KAAE,CAAF,cAAAF,EAAAG,OAAA,SACjB+K,EAAe7F,EAAOkE,EAAM5B,kBAAkB,CAAC,0BAAA3H,EAAAO,KAAA,IAAAX,CAAA,EACvD,YAAA2M,EAAAnN,EAAAC,EAAA,QAAAmN,EAAAjN,MAAA,KAAAC,SAAA,SAAA+M,CAAA,GACH,CAAC,CAER,CACF,EACA1B,EAAwBtB,EAAM5B,kBAAkB,CAAC,EACpC,EAEpB,IAAK,YACH,SACE1I,EAAAA,MAAC0G,EAAAA,SAAc,CAAAzG,SAAA,IACb6D,EAAAA,KAAC4I,EAAAA,GAAQrH,KAAI,CAACsH,aAAY,GAAA1M,SACvB,SAAC2M,EAAS,CACT,SACE9I,EAAAA,KAACoG,EAAS,CACRG,kBACEuC,EAAKC,cAAc9G,CAAI,GAAK0H,KAAKC,MAAMd,EAAKC,cAAc9G,CAAI,CAAC,EAEjEG,UAAWA,EACXoE,MAAOA,EACPH,gBAAiB,SAACd,EAAQ,CACxBuD,EAAKE,eAAc1D,EAAAA,EAAC,CAAC,EAAErD,EAAO0H,KAAKE,UAAUtE,CAAG,CAAC,CAAE,EACnDuD,EAAKgB,OAAO,CACd,EACArD,kBAAmB,SAAClB,EAAQ,CAC1BuD,EAAKE,eAAc1D,EAAAA,EAAC,CAAC,EAAErD,EAAO0H,KAAKE,UAAUtE,CAAG,CAAC,CAAE,CACrD,CAAE,CACH,CAEL,CAAC,CACW,KACdvF,EAAAA,KAAC+J,EAAAA,EAAe,CAAC9H,KAAMA,EAAM4G,aAAY,GAACK,MAAM,KAAKG,OAAM,GAAE,CAAC,EAChD,EAEpB,IAAK,OACH,SACEnN,EAAAA,MAAC0G,EAAAA,SAAc,CAAAzG,SAAA,IACb6D,EAAAA,KAAC+J,EAAAA,EAAe,CACdpB,SAAUnC,EAAMmC,SAChBE,aAAY,GACZK,MAAM,KACNc,SAAOhK,EAAAA,KAACY,EAAAA,iBAAgB,CAAC9C,GAAImE,CAAK,CAAE,EACpCA,KAAMA,EACNgI,WAASjK,EAAAA,KAACY,EAAAA,iBAAgB,CAAC9C,GAAI,wBAAyB,CAAE,EAC1DwL,MACE9C,EAAMmC,SACFY,OACA,CACE,CACEvH,SAAUwE,EAAMxE,SAChBrC,WAASK,EAAAA,KAACY,EAAAA,iBAAgB,CAAC9C,GAAG,yBAAyB,CAAE,CAC3D,EACA,CACE0L,UAAW,UAAF,KAAAU,EAAAxN,EAAAA,EAAAC,EAAAA,EAAA,EAAAC,KAAE,SAAAiB,EAAO6L,EAAGpH,EAAO,CAAF,OAAA3F,EAAAA,EAAA,EAAAK,KAAA,SAAAe,EAAE,CAAF,cAAAA,EAAAb,KAAAa,EAAAZ,KAAE,CAAF,cAAAY,EAAAX,OAAA,SACjB+K,EAAe7F,EAAOkE,EAAM5B,kBAAkB,CAAC,0BAAA7G,EAAAP,KAAA,IAAAK,CAAA,EACvD,YAAA2L,EAAA9L,EAAAC,EAAA,QAAAuM,EAAA1N,MAAA,KAAAC,SAAA,SAAA+M,CAAA,GACH,CAAC,CAER,CACF,EAEA1B,EAAwBtB,EAAM5B,kBAAkB,CAAC,EACpC,EAGpB,IAAK,OACH,SACE1I,EAAAA,MAAC0G,EAAAA,SAAc,CAAAzG,SAAA,IACbD,EAAAA,MAAA,KAAAC,SAAA,IACE6D,EAAAA,KAACY,EAAAA,iBAAgB,CAAC9C,GAAI,8BAA+B,CAAE,EAAE,OACzDkC,EAAAA,KAAA,KAAGgD,OAAO,SAASmH,IAAI,aAAaC,KAAK,8BAA6BjO,SAAC,6BAEvE,CAAG,CAAC,EACH,KACH6D,EAAAA,KAAA,QAAA7D,YACE6D,EAAAA,KAACY,EAAAA,iBAAgB,CAAC9C,GAAI,cAAe,CAAE,CAAC,CACpC,KACNkC,EAAAA,KAAC4I,EAAAA,GAAQrH,KAAI,CAACsH,aAAY,GAAA1M,SACvB,SAAC2M,EAAS,CACT,SACE9I,EAAAA,KAACkC,GAAgB,CACfC,kBAAmBqE,EAAM5B,mBACzBxC,UAAWA,EACXE,MAAOwG,EAAKC,cAAc9G,CAAI,EAC9BI,SAAU,SAACC,EAAe,CAAF,OAAKwG,EAAKE,eAAc1D,EAAAA,EAAC,CAAC,EAAErD,EAAOK,CAAK,CAAE,CAAC,EACnE5C,MAAOoJ,EAAKG,cAAchH,CAAI,EAC9BM,OAAQ,CACN2G,MAAO,OACPC,OAAQ,MACV,CAAE,CACH,CAEL,CAAC,CACW,KACdnJ,EAAAA,KAAC+J,EAAAA,EAAe,CACd9H,KAAMA,EACN4G,aAAY,GACZQ,OAAM,GACNC,MACE9C,EAAMmC,SACFY,OACA,CACE,CACEvH,SAAUwE,EAAMxE,SAChBrC,WAASK,EAAAA,KAACY,EAAAA,iBAAgB,CAAC9C,GAAG,yBAAyB,CAAE,CAC3D,EACA,CACE0L,UAAW,UAAF,KAAAa,EAAA3N,EAAAA,EAAAC,EAAAA,EAAA,EAAAC,KAAE,SAAAwB,EAAOsL,EAAGpH,EAAO,CAAF,OAAA3F,EAAAA,EAAA,EAAAK,KAAA,SAAAqB,EAAE,CAAF,cAAAA,EAAAnB,KAAAmB,EAAAlB,KAAE,CAAF,cAAAkB,EAAAjB,OAAA,SACjB+K,EAAe7F,EAAOkE,EAAM5B,kBAAkB,CAAC,0BAAAvG,EAAAb,KAAA,IAAAY,CAAA,EACvD,YAAAoL,EAAAvL,EAAAC,EAAA,QAAAmM,EAAA7N,MAAA,KAAAC,SAAA,SAAA+M,CAAA,GACH,CAAC,CAER,CACF,EAEA1B,EAAwBtB,EAAM5B,kBAAkB,CAAC,EACpC,EAEpB,QACE,MACJ,CACF,EAAG,CAAC4B,EAAOvE,EAAMG,CAAS,CAAC,EAE3B,SAAOpC,EAAAA,KAAC4C,EAAAA,SAAc,CAAAzG,SAAEuM,EAAmB,CAAC,CAAiB,CAC/D,EAEA,EAAed,E,sDClNF0C,EAER,SAAHhR,EAAuB,KAAjBiR,EAAUjR,EAAViR,WACN3Q,KAA8BC,EAAAA,UAAkB,EAAK,EAACC,EAAAC,EAAAA,EAAAH,EAAA,GAA/CsH,EAAOpH,EAAA,GAAE0Q,EAAU1Q,EAAA,GAC1B8E,KAA0B/E,EAAAA,UAAgD,CAAC,CAAC,EAACgF,EAAA9E,EAAAA,EAAA6E,EAAA,GAAtE6L,EAAK5L,EAAA,GAAE6L,EAAQ7L,EAAA,GAChB8L,KAAOC,EAAAA,SAAQ,EAEfC,KAAY1Q,EAAAA,aAAY,UAAM,CAClCqQ,EAAW,EAAI,KACfM,EAAAA,IAAmBC,OAAOR,CAAU,EAAGE,CAAiB,EACrD3P,KAAK,SAACa,EAAa,CACdA,EAAS4D,QACXI,EAAAA,GAAQJ,QAAQ5D,EAASgE,OAAO,EAEhCA,EAAAA,GAAQD,MAAM/D,EAASgE,OAAO,CAElC,CAAC,EAAC,MACK,SAACC,EAAU,CAAF,OAAKD,EAAAA,GAAQD,MAAME,EAAIC,SAAS,CAAC,CAAC,GAAC,QAC1C,kBAAM2K,EAAW,EAAK,CAAC,EACpC,EAAG,CAACC,EAAOF,CAAU,CAAC,EAEtB,SACErO,EAAAA,MAAC8L,EAAAA,EAAK,CAAA7L,SAAA,IACJ6D,EAAAA,KAACgL,EAAAA,EAAU,CAACC,SAAQ,GAAC3I,MAAOmI,EAAOpI,SAAU,SAAC8D,EAAQ,CAAF,OAAKuE,EAASvE,CAAM,CAAC,CAAC,CAAE,KAC5EnG,EAAAA,KAACkL,EAAAA,EAAO,CAACzM,MAAOkM,EAAKQ,cAAc,CAAErN,GAAI,4BAA6B,CAAC,EAAE3B,YACvE6D,EAAAA,KAACiB,EAAAA,GAAM,CACLC,QAASA,EACTC,QAAS,kBAAM0J,EAAU,CAAC,EAC1BO,SAAU,CAAEX,EAAmBzO,OAAOG,YAEtC6D,EAAAA,KAACY,EAAAA,iBAAgB,CAAC9C,GAAG,UAAU,CAAE,CAAC,CAC5B,CAAC,CACF,CAAC,EACL,CAEX,EAEA,EAAewM,E,YCvCFe,EAER,SAAH/R,EAAuB,KAAjBiR,EAAUjR,EAAViR,WACN3Q,KAA8BC,EAAAA,UAAkB,EAAK,EAACC,EAAAC,EAAAA,EAAAH,EAAA,GAA/CsH,EAAOpH,EAAA,GAAE0Q,EAAU1Q,EAAA,GAC1B8E,KAA8B/E,EAAAA,UAAgD,EAACgF,EAAA9E,EAAAA,EAAA6E,EAAA,GAAxE0M,EAAOzM,EAAA,GAAE0M,EAAU1M,EAAA,GACpB8L,KAAOC,EAAAA,SAAQ,EAEfC,KAAY1Q,EAAAA,aAAY,UAAM,CAClCqQ,EAAW,EAAI,EACX,OAAOc,GAAY,aACrBE,EAAAA,IAA6BT,OAAOR,CAAU,EAAGQ,OAAOO,CAAO,CAAC,EAC7DxQ,KAAK,SAACa,EAAa,CACdA,EAAS4D,QACXI,EAAAA,GAAQJ,QAAQ5D,EAASgE,OAAO,EAEhCA,EAAAA,GAAQD,MAAM/D,EAASgE,OAAO,CAElC,CAAC,EAAC,MACK,SAACC,EAAU,CAAF,OAAKD,EAAAA,GAAQD,MAAME,EAAIC,SAAS,CAAC,CAAC,GAAC,QAC1C,kBAAM2K,EAAW,EAAK,CAAC,EAEtC,EAAG,CAACc,EAASf,CAAU,CAAC,EAExB,SACErO,EAAAA,MAAC8L,EAAAA,EAAK,CAAA7L,SAAA,IACJ6D,EAAAA,KAACyL,GAAAA,EAAc,CACbR,SAAU,GACV3I,MAAOgJ,EACPjJ,SAAU,SAACqJ,EAAY,CAAF,OAAKH,EAAWG,CAAU,CAAC,CAAC,CAClD,KACD1L,EAAAA,KAACkL,EAAAA,EAAO,CAACzM,MAAOkM,EAAKQ,cAAc,CAAErN,GAAI,+BAAgC,CAAC,EAAE3B,YAC1E6D,EAAAA,KAACiB,EAAAA,GAAM,CAACC,QAASA,EAASC,QAAS,kBAAM0J,EAAU,CAAC,EAAEO,SAAU,CAACE,EAAQnP,YACvE6D,EAAAA,KAACY,EAAAA,iBAAgB,CAAC9C,GAAG,UAAU,CAAE,CAAC,CAC5B,CAAC,CACF,CAAC,EACL,CAEX,EAEA,EAAeuN,E,uGCvBTM,GAKD,SAAHrS,EAAgD,KAAAsS,EAAAtS,EAA1C8R,SAAAA,EAAQQ,IAAA,OAAG,GAAKA,EAAE9N,EAAExE,EAAFwE,GAAI+N,EAAavS,EAAbuS,cAC5BjS,KAA0BC,EAAAA,UAA6B,CAAE6E,MAAO,OAAQ,CAAC,EAAC5E,EAAAC,EAAAA,EAAAH,EAAA,GAAnE8E,EAAK5E,EAAA,GAAE6E,EAAQ7E,EAAA,GAEhBqH,KAAUhH,EAAAA,aAAY,UAAM,CAChCwE,EAAS,CAAED,MAAO,SAAU,CAAC,KAC7BoN,EAAAA,IAAgBhO,CAAE,EACfhD,KAAK,SAAC2E,EAAS,CACVA,EAAKF,SACHsM,GACFA,EAAcpM,EAAKA,IAAI,EAErBA,EAAKA,KAAKsM,MAAQtM,EAAKA,KAAKuM,GAC9BrN,EAAS,CACPD,MAAO,SACPe,KAAMA,EAAKA,KACXE,QAAS,iBAAFhF,OAAmB8E,EAAKA,KAAKuM,EAAE,CACxC,CAAC,EACQvM,EAAKA,KAAKiC,IACnB/C,EAAS,CACPD,MAAO,SACPe,KAAMA,EAAKA,KACXE,WACEzD,EAAAA,MAAC0G,EAAAA,SAAc,CAAAzG,SAAA,IACb6D,EAAAA,KAACY,EAAAA,iBAAgB,CAAC9C,GAAG,UAAU,CAAE,EAAE,OACnCkC,EAAAA,KAAA,KAAGgD,OAAO,SAASoH,KAAM3K,EAAKA,KAAKiC,IAAKyI,IAAI,aAAYhO,SACrDsD,EAAKA,KAAK9F,QAAQ,CAClB,CAAC,EACU,CAEpB,CAAC,EAEDgF,EAAS,CAAED,MAAO,SAAUe,KAAMA,EAAKA,KAAME,QAASF,EAAKE,OAAQ,CAAC,GAGtEhB,EAAS,CAAED,MAAO,QAASgB,MAAOD,EAAKE,OAAQ,CAAC,CAEpD,CAAC,EAAC,MACK,UAAM,CACXhB,EAAS,CAAED,MAAO,QAASgB,MAAO,OAAQ,CAAC,CAC7C,CAAC,CACL,EAAG,CAAC5B,CAAE,CAAC,EACP,SACE5B,EAAAA,MAAC0G,EAAAA,SAAc,CAAAzG,SAAA,IACb6D,EAAAA,KAACiB,EAAAA,GAAM,CACLpG,KAAK,UACLqG,QAASxC,EAAMA,QAAU,UACzB0M,SAAUA,EACVjK,QAASA,EAAQhF,YAEjB6D,EAAAA,KAACY,EAAAA,iBAAgB,CAAC9C,GAAG,SAAS,CAAE,CAAC,CAC3B,EACPY,EAAMA,QAAU,aACfsB,EAAAA,KAACC,GAAAA,EAAK,CACJN,QAASjB,EAAMiB,QACf9E,KAAK,UACLoR,SAAQ,GACRC,QAAS,kBAAMvN,EAAS,CAAED,MAAO,OAAQ,CAAC,CAAC,CAAC,CAC7C,EAEFA,EAAMA,QAAU,YACfsB,EAAAA,KAACC,GAAAA,EAAK,CACJN,QAASjB,EAAMgB,MACf7E,KAAK,QACLoR,SAAQ,GACRC,QAAS,kBAAMvN,EAAS,CAAED,MAAO,OAAQ,CAAC,CAAC,CAAC,CAC7C,CACF,EACa,CAEpB,EAEA,GAAeiN,GC/EPQ,GAAUC,EAAAA,EAAVD,MAGFE,GAAgB,SAAC5M,EAAyD,CAC9E,OAAOwG,OAAOqG,QAAQ7M,CAAI,EAAEY,IAAI,SAACkM,EAAU,CACzC,MAAO,CACLC,IAAKD,EAAM,CAAC,EACZxR,QAASwR,EAAM,CAAC,CAClB,CACF,CAAC,CACH,EAEME,GAAgB,SAAChN,EAA8B,QACnDwG,OAAOC,OAAM1J,MAAbyJ,OAAM,CAAQ,CAAC,CAAC,EAAAtL,OAAAsB,GAAAA,EAAKwD,CAAI,CAAC,CAAD,CAAC,EAItBiN,GAAuB,SAACvG,EAAkC,CAC9D,IAAMwG,EAAiB,CAAC,OAAQ,QAAS,SAAS,EAClD,OAAO1G,OAAO2G,KAAKzG,CAAM,EACtB3C,OAAO,SAACgJ,EAAK,CAAF,MAAK,CAACG,EAAehK,SAAS6J,CAAG,CAAC,GAC7CrH,OAAO,SAAClB,EAAKuI,EAAQ,CACpBvI,OAAAA,EAAIuI,CAAG,EAAIrG,EAAOqG,CAAG,EACdvI,CACT,EAAG,CAAC,CAA2B,CACnC,EAUM4I,GAAWC,EAAAA,GAEjB,GAAe,UAAM,CACnB,IAAMnC,KAAOC,EAAAA,SAAQ,EACf9N,KAASiQ,EAAAA,WAA6D,EAEpEpI,EAAiB7H,EAAjB6H,SAAU7G,EAAOhB,EAAPgB,GAEZkP,EAAQlP,IAAO,MAErBlE,KAA0BC,EAAAA,UAAkB,EAAK,EAACC,EAAAC,EAAAA,EAAAH,EAAA,GAA3CqT,EAAKnT,EAAA,GAAEoT,EAAQpT,EAAA,GACtBqT,EAAevE,EAAAA,GAAQwE,QAAQ,EAACC,EAAAtT,EAAAA,EAAAoT,EAAA,GAAzBrE,EAAIuE,EAAA,GACXzO,KAAkC/E,EAAAA,UAAgC,EAACgF,EAAA9E,EAAAA,EAAA6E,EAAA,GAA5DwD,EAASvD,EAAA,GAAEyO,EAAYzO,EAAA,GAC9BG,MAA4BnF,EAAAA,UAA6B0P,MAAS,EAACtK,GAAAlF,EAAAA,EAAAiF,GAAA,GAA5DuO,EAAMtO,GAAA,GAAEuO,GAASvO,GAAA,GACxBwO,MAAsC5T,EAAAA,UAAc,EAAC6T,GAAA3T,EAAAA,EAAA0T,GAAA,GAA9CE,GAAWD,GAAA,GAAEE,GAAcF,GAAA,GAClCG,MAAsDhU,EAAAA,UAAkB,EAAK,EAACiU,GAAA/T,EAAAA,EAAA8T,GAAA,GAAvEE,GAAmBD,GAAA,GAAEE,GAAsBF,GAAA,MAElD7S,EAAAA,WAAU,UAAM,IACdgT,EAAAA,IAAe,EAAEnT,KAAK,SAACa,EAAa,CAClC2R,EAAa3R,EAAS4D,QAAU5D,EAAS8D,KAAO,CAAC,CAAC,CACpD,CAAC,CACH,EAAG,CAAC,CAAC,KAELxE,EAAAA,WAAU,UAAM,CACd,IAAMkL,EAAS2C,EAAKoF,eAAe,EAE7BC,EACJZ,GACAtH,OAAO2G,KAAKW,EAAOa,QAAQ,EAAE/N,IAAI,SAACgO,EAAY,CAC5C,OAAA/I,EAAAA,EAAA,GACG+I,EAAUd,EAAOa,SAASC,CAAO,EAAEC,eAAe,CAEvD,CAAC,EAECH,GAAiBnB,GACnBlE,EAAKE,eAAc1L,EAAAA,EAAAA,EAAAA,EAAC,CAAC,EAChB6I,CAAM,EACNsG,GAAc0B,CAAa,CAAC,CAChC,CAEL,EAAG,CAACZ,CAAM,CAAC,EAEX,IAAMgB,MAAkBpU,EAAAA,aACtB,SAACqU,EAAkB,CACjB,GAAIA,GAAS7J,EAAU,CACrB,IAAM8J,EAAUrM,GAAcA,EAAUoM,CAAK,EAAE3B,GAASlI,CAAQ,CAAC,EAEjE6I,GAAUiB,CAAiB,CAC7B,CACAT,GAAuBQ,IAAUE,EAAAA,GAAeC,sBAAsB,CACxE,EACA,CAACvM,EAAWtE,CAAE,CAChB,EAEM8Q,MAAYzU,EAAAA,aAAWuC,EAAAA,EAAAC,EAAAA,EAAC,EAADC,KAAC,SAAAC,GAAA,KAAAlB,EAAA0E,EAAA4D,EAAA,OAAAtH,EAAAA,EAAA,EAAAK,KAAA,SAAAC,EAAA,eAAAA,EAAAC,KAAAD,EAAAE,KAAA,QAAAF,OAAAA,EAAAE,KAAA,KACL0R,EAAAA,IAAc9D,OAAOjN,CAAE,CAAC,EAAC,OAA1CnC,EAAQsB,EAAA8O,KACVpQ,EAAS4D,UACLc,EACJ1E,EAAS8D,KAAK2O,UACdzS,EAAS8D,KAAK2O,SAAS/N,IAAI,SAACC,EAAS,CACnC,OAAAgF,EAAAA,EAAA,GACGhF,EAAKkM,IAAMlM,EAAKvF,OAAO,CAE5B,CAAC,EAEGkJ,EAAM5D,GAAOoM,GAAcpM,CAAG,EAEpCyI,EAAKE,eAAc1L,EAAAA,EAAAA,EAAAA,EAAC,CAAC,EAChB3B,EAAS8D,IAAI,EACbwE,CAAG,CACP,EACDsK,GAAgBO,OAAOnT,EAAS8D,KAAK+O,KAAK,CAAC,EAC3CtB,EAAS,EAAI,GACd,wBAAAjQ,EAAAO,KAAA,IAAAX,CAAA,EACF,GAAE,CAACiB,EAAIsE,CAAS,CAAC,EAEZ2M,MAAe5U,EAAAA,aAAW,eAAA6U,EAAAtS,EAAAA,EAAAC,EAAAA,EAAC,EAADC,KAC9B,SAAAiB,EAAOsI,EAA+B,CAAF,IAAAxK,EAAAsT,GAAA,OAAAtS,EAAAA,EAAA,EAAAK,KAAA,SAAAe,EAAE,CAAF,cAAAA,EAAAb,KAAAa,EAAAZ,KAAE,CAAF,OAMqB,GAHjD8R,GAA+B3R,EAAAA,EAAAA,EAAAA,EAAA,GAChC6I,CAAM,MACT+I,QAASrC,GAASlI,CAAQ,EAC1ByJ,SAAU/B,GAAcK,GAAqBvG,CAAM,CAAC,CAAC,IAGnD6G,EAAO,CAAFjP,EAAAZ,KAAA,QAAAY,OAAAA,EAAAZ,KAAA,KACUgS,EAAAA,IAAeF,EAAQ,EAAC,OAAzCtT,EAAQoC,EAAAgO,KACJpQ,EAAS4D,SACX6P,EAAAA,QAAQC,KAAK,4BAAD1U,OAA6BgK,EAAQ,KAAAhK,OAAIgB,EAAS8D,KAAK3B,EAAE,CAAE,EACxEC,EAAAZ,KAAA,gBAAAY,OAAAA,EAAAZ,KAAA,MAEgBmS,EAAAA,IAAevE,OAAOjN,CAAE,EAAGmR,EAAQ,EAAC,QAArDtT,EAAQoC,EAAAgO,KAAA,QAEVmB,EAAS,EAAI,EACbvN,EAAAA,GAAQJ,QAAQ5D,EAASgE,OAAO,EAAE,yBAAA5B,EAAAP,KAAA,IAAAK,CAAA,EACnC,mBAAAxB,EAAA,QAAA2S,EAAAxS,MAAA,KAAAC,SAAA,MACD,CAAC2F,EAAWtE,CAAE,CAChB,KAEA7C,EAAAA,WAAU,UAAM,CACV+R,GAIJ4B,GAAU,CACZ,EAAG,CAAC9Q,EAAIsE,CAAS,CAAC,EAElB,IAAMmN,MAAsBpV,EAAAA,aAC1B,SAAC+U,EAA4C,CAC3C,OAAO9M,EACH6D,OAAO2G,KAAKxK,CAAS,EAAE+C,OAAO,SAACC,EAAKC,EAAS,CAC3C,OAAIjD,EAAUiD,CAAI,EAAE6J,CAAO,EACzB5R,EAAAA,EAAAA,EAAAA,EAAA,GAAY8H,CAAG,KAAAE,EAAAA,EAAA,GAAGD,EAAOsF,EAAKQ,cAAc,CAAErN,GAAIuH,EAAMrE,eAAgBqE,CAAK,CAAC,CAAC,GAE1ED,CACT,EAAG,CAAC,CAAC,EACL,CAAC,CACP,EACA,CAAChD,CAAS,CACZ,EAEA,SACElG,EAAAA,MAACsT,EAAAA,GAAa,CACZ/Q,MACEuO,KACE9Q,EAAAA,MAAA,QAAAC,SAAA,IACE6D,EAAAA,KAACY,EAAAA,iBAAgB,CAAC9C,GAAG,KAAK,CAAE,EAAC,IAAE6G,EAAS,OAAC3E,EAAAA,KAACY,EAAAA,iBAAgB,CAAC9C,GAAG,UAAU,CAAE,CAAC,EACvE,KAEN5B,EAAAA,MAAA,QAAAC,SAAA,IACE6D,EAAAA,KAACY,EAAAA,iBAAgB,CAAC9C,GAAG,MAAM,CAAE,EAAC,IAAE6G,EAAS,OAAC3E,EAAAA,KAACY,EAAAA,iBAAgB,CAAC9C,GAAG,UAAU,CAAE,CAAC,EACxE,EAET3B,SAAA,IAED6D,EAAAA,KAACyP,EAAAA,GAAO,CAACjP,KAAK,QAAOrE,YACnBD,EAAAA,MAAC0M,EAAAA,GAAO,CACN8G,cAAe,CAAC,EAChBC,SAAUZ,GACVjG,KAAMA,EACN8G,eAAgB,UAAM,CACpB,IAAMzJ,EAAS2C,EAAKoF,eAAe,EACnCK,GAAgBpI,EAAOqI,KAAK,EAC5BtB,EAAS,EAAK,CAChB,EAAE/Q,SAAA,IAEFD,EAAAA,MAAC0M,EAAAA,GAAAA,MAAa,CAAAzM,SAAA,IACZ6D,EAAAA,KAACoJ,GAAAA,EAAW,CACVF,MAAM,KACNjH,KAAK,OACL+H,SAAOhK,EAAAA,KAACY,EAAAA,iBAAgB,CAAC9C,GAAG,MAAM,CAAE,EACpC+R,YAAalF,EAAKQ,cAAc,CAC9BrN,GAAI,MACN,CAAC,EACDwL,MAAO,CAAC,CAAEtH,SAAU,GAAMrC,WAASK,EAAAA,KAACY,EAAAA,iBAAgB,CAAC9C,GAAG,QAAQ,CAAE,CAAE,CAAC,CAAE,CACxE,KACDkC,EAAAA,KAAC8P,EAAAA,EAAa,CACZ7N,KAAK,QACLiH,MAAM,KACNc,SAAOhK,EAAAA,KAACY,EAAAA,iBAAgB,CAAC9C,GAAG,OAAO,CAAE,EACrCiS,UACE3N,EACImN,GAAoB1C,GAASlI,CAAQ,CAAsC,EAC3E,CAAC,EAEPkL,YAAalF,EAAKQ,cAAc,CAC9BrN,GAAI,OACN,CAAC,EACDwL,MAAO,CAAC,CAAEtH,SAAU,GAAMrC,WAASK,EAAAA,KAACY,EAAAA,iBAAgB,CAAC9C,GAAG,QAAQ,CAAE,CAAE,CAAC,CAAE,CACxE,KAEDkC,EAAAA,KAAC4I,EAAAA,GAAQrH,KAAI,CAACyI,SAAOhK,EAAAA,KAACY,EAAAA,iBAAgB,CAAC9C,GAAG,mCAAmC,CAAE,EAAE3B,YAC/E6D,EAAAA,KAACgQ,GAAAA,EAAe,CAAC/N,KAAK,SAAS,CAAE,CAAC,CACtB,CAAC,EACF,EAEd,CAAC+K,GAASrI,IAAa,UACtBzI,EAAAA,MAAC0M,EAAAA,GAAAA,MAAa,CAAAzM,SAAA,IACZ6D,EAAAA,KAAC4I,EAAAA,GAAQrH,KAAI,CAACyI,SAAOhK,EAAAA,KAACY,EAAAA,iBAAgB,CAAC9C,GAAG,SAAS,CAAE,EAAE3B,YACrD6D,EAAAA,KAAC2L,GAAa,CACZP,SAAU,CAAC6B,EACXnP,GAAIiN,OAAOjN,CAAE,EACbjD,KAAM8J,EACNkH,cAAe,SAACpM,EAAS,CACnBA,GAAQA,EAAKA,MAAQA,EAAKA,KAAK1E,SACjC6S,GAAenO,EAAKA,KAAK1E,OAAO,CAEpC,CAAE,CACH,CAAC,CACU,EAEbgT,OACC/N,EAAAA,KAAC4I,EAAAA,GAAQrH,KAAI,CACXyI,SAAOhK,EAAAA,KAACY,EAAAA,iBAAgB,CAAC9C,GAAG,cAAc,CAAE,EAC5CmM,WAASjK,EAAAA,KAACY,EAAAA,iBAAgB,CAAC9C,GAAG,sBAAsB,CAAE,EAAE3B,YAExD6D,EAAAA,KAACsK,EAAuB,CAACC,WAAYQ,OAAOjN,CAAE,CAAE,CAAE,CAAC,CACvC,EAGfiQ,OACC/N,EAAAA,KAAC4I,EAAAA,GAAQrH,KAAI,CACXyI,SAAOhK,EAAAA,KAACY,EAAAA,iBAAgB,CAAC9C,GAAG,cAAc,CAAE,EAC5CmM,WAASjK,EAAAA,KAACY,EAAAA,iBAAgB,CAAC9C,GAAG,sBAAsB,CAAE,EAAE3B,YAExD6D,EAAAA,KAACqL,EAA8B,CAACd,WAAYQ,OAAOjN,CAAE,CAAE,CAAE,CAAC,CAC9C,CACf,EACY,EAGhB+O,GAASlI,CAAQ,IAA2CmI,EAAAA,GAAqBrP,KAChF,CAACuP,MACChN,EAAAA,KAACoM,EAAAA,EAAQ,CAAC6D,MAAK,GAACC,qBAAoB,GAACC,iBAAkB,CAAC,EAAE,EAAEhU,YAC1D6D,EAAAA,KAACmM,GAAK,CAACxL,UAAQX,EAAAA,KAACY,EAAAA,iBAAgB,CAAC9C,GAAG,gBAAgB,CAAE,EAAE3B,YACtD6D,EAAAA,KAAC1B,GAAAA,EAAO,CAACE,YAAauM,OAAOjN,CAAE,CAAE,CAAE,CAAC,EADwB,CAEvD,CAAC,CACA,EAGb,CAACyP,GAAU,CAACP,KACXhN,EAAAA,KAACE,GAAAA,EAAI,EAAE,EAEPqN,GACAA,EAAOa,UACPnI,OAAO2G,KAAKW,EAAOa,QAAQ,EAAE/N,IAAI,SAACgO,EAAS5I,EAAU,CACnD,IAAM2K,EAAY7C,EAAOa,UAAYb,EAAOa,SAASC,CAAO,EAE5D,SACEnS,EAAAA,MAAC0G,EAAAA,SAAc,CAAAzG,SAAA,CACZsJ,IAAU,GAAKd,IAAa,UAC3BzI,EAAAA,MAAC0G,EAAAA,SAAc,CAAAzG,SAAA,IACb6D,EAAAA,KAACI,GAAAA,EAAO,CAAAjE,YACN6D,EAAAA,KAACY,EAAAA,iBAAgB,CAAC9C,GAAG,kBAAkB,CAAE,CAAC,CACnC,KACTkC,EAAAA,KAACgI,EAAAA,EAAK,CAAA7L,YACJ6D,EAAAA,KAACa,GAAAA,EAAU,CAAA1E,SACRoR,EAAOnL,UAAU/B,IAAI,SAACkD,EAAO,CAAF,SAC1BvD,EAAAA,KAACiI,GAAAA,EAAG,CAACC,MAAM,SAAQ/L,SAChBoH,CAAK,EADiBA,CAEpB,CAAC,CACP,CAAC,CACQ,CAAC,CACR,CAAC,EACM,KAElBvD,EAAAA,KAACI,GAAAA,EAAO,EAAE,KACVJ,EAAAA,KAAC4H,EAAc,CAAC3F,KAAMoM,EAAS7H,MAAO4J,EAAWhO,UAAWmL,EAAOnL,SAAU,CAAE,CAAC,GAlB7DiM,CAmBL,CAEpB,CAAC,KAEHrO,EAAAA,KAACI,GAAAA,EAAO,EAAE,CAAC,EACJ,CAAC,CACH,EACRuN,OAAe3N,EAAAA,KAAA,KAAA7D,SAAG,gBAAc,CAAG,CAAC,EACxB,CAEnB,C","sources":["webpack://ant-design-pro/./src/components/Pdf/ziplist.tsx","webpack://ant-design-pro/./src/services/escola-lms/pdfs.ts","webpack://ant-design-pro/./src/components/Pdf/list.tsx","webpack://ant-design-pro/./src/components/AutoCompleteArea/index.tsx","webpack://ant-design-pro/./src/components/PdfEditor/index.tsx","webpack://ant-design-pro/./src/components/TemplateFields/index.tsx","webpack://ant-design-pro/./src/components/TemplateManuallyTrigger/index.tsx","webpack://ant-design-pro/./src/components/TemplateManuallyTrigger/product.tsx","webpack://ant-design-pro/./src/pages/Templates/components/PreviewButton.tsx","webpack://ant-design-pro/./src/pages/Templates/form.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { saveAs } from 'file-saver';\nimport { useCallback } from 'react';\n\nimport JSZip from 'jszip';\n\ndeclare const REACT_APP_API_URL: string;\n\nexport const PdfZipList: React.FC<{\n  pdfIds: number[];\n  onProgress?: (proc: number) => void;\n  onFinished?: () => void;\n  filename?: string;\n}> = ({ pdfIds, onProgress, onFinished, filename = 'package.zip' }) => {\n  const [blobs, setBlobs] = useState<Blob[]>([]);\n\n  const onFinishedLocal = useCallback(\n    (allBlobs: Blob[]) => {\n      const zip = new JSZip();\n\n      allBlobs.forEach((blob, i) => zip.file(`${pdfIds[i]}.pdf`, blob));\n\n      zip.generateAsync({ type: 'blob' }).then(function (content) {\n        saveAs(content, filename);\n        if (onFinished) {\n          onFinished();\n        }\n      });\n    },\n    [blobs, filename],\n  );\n\n  useEffect(() => {\n    pdfIds.forEach((pdfId) => {\n      const result = fetch(\n        `${window.REACT_APP_API_URL || REACT_APP_API_URL}/api/pdfs/generate/${pdfId}`,\n        {\n          headers: { Authorization: `Bearer ${localStorage.getItem('TOKEN')}` },\n        },\n      );\n\n      result\n        .then((response) => response.blob())\n        .then((pdfBlob) => {\n          if (pdfBlob && pdfBlob instanceof Blob) {\n            setBlobs((prevBlobs) => {\n              const progress = (prevBlobs.length + 1) / pdfIds.length;\n              if (onProgress) {\n                onProgress(progress);\n              }\n              if (progress >= 1) {\n                onFinishedLocal([...prevBlobs, pdfBlob]);\n              }\n              return [...prevBlobs, pdfBlob];\n            });\n          }\n        });\n    });\n\n    /*\n\n      const fetch = async () => {\n        const responses = await Promise.all(pdfIds.map((pdfId) => generatedPdf(pdfId)));\n        setState({\n          state: 'start',\n          finishedPdfs: responses\n            .filter((response) => response.success)\n            .map((response) => response.success && response.data),\n        });\n      };\n      fetch();      \n\n      */\n  }, [pdfIds]);\n\n  /*\n\n  useEffect(() => {\n    if (state.state === 'processing') {\n      if (state.finishedPdfs.length === 0) {\n        setState({\n          state: 'finished',\n        });\n      } else {\n        setState({\n          state: 'start',\n          finishedPdfs: state.finishedPdfs,\n        });\n      }\n      if (onProgress) {\n        onProgress(1 - state.finishedPdfs.length / pdfIds.length);\n      }\n    }\n\n    if (state.state === 'finished') {\n      onFinishedLocal();\n    }\n  }, [state, pdfIds]);\n\n  */\n\n  return (\n    <p>\n      Progress {blobs.length} / {pdfIds.length}\n    </p>\n  );\n};\n\nexport default PdfZipList;\n","import type { AxiosRequestConfig } from '@umijs/max';\nimport { request } from 'umi';\n\n/**  GET /api/admin/pdfs */\nexport async function pdfs(\n  params: EscolaLms.TemplatesPdf.Http.Requests.PdfListingAdminRequest,\n  options?: AxiosRequestConfig,\n) {\n  return request<API.DefaultMetaResponse<EscolaLms.TemplatesPdf.Models.FabricPDF>>(\n    '/api/admin/pdfs',\n    {\n      params: {\n        ...params,\n      },\n      method: 'GET',\n      ...(options || {}),\n    },\n  );\n}\n\n/**  GET /api/pdf/{id} */\n\nexport async function pdf(id: number, options?: AxiosRequestConfig) {\n  return request<API.DefaultResponse<any>>(`/api/pdfs/${id}`, {\n    method: 'GET',\n    ...(options || {}),\n  });\n}\n\n/**  GET /api/pdf/generate/{id} */\n\nexport async function generatedPdf(id: number, options?: AxiosRequestConfig) {\n  return request<Response>(`/api/pdfs/generate/${id}`, {\n    method: 'GET',\n    ...(options || {}),\n  });\n}\n","import { Alert, Button, Divider, List, Spin, Typography } from 'antd';\nimport React, { Fragment, useEffect, useState } from 'react';\n\nimport { useCallback } from 'react';\nimport { FormattedMessage } from 'umi';\n\nimport PdfZipList from '@/components/Pdf/ziplist';\nimport { pdf, pdfs } from '@/services/escola-lms/pdfs';\n\nimport TypeButtonDrawer from '@/components/TypeButtonDrawer';\nimport { DownloadOutlined } from '@ant-design/icons';\nimport AuthenticatedLinkButton from '../AuthenticatedLinkButton';\n\ntype Request = EscolaLms.TemplatesPdf.Http.Requests.PdfListingAdminRequest & {\n  template_id?: number;\n  title?: string;\n};\ntype Model = EscolaLms.TemplatesPdf.Models.FabricPDF;\n\ntype ModelState =\n  | {\n      state: 'initial';\n    }\n  | {\n      state: 'loading';\n    }\n  | {\n      state: 'loaded';\n      list: Model[];\n    }\n  | {\n      state: 'error';\n      error: string;\n    };\n\ntype PreviewState =\n  | {\n      state: 'initial';\n    }\n  | {\n      state: 'loading';\n    }\n  | {\n      state: 'loaded';\n      data: any;\n    };\n\nexport const PdfList: React.FC<Request> = ({ user_id, template_id, title }) => {\n  const [state, setState] = useState<ModelState>({ state: 'initial' });\n\n  const [previewState, setPreviewState] = useState<PreviewState>({ state: 'initial' });\n  const [generateAll, setGenerateAll] = useState<boolean>(false);\n\n  useEffect(() => {\n    setState({ state: 'loading' });\n    const abortController = new AbortController();\n    pdfs({ user_id, template_id }, { signal: abortController.signal })\n      .then((response) => {\n        if (response && response.success) {\n          setState({ state: 'loaded', list: response.data });\n        } else if (response && !response.success) {\n          setState({ state: 'error', error: response.message });\n        }\n      })\n      .catch((err) => setState({ state: 'error', error: err.toString() }));\n\n    return () => {\n      abortController.abort();\n    };\n  }, []);\n\n  const getPdf = useCallback((id: number) => {\n    setPreviewState({ state: 'loading' });\n    pdf(id).then((response) => {\n      if (response.success) {\n        setPreviewState({ state: 'loaded', data: response.data.content });\n      } else {\n        setPreviewState({ state: 'initial' });\n      }\n    });\n  }, []);\n\n  if (state.state === 'error') {\n    return <Alert message=\"Error Text\" type=\"error\" />;\n  }\n\n  if (state.state === 'loading' || state.state === 'initial') {\n    return <Spin />;\n  }\n\n  return (\n    <Fragment>\n      <Divider />\n      {generateAll && (\n        <PdfZipList\n          pdfIds={state.list.map((item) => item.id)}\n          onFinished={() => setGenerateAll(false)}\n        />\n      )}\n      <List\n        size=\"small\"\n        itemLayout=\"horizontal\"\n        dataSource={state.list}\n        header={\n          <div>\n            <FormattedMessage id=\"template\" />{' '}\n            {title && <Typography.Text strong>{title}</Typography.Text>}\n            {'. '}\n            <FormattedMessage id=\"generated_pdfs\" defaultMessage=\"Generated PDFs\" />{' '}\n            <Button\n              loading={generateAll}\n              type=\"primary\"\n              onClick={() => setGenerateAll(true)}\n              icon={<DownloadOutlined />}\n              size=\"small\"\n            >\n              <FormattedMessage id=\"download_all\" defaultMessage=\"Download all PDFs\" />\n            </Button>\n          </div>\n        }\n        renderItem={(item) => (\n          <List.Item\n            actions={[\n              <AuthenticatedLinkButton\n                url={`/api/pdfs/generate/${item.id}`}\n                filename={`generated-${item.id}.pdf`}\n                key=\"download\"\n                size=\"small\"\n                icon={<DownloadOutlined />}\n                type=\"primary\"\n                onClick={() => getPdf(item.id)}\n                loading={previewState.state === 'loading'}\n              >\n                <FormattedMessage id=\"download_pdf\" defaultMessage=\"Download PDFs\" />\n              </AuthenticatedLinkButton>,\n            ]}\n          >\n            {item.title} <TypeButtonDrawer type=\"App\\Models\\User\" type_id={item.user_id} />\n          </List.Item>\n        )}\n      />\n    </Fragment>\n  );\n};\n\nexport default PdfList;\n","import ReactTextareaAutocomplete from '@webscopeio/react-textarea-autocomplete';\nimport React from 'react';\n// https://github.com/webscopeio/react-textarea-autocomplete\nimport '@webscopeio/react-textarea-autocomplete/style.css';\nimport { FormattedMessage } from 'umi';\nimport './index.css';\n\ntype ItemProps = {\n  selected: boolean;\n  entity: Variable;\n};\n\ntype Variable = {\n  name: string;\n  required: boolean;\n};\n\nconst Item = (props: ItemProps) => {\n  return <div className={`${props.entity.required && 'required'}`}>@{`${props.entity.name}`}</div>;\n};\n\nconst AutoCompleteArea: React.FC<{\n  requiredVariables: string[];\n  variables: string[];\n  onChange: (value: string) => void;\n  value: string;\n  error: string[];\n  styles?: React.CSSProperties;\n}> = ({ requiredVariables, variables, onChange, value, error, styles }) => {\n  const varsObject = variables.map((v: string) => ({\n    name: v.substring(1),\n    required: requiredVariables.includes(v),\n  }));\n\n  return (\n    <React.Fragment>\n      <ReactTextareaAutocomplete\n        style={styles}\n        className={`ant-input pro-field pro-field-lg rta__textarea_wide ${error.length && 'error'}`}\n        onChange={(e) => onChange(e.target.value)}\n        loadingComponent={() => <FormattedMessage id=\"loading\" />}\n        minChar={0}\n        value={value}\n        itemStyle={{ fontSize: '16px' }}\n        trigger={{\n          '@': {\n            dataProvider: (token) => {\n              return varsObject.filter((v) => v.name.startsWith(token));\n            }, // @ts-ignore\n            component: Item,\n            output: (item, trigger) => {\n              // @ts-ignore\n              return `${trigger}${item.name}`;\n            },\n          },\n        }}\n      />\n      <div role=\"alert\" className=\"ant-form-item-explain-error\">\n        {error}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default AutoCompleteArea;\n","import type { SyntheticEvent } from 'react';\nimport React, { useEffect, useRef } from 'react';\ndeclare const REACT_APP_API_URL: string;\n\n// @ts-ignore\nimport { ReportBro } from 'reportbro-designer';\nimport '../../../node_modules/reportbro-designer/dist/reportbro.css';\nimport './index.css';\n\nimport type { ReportBroTemplate } from './types';\n\nconst getMockedValueForVariable = (varname: string) => {\n  switch (varname.toLocaleLowerCase()) {\n    case 'varusername':\n      return 'John Doe';\n    case 'varcoursetitle':\n      return 'How to be an LMS Expert';\n    case 'varappname':\n      return 'Wellms Headless LMS';\n    default:\n      return 'Lorem Ipsum';\n  }\n};\n\nfunction isObject(obj: unknown): obj is Record<string, unknown> {\n  return typeof obj === 'object' && obj !== null && !Array.isArray(obj);\n}\n\nfunction isReportBroTemplate(obj: unknown | ReportBroTemplate): obj is ReportBroTemplate {\n  return (\n    isObject(obj) &&\n    typeof obj?.version === 'number' &&\n    isObject(obj?.documentProperties) &&\n    Array.isArray(obj?.styles) &&\n    Array.isArray(obj?.parameters) &&\n    Array.isArray(obj?.docElements)\n  );\n}\n\nconst addVariablesToTemplate = (\n  template: ReportBroTemplate,\n  variables: string[],\n  required_variables: string[],\n): ReportBroTemplate => {\n  const maxId =\n    Math.max.apply(\n      null,\n      template.parameters\n        ? [template.parameters.map((p) => p.id), template.docElements.map((p) => p.id)].flat()\n        : [1],\n    ) + 1;\n\n  const dict: Record<string, ReportBroTemplate['parameters'][number]> = template.parameters\n    ? template.parameters.reduce((acc, curr) => {\n        return { ...acc, [curr.name]: curr };\n      }, {})\n    : {};\n\n  const tpl: Record<string, ReportBroTemplate['parameters'][number]> = variables\n    .map((varname) => varname.replace('@', ''))\n\n    .reduce((acc, curr, index) => {\n      if (acc[curr]) {\n        return {\n          ...acc,\n          [curr]: {\n            ...acc[curr],\n            id: maxId + index,\n          },\n        };\n      }\n      return {\n        ...acc,\n        [curr]: {\n          id: maxId + index,\n          name: curr,\n          type: 'string',\n          arrayItemType: 'string',\n          eval: false,\n          nullable: !required_variables.includes(curr),\n          pattern: '',\n          expression: '',\n          showOnlyNameType: false,\n          testData: getMockedValueForVariable(curr),\n        },\n      };\n    }, dict);\n\n  return Object.assign({}, template, { parameters: Object.values(tpl) });\n};\n\nexport const PdfEditor: React.FC<{\n  field: API.TemplateField;\n  variables: string[];\n  onTemplateSaved: (tpl: object) => void;\n  reportBroTemplate?: ReportBroTemplate;\n  onTemplateUpdated?: (tpl: object) => void;\n}> = ({ onTemplateSaved, reportBroTemplate = null, field, variables, onTemplateUpdated }) => {\n  const ref = useRef<HTMLDivElement>(null);\n\n  const stopPropagation = (e: SyntheticEvent) => {\n    const tagName = (e.nativeEvent.target as HTMLElement).tagName.toLowerCase();\n    switch (tagName) {\n      case 'span':\n      case 'button':\n        e.nativeEvent.stopPropagation();\n        e.nativeEvent.preventDefault();\n      default:\n        return;\n    }\n  };\n\n  useEffect(() => {\n    if (ref.current) {\n      const rb = new ReportBro(ref.current, {\n        enableSpreadsheet: false,\n        fonts: [{ name: 'Open Sans', value: 'Open Sans' }],\n        defaultFont: 'Open Sans',\n        // src={`${window.REACT_APP_API_URL || REACT_APP_API_URL}/api/scorm/play/${uuid}`}\n        reportServerUrl: `${\n          window.REACT_APP_API_URL || REACT_APP_API_URL\n        }/api/pdfs/reportbro/report/run`,\n        saveCallback: () => {\n          onTemplateSaved(rb.getReport());\n        },\n        cmdExecutedCallback: () => {\n          if (onTemplateUpdated) {\n            onTemplateUpdated(rb.getReport());\n          }\n        },\n      });\n\n      if (reportBroTemplate && isReportBroTemplate(reportBroTemplate)) {\n        rb.load(addVariablesToTemplate(reportBroTemplate, variables, field.required_variables));\n      }\n    }\n  }, [ref]);\n\n  return (\n    <div ref={ref} className=\"pdf-editor\" onClick={stopPropagation}>\n      pdf editor\n    </div>\n  );\n};\n\nexport default PdfEditor;\n","import ProForm, { ProFormText, ProFormTextArea } from '@ant-design/pro-form';\nimport { Space, Tag, Typography } from 'antd';\nimport React, { useCallback } from 'react';\nimport { FormattedMessage } from 'umi';\nimport AutoCompleteArea from '../AutoCompleteArea';\nimport PdfEditor from '../PdfEditor';\nimport './index.css';\n\ninterface FormWysiwygProps {\n  value?: string;\n  onChange?: (value: string) => void;\n  name: string;\n  field: API.TemplateField;\n  variables?: string[];\n}\n\nexport const TemplateFields: React.FC<FormWysiwygProps> = ({ name, field, variables = [] }) => {\n  const renderRequiredVariables = useCallback(\n    (requiredVars: string[]) => {\n      if (!!requiredVars.length) {\n        return (\n          <Space>\n            <Typography>\n              <FormattedMessage id=\"templates.required_variables\" />:{' '}\n              {requiredVars.map((token) => (\n                <Tag color={'red'} key={token}>\n                  {token}\n                </Tag>\n              ))}\n            </Typography>\n          </Space>\n        );\n      } else return;\n    },\n    [field, name],\n  );\n\n  const fieldValidator = useCallback(\n    (value: string, requiredVars: string[]) => {\n      if (value && requiredVars.every((val) => value.includes(val))) {\n        return Promise.resolve();\n      }\n      return Promise.reject(new Error('No required variable used'));\n    },\n    [field, name],\n  );\n\n  const renderProperFields = useCallback(() => {\n    if (field.readonly) {\n      return;\n    }\n    switch (field.type) {\n      case 'text':\n      case 'url':\n        return (\n          <React.Fragment>\n            <label>\n              <FormattedMessage id={name} />\n            </label>\n\n            <ProForm.Item shouldUpdate>\n              {(form) => {\n                return (\n                  <AutoCompleteArea\n                    requiredVariables={field.required_variables}\n                    variables={variables}\n                    value={form.getFieldValue(name)}\n                    onChange={(value: string) => form.setFieldsValue({ [name]: value })}\n                    error={form.getFieldError(name)}\n                    styles={{\n                      width: '100%',\n                      height: '100px',\n                    }}\n                  />\n                );\n              }}\n            </ProForm.Item>\n            <ProFormText\n              name={name}\n              shouldUpdate\n              hidden\n              rules={\n                field.readonly\n                  ? undefined\n                  : [\n                      {\n                        required: field.required,\n                        message: <FormattedMessage id=\"templates.this_required\" />,\n                      },\n                      {\n                        validator: async (_, value) => {\n                          return fieldValidator(value, field.required_variables);\n                        },\n                      },\n                    ]\n              }\n            />\n            {renderRequiredVariables(field.required_variables)}\n          </React.Fragment>\n        );\n      case 'fabric.js':\n        return (\n          <React.Fragment>\n            <ProForm.Item shouldUpdate>\n              {(form) => {\n                return (\n                  <PdfEditor\n                    reportBroTemplate={\n                      form.getFieldValue(name) && JSON.parse(form.getFieldValue(name))\n                    }\n                    variables={variables}\n                    field={field}\n                    onTemplateSaved={(tpl) => {\n                      form.setFieldsValue({ [name]: JSON.stringify(tpl) });\n                      form.submit();\n                    }}\n                    onTemplateUpdated={(tpl) => {\n                      form.setFieldsValue({ [name]: JSON.stringify(tpl) });\n                    }}\n                  />\n                );\n              }}\n            </ProForm.Item>\n            <ProFormTextArea name={name} shouldUpdate width=\"lg\" hidden />\n          </React.Fragment>\n        );\n      case 'html':\n        return (\n          <React.Fragment>\n            <ProFormTextArea\n              readonly={field.readonly}\n              shouldUpdate\n              width=\"lg\"\n              label={<FormattedMessage id={name} />}\n              name={name}\n              tooltip={<FormattedMessage id={'templates.html_tooltip'} />}\n              rules={\n                field.readonly\n                  ? undefined\n                  : [\n                      {\n                        required: field.required,\n                        message: <FormattedMessage id=\"templates.this_required\" />,\n                      },\n                      {\n                        validator: async (_, value) => {\n                          return fieldValidator(value, field.required_variables);\n                        },\n                      },\n                    ]\n              }\n            />\n\n            {renderRequiredVariables(field.required_variables)}\n          </React.Fragment>\n        );\n\n      case 'mjml':\n        return (\n          <React.Fragment>\n            <p>\n              <FormattedMessage id={'templates.to_create_template'} />{' '}\n              <a target=\"_blank\" rel=\"noreferrer\" href=\"https://mjml.io/try-it-live\">\n                https://mjml.io/try-it-live\n              </a>\n            </p>\n            <code>\n              <FormattedMessage id={'code.snippet'} />\n            </code>\n            <ProForm.Item shouldUpdate>\n              {(form) => {\n                return (\n                  <AutoCompleteArea\n                    requiredVariables={field.required_variables}\n                    variables={variables}\n                    value={form.getFieldValue(name)}\n                    onChange={(value: string) => form.setFieldsValue({ [name]: value })}\n                    error={form.getFieldError(name)}\n                    styles={{\n                      width: '100%',\n                      height: '40vh',\n                    }}\n                  />\n                );\n              }}\n            </ProForm.Item>\n            <ProFormTextArea\n              name={name}\n              shouldUpdate\n              hidden\n              rules={\n                field.readonly\n                  ? undefined\n                  : [\n                      {\n                        required: field.required,\n                        message: <FormattedMessage id=\"templates.this_required\" />,\n                      },\n                      {\n                        validator: async (_, value) => {\n                          return fieldValidator(value, field.required_variables);\n                        },\n                      },\n                    ]\n              }\n            />\n\n            {renderRequiredVariables(field.required_variables)}\n          </React.Fragment>\n        );\n      default:\n        return;\n    }\n  }, [field, name, variables]);\n\n  return <React.Fragment>{renderProperFields()}</React.Fragment>;\n};\n\nexport default TemplateFields;\n","import { triggerManualEvent } from '@/services/escola-lms/templates';\nimport { Button, Space, Tooltip, message } from 'antd';\nimport React, { useCallback, useState } from 'react';\nimport { FormattedMessage } from 'umi';\nimport UserSelect from '../UserSelect';\n\nimport { useIntl } from 'umi';\n\nexport const TemplateManuallyTrigger: React.FC<{\n  templateId: number;\n}> = ({ templateId }) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [users, setUsers] = useState<string | number | number[] | string[]>([]);\n  const intl = useIntl();\n\n  const onTrigger = useCallback(() => {\n    setLoading(true);\n    triggerManualEvent(Number(templateId), users as number[])\n      .then((response) => {\n        if (response.success) {\n          message.success(response.message);\n        } else {\n          message.error(response.message);\n        }\n      })\n      .catch((err: any) => message.error(err.toString()))\n      .finally(() => setLoading(false));\n  }, [users, templateId]);\n\n  return (\n    <Space>\n      <UserSelect multiple value={users} onChange={(values) => setUsers(values)} />\n      <Tooltip title={intl.formatMessage({ id: 'generate_pdf_users_tooltip' })}>\n        <Button\n          loading={loading}\n          onClick={() => onTrigger()}\n          disabled={!(users as number[]).length}\n        >\n          <FormattedMessage id=\"generate\" />\n        </Button>\n      </Tooltip>\n    </Space>\n  );\n};\n\nexport default TemplateManuallyTrigger;\n","import { triggerManualEventForProduct } from '@/services/escola-lms/templates';\nimport { Button, Space, Tooltip, message } from 'antd';\nimport React, { useCallback, useState } from 'react';\nimport { FormattedMessage, useIntl } from 'umi';\nimport ProductsSelect from '../ProductsSelect';\n\nexport const TemplateManuallyTriggerProduct: React.FC<{\n  templateId: number;\n}> = ({ templateId }) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [product, setProduct] = useState<string | number | string[] | number[]>();\n  const intl = useIntl();\n\n  const onTrigger = useCallback(() => {\n    setLoading(true);\n    if (typeof product === 'number') {\n      triggerManualEventForProduct(Number(templateId), Number(product))\n        .then((response) => {\n          if (response.success) {\n            message.success(response.message);\n          } else {\n            message.error(response.message);\n          }\n        })\n        .catch((err: any) => message.error(err.toString()))\n        .finally(() => setLoading(false));\n    }\n  }, [product, templateId]);\n\n  return (\n    <Space>\n      <ProductsSelect\n        multiple={false}\n        value={product}\n        onChange={(newProduct) => setProduct(newProduct)}\n      />\n      <Tooltip title={intl.formatMessage({ id: 'generate_pdf_products_tooltip' })}>\n        <Button loading={loading} onClick={() => onTrigger()} disabled={!product}>\n          <FormattedMessage id=\"generate\" />\n        </Button>\n      </Tooltip>\n    </Space>\n  );\n};\n\nexport default TemplateManuallyTriggerProduct;\n","import { preview as previewTemplate } from '@/services/escola-lms/templates';\nimport { Alert, Button } from 'antd';\nimport React, { useCallback, useState } from 'react';\nimport { FormattedMessage } from 'umi';\n\ntype PreviewButtonState =\n  | {\n      state: 'ready';\n    }\n  | {\n      state: 'loading';\n    }\n  | {\n      state: 'loaded';\n      data: Record<string, string>;\n      message: React.ReactNode;\n    }\n  | {\n      state: 'error';\n      error: string;\n    };\n\nconst PreviewButton: React.FC<{\n  type: API.TemplateChannelValue;\n  disabled: boolean;\n  id: number;\n  onPreviewData?: (data: any) => void;\n}> = ({ disabled = false, id, onPreviewData }) => {\n  const [state, setState] = useState<PreviewButtonState>({ state: 'ready' });\n\n  const onClick = useCallback(() => {\n    setState({ state: 'loading' });\n    previewTemplate(id)\n      .then((data) => {\n        if (data.success) {\n          if (onPreviewData) {\n            onPreviewData(data.data);\n          }\n          if (data.data.sent && data.data.to) {\n            setState({\n              state: 'loaded',\n              data: data.data,\n              message: `email sent to ${data.data.to}`,\n            });\n          } else if (data.data.url) {\n            setState({\n              state: 'loaded',\n              data: data.data,\n              message: (\n                <React.Fragment>\n                  <FormattedMessage id=\"download\" />{' '}\n                  <a target=\"_blank\" href={data.data.url} rel=\"noreferrer\">\n                    {data.data.filename}\n                  </a>\n                </React.Fragment>\n              ),\n            });\n          } else {\n            setState({ state: 'loaded', data: data.data, message: data.message });\n          }\n        } else {\n          setState({ state: 'error', error: data.message });\n        }\n      })\n      .catch(() => {\n        setState({ state: 'error', error: 'error' });\n      });\n  }, [id]);\n  return (\n    <React.Fragment>\n      <Button\n        type=\"primary\"\n        loading={state.state === 'loading'}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        <FormattedMessage id=\"preview\" />\n      </Button>\n      {state.state === 'loaded' && (\n        <Alert\n          message={state.message}\n          type=\"success\"\n          closable\n          onClose={() => setState({ state: 'ready' })}\n        />\n      )}\n      {state.state === 'error' && (\n        <Alert\n          message={state.error}\n          type=\"error\"\n          closable\n          onClose={() => setState({ state: 'ready' })}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default PreviewButton;\n","import PdfList from '@/components/Pdf/list';\nimport TemplateFields from '@/components/TemplateFields';\nimport TemplateManuallyTrigger from '@/components/TemplateManuallyTrigger';\nimport TemplateManuallyTriggerProduct from '@/components/TemplateManuallyTrigger/product';\nimport { TemplateChannelValue, TemplateEvents } from '@/services/escola-lms/enums';\nimport {\n  createTemplate,\n  template as fetchTemplate,\n  variables as fetchVariables,\n  updateTemplate,\n} from '@/services/escola-lms/templates';\nimport ProCard from '@ant-design/pro-card';\nimport ProForm, { ProFormCheckbox, ProFormSelect, ProFormText } from '@ant-design/pro-form';\nimport { PageContainer } from '@ant-design/pro-layout';\nimport { Collapse, Divider, Space, Spin, Tag, Typography, message } from 'antd';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { FormattedMessage, history, useIntl, useParams } from 'umi';\nimport PreviewButton from './components/PreviewButton';\n\nconst { Panel } = Collapse;\n\n// creates sections collections for post template\nconst createEntries = (data: Record<string, string>): API.TemplateSections[] => {\n  return Object.entries(data).map((entry) => {\n    return {\n      key: entry[0],\n      content: entry[1],\n    };\n  });\n};\n\nconst objectFlatten = (data: Record<string, string>[]): Record<string, string> =>\n  Object.assign({}, ...data);\n\n// helper function that throws away unnecessary keys to create a sections collection\n\nconst filterNotAllowedKeys = (values: Partial<API.Template>) => {\n  const notAllowedKeys = ['name', 'event', 'default'];\n  return Object.keys(values)\n    .filter((key) => !notAllowedKeys.includes(key))\n    .reduce((obj, key) => {\n      obj[key] = values[key as keyof typeof values];\n      return obj;\n    }, {} as Record<string, string>);\n};\n\ntype Tokens = {\n  assignableClass: string | null;\n  class: string;\n  required_variables: string[];\n  variables: string[];\n  sections: Record<string, API.TemplateField>;\n};\n\nconst channels = TemplateChannelValue;\n\nexport default () => {\n  const intl = useIntl();\n  const params = useParams<{ template: 'email' | 'pdf' | 'sms'; id: string }>();\n\n  const { template, id } = params;\n\n  const isNew = id === 'new';\n\n  const [saved, setSaved] = useState<boolean>(false);\n  const [form] = ProForm.useForm();\n  const [variables, setVariables] = useState<API.TemplateVariables>();\n  const [tokens, setTokens] = useState<Tokens | undefined>(undefined);\n  const [previewData, setPreviewData] = useState<any>();\n  const [isManuallyTriggered, setIsManuallyTriggered] = useState<boolean>(false);\n\n  useEffect(() => {\n    fetchVariables().then((response) => {\n      setVariables(response.success ? response.data : {});\n    });\n  }, []);\n\n  useEffect(() => {\n    const values = form.getFieldsValue();\n\n    const defaultValues =\n      tokens &&\n      Object.keys(tokens.sections).map((section) => {\n        return {\n          [section]: tokens.sections[section].default_content,\n        };\n      });\n\n    if (defaultValues && isNew) {\n      form.setFieldsValue({\n        ...values,\n        ...objectFlatten(defaultValues),\n      });\n    }\n  }, [tokens]);\n\n  const handleSetTokens = useCallback(\n    (event: string) => {\n      if (event && template) {\n        const _tokens = variables && (variables[event][channels[template]] as unknown);\n\n        setTokens(_tokens as Tokens);\n      }\n      setIsManuallyTriggered(event === TemplateEvents.ManuallyTriggeredEvent);\n    },\n    [variables, id],\n  );\n\n  const fetchData = useCallback(async () => {\n    const response = await fetchTemplate(Number(id));\n    if (response.success) {\n      const map =\n        response.data.sections &&\n        response.data.sections.map((item) => {\n          return {\n            [item.key]: item.content,\n          };\n        });\n\n      const obj = map && objectFlatten(map);\n\n      form.setFieldsValue({\n        ...response.data,\n        ...obj,\n      });\n      handleSetTokens(String(response.data.event));\n      setSaved(true);\n    }\n  }, [id, variables]);\n\n  const onFormFinish = useCallback(\n    async (values: Partial<API.Template>) => {\n      let response: API.DefaultResponse<API.Template>;\n\n      const postData: Partial<API.Template> = {\n        ...values,\n        channel: channels[template as keyof typeof TemplateChannelValue] as API.Template['channel'],\n        sections: createEntries(filterNotAllowedKeys(values)),\n      };\n\n      if (isNew) {\n        response = await createTemplate(postData);\n        if (response.success) {\n          history.push(`/configuration/templates/${template}/${response.data.id}`);\n        }\n      } else {\n        response = await updateTemplate(Number(id), postData);\n      }\n      setSaved(true);\n      message.success(response.message);\n    },\n    [variables, id],\n  );\n\n  useEffect(() => {\n    if (isNew) {\n      return;\n    }\n\n    fetchData();\n  }, [id, variables]);\n\n  const variablesForChannel = useCallback(\n    (channel: string): Record<string, string> => {\n      return variables\n        ? Object.keys(variables).reduce((acc, curr) => {\n            if (variables[curr][channel]) {\n              return { ...acc, [curr]: intl.formatMessage({ id: curr, defaultMessage: curr }) };\n            }\n            return acc;\n          }, {})\n        : {};\n    },\n    [variables],\n  );\n\n  return (\n    <PageContainer\n      title={\n        isNew ? (\n          <span>\n            <FormattedMessage id=\"new\" /> {template} <FormattedMessage id=\"template\" />\n          </span>\n        ) : (\n          <span>\n            <FormattedMessage id=\"edit\" /> {template} <FormattedMessage id=\"template\" />\n          </span>\n        )\n      }\n    >\n      <ProCard size=\"small\">\n        <ProForm\n          initialValues={{}}\n          onFinish={onFormFinish}\n          form={form}\n          onValuesChange={() => {\n            const values = form.getFieldsValue();\n            handleSetTokens(values.event);\n            setSaved(false);\n          }}\n        >\n          <ProForm.Group>\n            <ProFormText\n              width=\"sm\"\n              name=\"name\"\n              label={<FormattedMessage id=\"name\" />}\n              placeholder={intl.formatMessage({\n                id: 'name',\n              })}\n              rules={[{ required: true, message: <FormattedMessage id=\"select\" /> }]}\n            />\n            <ProFormSelect\n              name=\"event\"\n              width=\"lg\"\n              label={<FormattedMessage id=\"event\" />}\n              valueEnum={\n                variables\n                  ? variablesForChannel(channels[template as keyof typeof TemplateChannelValue])\n                  : {}\n              }\n              placeholder={intl.formatMessage({\n                id: 'event',\n              })}\n              rules={[{ required: true, message: <FormattedMessage id=\"select\" /> }]}\n            />\n\n            <ProForm.Item label={<FormattedMessage id=\"templates.set_as_default_template\" />}>\n              <ProFormCheckbox name=\"default\" />\n            </ProForm.Item>\n          </ProForm.Group>\n\n          {!isNew && template !== 'pdf' && (\n            <ProForm.Group>\n              <ProForm.Item label={<FormattedMessage id=\"preview\" />}>\n                <PreviewButton\n                  disabled={!saved}\n                  id={Number(id)}\n                  type={template}\n                  onPreviewData={(data) => {\n                    if (data && data.data && data.data.content) {\n                      setPreviewData(data.data.content);\n                    }\n                  }}\n                />\n              </ProForm.Item>\n\n              {isManuallyTriggered && (\n                <ProForm.Item\n                  label={<FormattedMessage id=\"generate_pdf\" />}\n                  tooltip={<FormattedMessage id=\"generate_pdf_tooltip\" />}\n                >\n                  <TemplateManuallyTrigger templateId={Number(id)} />\n                </ProForm.Item>\n              )}\n\n              {isManuallyTriggered && (\n                <ProForm.Item\n                  label={<FormattedMessage id=\"generate_pdf\" />}\n                  tooltip={<FormattedMessage id=\"generate_pdf_tooltip\" />}\n                >\n                  <TemplateManuallyTriggerProduct templateId={Number(id)} />\n                </ProForm.Item>\n              )}\n            </ProForm.Group>\n          )}\n\n          {channels[template as keyof typeof TemplateChannelValue] === TemplateChannelValue.pdf &&\n            !isNew && (\n              <Collapse ghost destroyInactivePanel defaultActiveKey={[-1]}>\n                <Panel header={<FormattedMessage id=\"generated_pdfs\" />} key={0}>\n                  <PdfList template_id={Number(id)} />\n                </Panel>\n              </Collapse>\n            )}\n\n          {!tokens && !isNew ? (\n            <Spin />\n          ) : (\n            tokens &&\n            tokens.sections &&\n            Object.keys(tokens.sections).map((section, index) => {\n              const fieldItem = tokens.sections && tokens.sections[section];\n\n              return (\n                <React.Fragment key={section}>\n                  {index === 0 && template !== 'pdf' && (\n                    <React.Fragment>\n                      <Divider>\n                        <FormattedMessage id=\"templates.tokens\" />\n                      </Divider>\n                      <Space>\n                        <Typography>\n                          {tokens.variables.map((token) => (\n                            <Tag color=\"orange\" key={token}>\n                              {token}\n                            </Tag>\n                          ))}\n                        </Typography>\n                      </Space>\n                    </React.Fragment>\n                  )}\n                  <Divider />\n                  <TemplateFields name={section} field={fieldItem} variables={tokens.variables} />\n                </React.Fragment>\n              );\n            })\n          )}\n          <Divider />\n        </ProForm>\n      </ProCard>\n      {previewData && <p>fabric preview</p>}\n    </PageContainer>\n  );\n};\n"],"names":["PdfZipList","_ref","pdfIds","onProgress","onFinished","_ref$filename","filename","_useState","useState","_useState2","_slicedToArray","blobs","setBlobs","onFinishedLocal","useCallback","allBlobs","zip","JSZip","forEach","blob","i","file","concat","generateAsync","type","then","content","saveAs","useEffect","pdfId","result","fetch","window","REACT_APP_API_URL","headers","Authorization","localStorage","getItem","response","pdfBlob","Blob","prevBlobs","progress","length","_toConsumableArray","_jsxs","children","pdfs","_x","_x2","_pdfs","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","options","wrap","_context","prev","next","abrupt","request","_objectSpread","method","stop","pdf","_x3","_x4","_pdf","_callee2","id","_context2","generatedPdf","_x5","_x6","_generatedPdf","_callee3","_context3","PdfList","user_id","template_id","title","state","setState","_useState3","_useState4","previewState","setPreviewState","_useState5","_useState6","generateAll","setGenerateAll","abortController","AbortController","signal","success","list","data","error","message","err","toString","abort","getPdf","_jsx","Alert","Spin","Fragment","Divider","map","item","List","size","itemLayout","dataSource","header","FormattedMessage","Typography","Text","strong","defaultMessage","Button","loading","onClick","icon","DownloadOutlined","renderItem","Item","actions","AuthenticatedLinkButton","url","TypeButtonDrawer","type_id","props","className","entity","required","name","AutoCompleteArea","requiredVariables","variables","onChange","value","styles","varsObject","v","substring","includes","React","ReactTextareaAutocomplete","style","e","target","loadingComponent","minChar","itemStyle","fontSize","trigger","dataProvider","token","filter","startsWith","component","output","role","getMockedValueForVariable","varname","toLocaleLowerCase","isObject","obj","_typeof","Array","isArray","isReportBroTemplate","version","documentProperties","parameters","docElements","addVariablesToTemplate","template","required_variables","maxId","Math","max","p","flat","dict","reduce","acc","curr","_defineProperty","tpl","replace","index","arrayItemType","eval","nullable","pattern","expression","showOnlyNameType","testData","Object","assign","values","PdfEditor","onTemplateSaved","_ref$reportBroTemplat","reportBroTemplate","field","onTemplateUpdated","ref","useRef","stopPropagation","tagName","nativeEvent","toLowerCase","preventDefault","current","rb","ReportBro","enableSpreadsheet","fonts","defaultFont","reportServerUrl","saveCallback","getReport","cmdExecutedCallback","load","TemplateFields","_ref$variables","renderRequiredVariables","requiredVars","Space","Tag","color","fieldValidator","every","val","Promise","resolve","reject","Error","renderProperFields","readonly","ProForm","shouldUpdate","form","getFieldValue","setFieldsValue","getFieldError","width","height","ProFormText","hidden","rules","undefined","validator","_validator","_","JSON","parse","stringify","submit","ProFormTextArea","label","tooltip","_validator2","rel","href","_validator3","TemplateManuallyTrigger","templateId","setLoading","users","setUsers","intl","useIntl","onTrigger","triggerManualEvent","Number","UserSelect","multiple","Tooltip","formatMessage","disabled","TemplateManuallyTriggerProduct","product","setProduct","triggerManualEventForProduct","ProductsSelect","newProduct","PreviewButton","_ref$disabled","onPreviewData","previewTemplate","sent","to","closable","onClose","Panel","Collapse","createEntries","entries","entry","key","objectFlatten","filterNotAllowedKeys","notAllowedKeys","keys","channels","TemplateChannelValue","useParams","isNew","saved","setSaved","_ProForm$useForm","useForm","_ProForm$useForm2","setVariables","tokens","setTokens","_useState7","_useState8","previewData","setPreviewData","_useState9","_useState10","isManuallyTriggered","setIsManuallyTriggered","fetchVariables","getFieldsValue","defaultValues","sections","section","default_content","handleSetTokens","event","_tokens","TemplateEvents","ManuallyTriggeredEvent","fetchData","fetchTemplate","String","onFormFinish","_ref4","postData","channel","createTemplate","history","push","updateTemplate","variablesForChannel","PageContainer","ProCard","initialValues","onFinish","onValuesChange","placeholder","ProFormSelect","valueEnum","ProFormCheckbox","ghost","destroyInactivePanel","defaultActiveKey","fieldItem"],"sourceRoot":""}