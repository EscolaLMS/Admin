{"version":3,"file":"p__CompetencyChallenges__index.19461e0c.async.js","mappings":"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","sources":["webpack://ant-design-pro/./src/pages/CompetencyChallenges/index.tsx","webpack://ant-design-pro/./src/services/escola-lms/competency-challenges.ts"],"sourcesContent":["import { DeleteOutlined, EditOutlined, PlusOutlined } from '@ant-design/icons';\nimport { PageContainer } from '@ant-design/pro-layout';\nimport ProTable, { type ProColumns } from '@ant-design/pro-table';\nimport { Button, Popconfirm, Tag, Tooltip } from 'antd';\nimport { format } from 'date-fns';\nimport React from 'react';\nimport { FormattedMessage, Link } from 'umi';\n\nimport TypeButtonDrawer from '@/components/TypeButtonDrawer';\nimport { DATETIME_FORMAT } from '@/consts/dates';\nimport {\n  deleteCompetencyChallenge,\n  getCompetencyChallenges,\n} from '@/services/escola-lms/competency-challenges';\nimport { createTableOrderObject } from '@/utils/utils';\n\nconst staticColumns: ProColumns<API.CompetencyChallenge>[] = [\n  { dataIndex: 'id', title: <FormattedMessage id=\"ID\" />, hideInSearch: true, sorter: true },\n  { dataIndex: 'name', title: <FormattedMessage id=\"name\" />, sorter: true },\n  {\n    dataIndex: 'type',\n    title: <FormattedMessage id=\"type\" />,\n    hideInSearch: true,\n    render: (_n, record) => <FormattedMessage id={`CompetencyChallenges.types.${record.type}`} />,\n  },\n  {\n    dataIndex: 'created_at',\n    title: <FormattedMessage id=\"created_at\" />,\n    render: (_n, record) => format(new Date(record.created_at), DATETIME_FORMAT),\n    hideInSearch: true,\n    sorter: true,\n  },\n  {\n    dataIndex: 'updated_at',\n    title: <FormattedMessage id=\"updated_at\" />,\n    render: (_n, record) => format(new Date(record.updated_at), DATETIME_FORMAT),\n    hideInSearch: true,\n  },\n  {\n    dataIndex: 'is_active',\n    title: <FormattedMessage id=\"is_active\" />,\n    valueType: 'select',\n    fieldProps: {\n      options: [\n        {\n          value: true,\n          label: (\n            <Tag color=\"green\">\n              <FormattedMessage id=\"Active\" defaultMessage=\"Active\" />\n            </Tag>\n          ),\n        },\n        {\n          value: false,\n          label: (\n            <Tag color=\"red\">\n              <FormattedMessage id=\"Inactive\" defaultMessage=\"Inactive\" />\n            </Tag>\n          ),\n        },\n      ],\n    },\n    render: (_n, record) => (\n      <Tag key=\"is_active\" color={record.is_active ? 'green' : 'red'}>\n        <FormattedMessage id={record.is_active ? 'Active' : 'Inactive'} />\n      </Tag>\n    ),\n  },\n  {\n    dataIndex: 'is_highlighted',\n    title: <FormattedMessage id=\"is_highlighted\" />,\n    hideInSearch: true,\n    render: (_n, record) => (\n      <Tag key=\"is_highlighted\" color={record.is_highlighted ? 'green' : 'red'}>\n        <FormattedMessage id={record.is_highlighted ? 'highlighted' : 'notHighlighted'} />\n      </Tag>\n    ),\n  },\n  {\n    dataIndex: 'category',\n    title: <FormattedMessage id=\"category\" />,\n    render: (_n, record) =>\n      record.category ? <TypeButtonDrawer type=\"Category\" type_id={record.category.id} /> : '-',\n    hideInSearch: true,\n  },\n  {\n    dataIndex: 'quiz_id',\n    title: <FormattedMessage id=\"CompetencyChallenges.diagnostic-test\" />,\n    render: (_n, record) => (\n      <TypeButtonDrawer type=\"EscolaLms\\TopicTypeGift\\Models\\GiftQuiz\" type_id={record.quiz_id} />\n    ),\n    hideInSearch: true,\n  },\n  {\n    valueType: 'option',\n    title: <FormattedMessage id=\"options\" />,\n    render: (_n, record, _i, action) => [\n      <Tooltip key=\"edit\" title={<FormattedMessage id=\"edit\" defaultMessage=\"edit\" />}>\n        <Link to={`/competency-challenges/${record.id}/main`}>\n          <Button type=\"primary\" icon={<EditOutlined />} />\n        </Link>\n      </Tooltip>,\n      <Popconfirm\n        key=\"delete\"\n        title={\n          <FormattedMessage\n            id=\"deleteQuestion\"\n            defaultMessage=\"Are you sure to delete this record?\"\n          />\n        }\n        onConfirm={async () => {\n          const response = await deleteCompetencyChallenge(record.id);\n          if (response.success) {\n            action?.reload();\n          }\n        }}\n        okText={<FormattedMessage id=\"yes\" defaultMessage=\"Yes\" />}\n        cancelText={<FormattedMessage id=\"no\" defaultMessage=\"No\" />}\n      >\n        <Tooltip title={<FormattedMessage id=\"delete\" defaultMessage=\"delete\" />}>\n          <Button type=\"primary\" icon={<DeleteOutlined />} danger />\n        </Tooltip>\n      </Popconfirm>,\n    ],\n  },\n];\n\nconst CompetencyChallenges: React.FC = () => (\n  <PageContainer>\n    <ProTable<API.CompetencyChallenge, API.CompetencyChallengesParams>\n      rowKey=\"id\"\n      search={{ layout: 'vertical' }}\n      toolBarRender={() => [\n        <Link key=\"addnew\" to=\"/competency-challenges/new/main\">\n          <Button type=\"primary\" key=\"primary\">\n            <PlusOutlined /> <FormattedMessage id=\"new\" defaultMessage=\"new\" />\n          </Button>\n        </Link>,\n      ]}\n      request={async ({ per_page, page, is_active, name }, sort) => {\n        const response = await getCompetencyChallenges({\n          page,\n          per_page,\n          name,\n          is_active,\n          ...createTableOrderObject(sort, 'created_at'),\n        });\n\n        if (!response.success) {\n          return { data: [], total: 0, success: false };\n        }\n\n        return { data: response.data, total: response.data.length, success: true };\n      }}\n      columns={staticColumns}\n    />\n  </PageContainer>\n);\n\nexport default CompetencyChallenges;\n","import type { AxiosRequestConfig } from '@umijs/max';\nimport { request } from 'umi';\n\n/**  GET /api/admin/competency-challenges */\nexport async function getCompetencyChallenges(\n  params?: API.CompetencyChallengesParams,\n  options?: AxiosRequestConfig,\n) {\n  return request<API.DefaultMetaResponse<API.CompetencyChallenge>>(\n    `/api/admin/competency-challenges`,\n    {\n      method: 'GET',\n      /* useCache: true */ useCache: false,\n      params,\n      ...(options || {}),\n    },\n  );\n}\n\n/** GET /api/admin/competency-challenges/:competency_challenge_id */\nexport async function getCompetencyChallenge(\n  competency_challenge_id: number,\n  options?: AxiosRequestConfig,\n) {\n  return request<API.DefaultResponse<API.CompetencyChallenge>>(\n    `/api/admin/competency-challenges/${competency_challenge_id}`,\n    {\n      method: 'GET',\n      /* useCache: true */ useCache: false,\n      ...(options || {}),\n    },\n  );\n}\n\n/** POST /api/admin/competency-challenges */\nexport async function createCompetencyChallenge(\n  body: API.CreateCompetencyChallenge,\n  options?: AxiosRequestConfig,\n) {\n  return request<API.DefaultResponse<API.CompetencyChallenge>>(`/api/admin/competency-challenges`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    data: body,\n    ...(options || {}),\n  });\n}\n\n/** PUT /api/admin/competency-challenges/:competency_challenge_id */\nexport async function updateCompetencyChallenge(\n  competency_challenge_id: number,\n  body: API.UpdateCompetencyChallenge,\n  options?: AxiosRequestConfig,\n) {\n  return request<API.DefaultResponse<API.CompetencyChallenge>>(\n    `/api/admin/competency-challenges/${competency_challenge_id}`,\n    {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      data: body,\n      ...(options || {}),\n    },\n  );\n}\n\n/**  DELETE /api/admin/competency-challenges/:competency_challenge_id */\nexport async function deleteCompetencyChallenge(\n  competency_challenge_id: number,\n  options?: AxiosRequestConfig,\n) {\n  return request<API.DeleteResponse>(\n    `/api/admin/competency-challenges/${competency_challenge_id}`,\n    {\n      method: 'DELETE',\n      ...(options || {}),\n    },\n  );\n}\n\n/** POST /api/admin/competency-challenges/scales */\nexport async function createCompetencyChallengeScale(\n  body: API.CreateCompetencyChallengeScale,\n  options?: AxiosRequestConfig,\n) {\n  return request<API.DefaultResponse<API.CompetencyChallengeScale>>(\n    `/api/admin/competency-challenges/scales`,\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      data: body,\n      ...(options || {}),\n    },\n  );\n}\n\n/** PATCH /api/admin/competency-challenges/scales/:competency_challenge_scale_id */\nexport async function updateCompetencyChallengeScale(\n  competency_challenge_scale_id: number,\n  body: API.CreateCompetencyChallengeScale,\n  options?: AxiosRequestConfig,\n) {\n  return request<API.DefaultResponse<API.CompetencyChallengeScale>>(\n    `/api/admin/competency-challenges/scales/${competency_challenge_scale_id}`,\n    {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      data: body,\n      ...(options || {}),\n    },\n  );\n}\n\n/**  DELETE /api/admin/competency-challenges/scales/:competency_challenge_scale_id */\nexport async function deleteCompetencyChallengeScale(\n  competency_challenge_scale_id: number,\n  options?: AxiosRequestConfig,\n) {\n  return request<API.DeleteResponse>(\n    `/api/admin/competency-challenges/scales/${competency_challenge_scale_id}`,\n    {\n      method: 'DELETE',\n      ...(options || {}),\n    },\n  );\n}\n"],"names":["staticColumns","dataIndex","title","_jsx","FormattedMessage","id","hideInSearch","sorter","render","_n","record","concat","type","format","Date","created_at","DATETIME_FORMAT","updated_at","valueType","fieldProps","options","value","label","Tag","color","children","defaultMessage","is_active","is_highlighted","category","TypeButtonDrawer","type_id","quiz_id","_i","action","Tooltip","Link","to","Button","icon","EditOutlined","Popconfirm","onConfirm","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","deleteCompetencyChallenge","sent","success","reload","stop","okText","cancelText","DeleteOutlined","danger","CompetencyChallenges","PageContainer","ProTable","rowKey","search","layout","toolBarRender","_jsxs","PlusOutlined","request","_ref3","_callee2","_ref2","sort","per_page","page","name","_context2","getCompetencyChallenges","_objectSpread","createTableOrderObject","abrupt","data","total","length","_x","_x2","apply","arguments","columns","_getCompetencyChallenges","params","method","useCache","getCompetencyChallenge","_x3","_x4","_getCompetencyChallenge","competency_challenge_id","createCompetencyChallenge","_x5","_x6","_createCompetencyChallenge","_callee3","body","_context3","headers","updateCompetencyChallenge","_x7","_x8","_x9","_updateCompetencyChallenge","_callee4","_context4","_x10","_x11","_deleteCompetencyChallenge","_callee5","_context5","createCompetencyChallengeScale","_x12","_x13","_createCompetencyChallengeScale","_callee6","_context6","updateCompetencyChallengeScale","_x14","_x15","_x16","_updateCompetencyChallengeScale","_callee7","competency_challenge_scale_id","_context7","deleteCompetencyChallengeScale","_x17","_x18","_deleteCompetencyChallengeScale","_callee8","_context8"],"sourceRoot":""}