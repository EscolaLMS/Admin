{"version":3,"sources":["webpack:///./src/services/escola-lms/tasks.ts","webpack:///./src/pages/Tasks/index.tsx"],"names":["params","options","request","method","per_page","pageSize","page","current","id","body","data","handleRemove","deleteTask","then","response","success","message","TableList","actionRef","useRef","intl","useIntl","columns","title","dataIndex","hideInSearch","sorter","width","renderFormItem","item","form","type","defaultRender","rest","stateType","getFieldValue","render","_","record","created_by","user","completed_at","format","Date","DATETIME_FORMAT","valueType","reload","formatMessage","defaultMessage","layout","sort","user_id","created_by_id","sortArr","Object","entries","tasks","order_by","order","undefined","total","meta"],"mappings":"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","file":"p__Tasks.a8fd5522.async.js","sourcesContent":["import { request } from 'umi';\n\nimport type { RequestOptionsInit } from 'umi-request';\n\n/**  GET /api/admin/tasks */\nexport async function tasks(\n  params: API.TaskListParams & API.PaginationParams,\n  options?: RequestOptionsInit,\n) {\n  return request<API.TaskList>(`/api/admin/tasks`, {\n    method: 'GET',\n    params: {\n      ...params,\n      per_page: params.pageSize,\n      page: params.current,\n    },\n    ...(options || {}),\n  });\n}\n\n/**  DELETE /api/admin/tasks/:id */\nexport async function deleteTask(id: number, options?: RequestOptionsInit) {\n  return request<API.DefaultResponse<API.Task>>(`/api/admin/tasks/${id}`, {\n    method: 'DELETE',\n    ...(options || {}),\n  });\n}\n\n/**  GET /api/admin/tasks/:id */\nexport async function getTask(id: number, options?: RequestOptionsInit) {\n  return request<API.DefaultResponse<API.Task>>(`/api/admin/tasks/${id}`, {\n    method: 'GET',\n    ...(options || {}),\n  });\n}\n\n/** POST /api/admin/task */\nexport async function createTask(body: EscolaLms.Tasks.Http.Requests.Admin.AdminCreateTaskRequest) {\n  return request<API.DefaultResponse<API.Task>>(`/api/admin/tasks`, {\n    method: 'POST',\n    data: body,\n  });\n}\n\n/**  PATCH /api/admin/tasks/:id */\nexport async function updateTask(\n  id: number,\n  body: EscolaLms.Tasks.Http.Requests.Admin.AdminUpdateTaskRequest,\n  options?: RequestOptionsInit,\n) {\n  return request<API.DefaultResponse<API.Task>>(`/api/admin/tasks/${id}`, {\n    method: 'PATCH',\n    data: body,\n    ...(options || {}),\n  });\n}\n\n/**  POST /api/admin/tasks/complete/:id */\nexport async function completeTask(id: number, options?: RequestOptionsInit) {\n  return request<API.DefaultResponse<API.Task>>(`/api/admin/tasks/complete/${id}`, {\n    method: 'POST',\n    ...(options || {}),\n  });\n}\n\n/**  POST /api/admin/tasks/incomplete/:id */\nexport async function incompleteTask(id: number, options?: RequestOptionsInit) {\n  return request<API.DefaultResponse<API.Task>>(`/api/admin/tasks/incomplete/${id}`, {\n    method: 'POST',\n    ...(options || {}),\n  });\n}\n\n/** POST /api/admin/task/notes */\nexport async function createTaskNote(\n  // TODO replace with admin Request\n  body: EscolaLms.Tasks.Http.Requests.CreateTaskNoteRequest,\n) {\n  return request<API.DefaultResponse<API.TaskNote>>(`/api/admin/tasks/notes`, {\n    method: 'POST',\n    data: body,\n  });\n}\n\n/** PATCH /api/admin/task/notes */\nexport async function updateTaskNote(\n  id: number,\n  body: EscolaLms.Tasks.Http.Requests.UpdateTaskNoteRequest,\n) {\n  return request<API.DefaultResponse<API.TaskNote>>(`/api/admin/tasks/notes/${id}`, {\n    method: 'PATCH',\n    data: body,\n  });\n}\n\n/** DELETE /api/admin/task/notes */\nexport async function deleteTaskNote(id: number) {\n  return request<API.DefaultResponse<API.TaskNote>>(`/api/admin/tasks/notes/${id}`, {\n    method: 'DELETE',\n  });\n}\n","import { PlusOutlined, DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport { Button, Tooltip, Popconfirm, message, Tag } from 'antd';\nimport React, { useRef } from 'react';\nimport { useIntl, FormattedMessage, Link } from 'umi';\nimport { PageContainer } from '@ant-design/pro-layout';\nimport type { ProColumns, ActionType } from '@ant-design/pro-table';\nimport ProTable from '@ant-design/pro-table';\nimport UserSelect from '@/components/UserSelect';\nimport { format } from 'date-fns';\nimport { DATETIME_FORMAT } from '@/consts/dates';\n\nimport { tasks, deleteTask } from '@/services/escola-lms/tasks';\nimport TypeButtonDrawer from '@/components/TypeButtonDrawer';\n\nconst handleRemove = async (id: number) => {\n  return deleteTask(id).then((response) => {\n    if (response.success) {\n      message.success(response.message);\n    }\n    return true;\n  });\n};\n\nconst TableList: React.FC = () => {\n  const actionRef = useRef<ActionType>();\n  const intl = useIntl();\n\n  const columns: ProColumns<API.TaskListItem>[] = [\n    {\n      title: <FormattedMessage id=\"ID\" defaultMessage=\"ID\" />,\n      dataIndex: 'id',\n      hideInSearch: true,\n      sorter: true,\n      width: '80px',\n    },\n    {\n      title: <FormattedMessage id=\"title\" defaultMessage=\"title\" />,\n      dataIndex: 'title',\n      sorter: true,\n    },\n\n    {\n      title: <FormattedMessage id=\"type\" defaultMessage=\"type\" />,\n      dataIndex: 'type',\n      sorter: true,\n    },\n\n    {\n      title: <FormattedMessage id=\"author\" defaultMessage=\"author\" />,\n      dataIndex: 'created_by_id',\n      renderFormItem: (item, { type, defaultRender, ...rest }, form) => {\n        if (type === 'form') {\n          return null;\n        }\n        const stateType = form.getFieldValue('state');\n        return (\n          <UserSelect\n            {...rest}\n            state={{\n              type: stateType,\n            }}\n          />\n        );\n      },\n      render: (_, record) =>\n        record.created_by?.id && (\n          <TypeButtonDrawer\n            key={'user'}\n            type=\"EscolaLms\\Core\\Models\\User\"\n            type_id={record.created_by?.id}\n          />\n        ),\n    },\n    {\n      title: <FormattedMessage id=\"assigned\" defaultMessage=\"assigned\" />,\n      dataIndex: 'user_id',\n      renderFormItem: (item, { type, defaultRender, ...rest }, form) => {\n        if (type === 'form') {\n          return null;\n        }\n        const stateType = form.getFieldValue('state');\n        return (\n          <UserSelect\n            {...rest}\n            state={{\n              type: stateType,\n            }}\n          />\n        );\n      },\n      render: (_, record) =>\n        record.user?.id && (\n          <TypeButtonDrawer\n            key={'user'}\n            type=\"EscolaLms\\Core\\Models\\User\"\n            type_id={record.user?.id}\n          />\n        ),\n    },\n    {\n      title: <FormattedMessage id=\"completed_at\" defaultMessage=\"Completed at\" />,\n      dataIndex: 'completed_at',\n      hideInSearch: true,\n      sorter: true,\n      render: (_, record) =>\n        record.completed_at ? (\n          format(new Date(record.completed_at), DATETIME_FORMAT)\n        ) : (\n          <Tag>\n            <FormattedMessage id=\"uncompleted\" defaultMessage=\"uncompleted\" />\n          </Tag>\n        ),\n    },\n    {\n      hideInSearch: true,\n      title: <FormattedMessage id=\"pages.searchTable.titleOption\" defaultMessage=\"option\" />,\n      dataIndex: 'option',\n      valueType: 'option',\n      render: (_, record) => [\n        <Link to={`/other/tasks/${record.id}`} key=\"edit\">\n          <Tooltip title={<FormattedMessage id=\"edit\" defaultMessage=\"edit\" />}>\n            <Button type=\"primary\" icon={<EditOutlined />} />\n          </Tooltip>\n        </Link>,\n        <Popconfirm\n          key=\"delete\"\n          title={\n            <FormattedMessage\n              id=\"deleteQuestion\"\n              defaultMessage=\"Are you sure to delete this record?\"\n            />\n          }\n          onConfirm={async () => {\n            const success = await handleRemove(record.id);\n            if (success) {\n              if (actionRef.current) {\n                actionRef.current.reload();\n              }\n            }\n          }}\n          okText={<FormattedMessage id=\"yes\" />}\n          cancelText={<FormattedMessage id=\"no\" />}\n        >\n          <Tooltip title={<FormattedMessage id=\"delete\" defaultMessage=\"delete\" />}>\n            <Button type=\"primary\" icon={<DeleteOutlined />} danger />\n          </Tooltip>\n        </Popconfirm>,\n      ],\n    },\n  ];\n\n  return (\n    <PageContainer>\n      <ProTable<API.TaskListItem, API.TaskListParams>\n        headerTitle={intl.formatMessage({\n          id: 'menu.Other activities.Tasks',\n          defaultMessage: 'Tasks',\n        })}\n        actionRef={actionRef}\n        rowKey=\"id\"\n        search={{\n          layout: 'vertical',\n        }}\n        toolBarRender={() => [\n          <Link to=\"/other/tasks/new\" key=\"new\">\n            <Button type=\"primary\" key=\"primary\">\n              <PlusOutlined /> <FormattedMessage id=\"new\" defaultMessage=\"new\" />\n            </Button>\n          </Link>,\n        ]}\n        request={({ pageSize, current, title, user_id, created_by_id }, sort) => {\n          const sortArr = sort && Object.entries(sort)[0];\n          return tasks({\n            pageSize,\n            current,\n            title,\n            created_by_id,\n            user_id,\n            order_by: sortArr && sortArr[0], // i like nested ternary\n            /* eslint-disable */ order: sortArr\n              ? sortArr[1] === 'ascend'\n                ? 'ASC'\n                : 'DESC'\n              : undefined,\n          }).then((response) => {\n            if (response.success) {\n              return {\n                data: response.data,\n                total: response.meta.total,\n                success: true,\n              };\n            }\n            return [];\n          });\n        }}\n        columns={columns}\n      />\n    </PageContainer>\n  );\n};\n\nexport default TableList;\n"],"sourceRoot":""}