{"version":3,"file":"p__Courses__form.a23b4b01.async.js","mappings":"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","sources":["webpack://ant-design-pro/./src/components/CourseStatistics/ExportStatsButton.tsx","webpack://ant-design-pro/./src/components/CourseStatistics/userProgress.tsx","webpack://ant-design-pro/./src/components/FilesBrowser/index.tsx","webpack://ant-design-pro/./src/hooks/useTokenChangeListener.ts","webpack://ant-design-pro/./src/components/H5P/editor.tsx","webpack://ant-design-pro/./src/components/H5P/card.tsx","webpack://ant-design-pro/./src/components/H5P/player.tsx","webpack://ant-design-pro/./src/components/H5P/upload.tsx","webpack://ant-design-pro/./src/components/Pdf/ziplist.tsx","webpack://ant-design-pro/./src/services/escola-lms/pdfs.ts","webpack://ant-design-pro/./src/components/Pdf/list.tsx","webpack://ant-design-pro/./src/components/ProgramForm/Context/index.tsx","webpack://ant-design-pro/./src/components/Scorm/preview.tsx","webpack://ant-design-pro/./src/components/SecureUpload/browser.tsx","webpack://ant-design-pro/./src/components/SecureUpload/index.tsx","webpack://ant-design-pro/./src/components/AssignQuestionnary/index.tsx","webpack://ant-design-pro/./src/components/CourseTopicsStatistics/ExportTopicStatsButton.tsx","webpack://ant-design-pro/./src/components/CourseTopicsStatistics/GiftQuizStatistics.tsx","webpack://ant-design-pro/./src/components/CourseTopicsStatistics/index.tsx","webpack://ant-design-pro/./src/components/CourseStatistics/chart.tsx","webpack://ant-design-pro/./src/components/CourseStatistics/index.tsx","webpack://ant-design-pro/./src/components/ProFormVideoUpload/index.tsx","webpack://ant-design-pro/./src/services/api.js","webpack://ant-design-pro/./src/components/ProgramForm/ThreeColProgram/ParentLesson/index.tsx","webpack://ant-design-pro/./src/components/ProgramForm/ThreeColProgram/LessonForm/form.tsx","webpack://ant-design-pro/./src/components/ProgramForm/ThreeColProgram/LessonForm/index.tsx","webpack://ant-design-pro/./src/components/ProgramForm/ThreeColProgram/TopicForm/descriptionModal.tsx","webpack://ant-design-pro/./src/components/ProgramForm/ThreeColProgram/TopicForm/form.tsx","webpack://ant-design-pro/./src/components/ProgramForm/ThreeColProgram/TopicForm/media/index.ts","webpack://ant-design-pro/./src/components/H5PContentSelect/index.tsx","webpack://ant-design-pro/./src/components/ProgramForm/ThreeColProgram/TopicForm/media/h5p.tsx","webpack://ant-design-pro/./src/components/OEmbed/index.tsx","webpack://ant-design-pro/./src/components/ProgramForm/ThreeColProgram/TopicForm/media/oembed.tsx","webpack://ant-design-pro/./src/components/ProgramForm/ThreeColProgram/TopicForm/media/text.tsx","webpack://ant-design-pro/./src/components/ProgramForm/ThreeColProgram/TopicForm/media/upload.tsx","webpack://ant-design-pro/./src/components/ProgramForm/ThreeColProgram/TopicForm/resources.tsx","webpack://ant-design-pro/./src/components/Scorm/select.tsx","webpack://ant-design-pro/./src/components/Scorm/index.tsx","webpack://ant-design-pro/./src/components/ProgramForm/ThreeColProgram/TopicForm/media/giftquiz.tsx","webpack://ant-design-pro/./src/components/ProgramForm/ThreeColProgram/TopicForm/media/project.tsx","webpack://ant-design-pro/./src/components/ProgramForm/ThreeColProgram/TopicForm/index.tsx","webpack://ant-design-pro/./src/components/ProgramForm/ThreeColProgram/List/NewLessonListItem.tsx","webpack://ant-design-pro/./src/icons/recommender.tsx","webpack://ant-design-pro/./src/icons/index.tsx","webpack://ant-design-pro/./src/services/escola-lms/recommender.ts","webpack://ant-design-pro/./src/components/ProgramForm/ThreeColProgram/List/Recommender/utils.ts","webpack://ant-design-pro/./src/components/ProgramForm/ThreeColProgram/List/Recommender/ExerciseRecommender.tsx","webpack://ant-design-pro/./src/components/ProgramForm/ThreeColProgram/List/Recommender/InfoRecommender.tsx","webpack://ant-design-pro/./src/components/ProgramForm/ThreeColProgram/List/Recommender/RecommenderPopoverContent.tsx","webpack://ant-design-pro/./src/components/ProgramForm/ThreeColProgram/List/Recommender/RecommenderPopoverInfo.tsx","webpack://ant-design-pro/./src/components/ProgramForm/ThreeColProgram/List/Recommender/index.tsx","webpack://ant-design-pro/./src/components/ProgramForm/ThreeColProgram/List/Recommender/CourseRecommender.tsx","webpack://ant-design-pro/./src/components/ProgramForm/ThreeColProgram/List/Recommender/RecommenderTopicSelector.tsx","webpack://ant-design-pro/./src/components/ProgramForm/ThreeColProgram/List/TopicTypesSelector.tsx","webpack://ant-design-pro/./src/components/ProgramForm/ThreeColProgram/List/LessonList/utils.ts","webpack://ant-design-pro/./src/components/ProgramForm/ThreeColProgram/List/LessonList/index.tsx","webpack://ant-design-pro/./src/components/ProgramForm/ThreeColProgram/List/index.tsx","webpack://ant-design-pro/./src/components/ProgramForm/ThreeColProgram/index.tsx","webpack://ant-design-pro/./src/components/ProgramForm/index.tsx","webpack://ant-design-pro/./src/services/escola-lms/projects.ts","webpack://ant-design-pro/./src/components/ProjectsList/index.tsx","webpack://ant-design-pro/./src/pages/Courses/components/CourseSuccessModal.tsx","webpack://ant-design-pro/./src/pages/Courses/components/CourseAccess.tsx","webpack://ant-design-pro/./src/services/escola-lms/certificate.ts","webpack://ant-design-pro/./src/components/Certificate/index.tsx","webpack://ant-design-pro/./src/pages/Courses/components/CourseCertificateForm.tsx","webpack://ant-design-pro/./src/pages/Courses/form.tsx","webpack://ant-design-pro/./src/pages/Settings/components/ModalForm.tsx","webpack://ant-design-pro/./src/pages/Settings/global.tsx","webpack://ant-design-pro/./src/services/escola-lms/files.ts","webpack://ant-design-pro/./src/services/escola-lms/h5p.ts","webpack://ant-design-pro/./src/services/escola-lms/reports.ts","webpack://ant-design-pro/./src/services/escola-lms/scorm.ts"],"sourcesContent":["import { ExportOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\nimport React, { useCallback, useState } from 'react';\nimport { FormattedMessage } from 'umi';\n\nimport { exportStatForCourse } from '@/services/escola-lms/reports';\n\ninterface Props {\n  course_id: number;\n  stat?: API.ExportStatForCourseStat;\n}\n\nexport const ExportStatsButton: React.FC<Props> = ({\n  course_id,\n  stat = 'EscolaLms\\\\Reports\\\\Stats\\\\Course\\\\FinishedTopics',\n}) => {\n  const [loading, setLoading] = useState(false);\n\n  const onClickFactory = useCallback(\n    (courseId: number) => async () => {\n      setLoading(true);\n      try {\n        const response = await exportStatForCourse(courseId, {\n          stat,\n        });\n\n        if (response instanceof Blob) {\n          const downloadLink = document.createElement('a');\n          downloadLink.href = window.URL.createObjectURL(response);\n          downloadLink.download = `finished_topics_${course_id}.xlsx`;\n          document.body.appendChild(downloadLink);\n          downloadLink.click();\n          document.body.removeChild(downloadLink);\n        }\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    },\n    [stat],\n  );\n\n  return (\n    <Button type=\"primary\" loading={loading} onClick={onClickFactory(course_id)}>\n      <ExportOutlined /> <FormattedMessage id=\"export\" />\n    </Button>\n  );\n};\n","import { DATETIME_FORMAT } from '@/consts/dates';\nimport { timeDisplay } from '@/utils/utils';\nimport { Column } from '@ant-design/plots';\nimport ProCard from '@ant-design/pro-card';\nimport { Row, Select, Space, Switch, Table, Tag } from 'antd';\nimport type { ColumnsType } from 'antd/es/table';\nimport { format } from 'date-fns';\nimport React, { useMemo, useState } from 'react';\nimport ScrollContainer from 'react-indiana-drag-scroll';\nimport { FormattedMessage, useIntl } from 'umi';\nimport TypeButtonDrawer from '../TypeButtonDrawer';\nimport { ExportStatsButton } from './ExportStatsButton';\n\ntype UserStatColumn = Record<string, number | string | API.FinishedTopicsUserStat> & {\n  email: string;\n  id: number;\n};\n\nconst findH5PType = (topic: API.TopicH5P) => {\n  if (topic.topicable.content.contents) {\n    return Object.values(topic.topicable.content.contents)[0].library;\n  }\n  return 'H5P';\n};\n\nexport const UserProgress: React.FC<{\n  course_id: number;\n  topics: API.Topic[];\n  stats: API.FinishedTopicsUserStats[];\n}> = ({ course_id, topics, stats }) => {\n  const [showSeconds, setShowSeconds] = useState(false);\n\n  const columns: ColumnsType<UserStatColumn> = useMemo(() => {\n    return [\n      {\n        title: <FormattedMessage id=\"user\" />,\n        dataIndex: 'id',\n        render: (id: number) => <TypeButtonDrawer type=\"App\\Models\\User\" type_id={id} />,\n      },\n      {\n        title: <FormattedMessage id=\"email\" />,\n        dataIndex: 'email',\n      },\n      ...topics.map((topic) => {\n        let type: string | undefined = topic.topicable_type?.split('\\\\').pop();\n\n        if (type === 'H5P') {\n          type = findH5PType(topic as API.TopicH5P);\n        }\n\n        return {\n          render: (row: API.FinishedTopicsUserStat | undefined) => {\n            let result = 0;\n\n            if (row) {\n              if (row.started_at && row.finished_at) {\n                result = 1;\n              } else if (row.started_at) {\n                result = 2;\n              }\n            }\n\n            switch (result) {\n              case 1:\n                return (\n                  <Space>\n                    <Tag color=\"success\">F</Tag>\n                    {showSeconds && row?.seconds && <small>{timeDisplay(row.seconds)}</small>}\n                  </Space>\n                );\n              case 2:\n                return (\n                  <Space>\n                    <Tag color=\"blue\">S</Tag>\n                    {showSeconds && row?.seconds && <small>{timeDisplay(row.seconds)}</small>}\n                  </Space>\n                );\n              case 0:\n              default:\n                return (\n                  <React.Fragment>\n                    <Tag color=\"error\">N</Tag>\n                  </React.Fragment>\n                );\n            }\n          },\n\n          title: (\n            <small>\n              <Tag>{type}</Tag> {topic.title}\n            </small>\n          ),\n          dataIndex: topic.id,\n        };\n      }),\n    ];\n  }, [topics, showSeconds]);\n\n  const dataSource: UserStatColumn[] = useMemo(() => {\n    return stats.map((userStat) =>\n      topics.reduce(\n        (acc, topic) => {\n          const result = userStat.topics.find((userStatTopic) => userStatTopic.id === topic.id);\n          return { ...acc, [Number(topic.id)]: result ?? 0 };\n        },\n        { email: userStat.email, id: userStat.id } as UserStatColumn,\n      ),\n    );\n  }, [stats, topics]);\n\n  return (\n    <Table\n      title={() => (\n        <Row justify=\"space-between\" align=\"middle\">\n          <Space>\n            <FormattedMessage id=\"Finished\" defaultMessage=\"Finished:\" />{' '}\n            <Tag color=\"success\">F</Tag>\n            <FormattedMessage id=\"Started\" defaultMessage=\"Started:\" /> <Tag color=\"blue\">S</Tag>\n            <FormattedMessage id=\"NotStarted\" defaultMessage=\"Not Started:\" />{' '}\n            <Tag color=\"error\">N</Tag>\n            <FormattedMessage id=\"ShowMinutes\" defaultMessage=\"Show minutes spent on topic:\" />{' '}\n            <Switch checked={showSeconds} onChange={(v) => setShowSeconds(v)} />\n          </Space>\n          <ExportStatsButton course_id={course_id} />\n        </Row>\n      )}\n      columns={columns}\n      dataSource={dataSource}\n      size=\"small\"\n      scroll={{ x: 1500 }}\n      components={{\n        table: (props: React.HTMLAttributes<HTMLTableElement>) => (\n          <ScrollContainer horizontal={true} style={{ maxWidth: 'auto' }} hideScrollbars={false}>\n            <table {...props} />\n          </ScrollContainer>\n        ),\n      }}\n    />\n  );\n};\n\nexport const UserCourseFinish: React.FC<{\n  stats: API.FinishedCourseUserStats[];\n  attempts: API.CourseAttempts[];\n}> = ({ stats, attempts }) => {\n  const columns: ColumnsType<{ email: string; finished_at: Date | string }> = useMemo(() => {\n    return [\n      {\n        title: <FormattedMessage id=\"user\" />,\n        dataIndex: 'id',\n        render: (id: number) => <TypeButtonDrawer type=\"App\\Models\\User\" type_id={id} />,\n      },\n      {\n        title: <FormattedMessage id=\"email\" />,\n        dataIndex: 'email',\n      },\n      {\n        title: <FormattedMessage id=\"attempt\" defaultMessage=\"Attempt\" />,\n        dataIndex: 'attempt',\n      },\n      {\n        title: <FormattedMessage id=\"finished_at\" defaultMessage=\"Finished at\" />,\n        dataIndex: 'finished_at',\n        render: (text) => (text ? format(new Date(text), DATETIME_FORMAT) : ''),\n      },\n    ];\n  }, []);\n\n  const dataSource: { email: string; finished_at: Date | string }[] = useMemo(() => {\n    return stats.map(({ id, email, finished_at }) => {\n      const courseAttempts = attempts?.find((attempt) => attempt.id === id);\n      const attemptCount = Array.isArray(courseAttempts?.attempts)\n        ? courseAttempts?.attempts.length\n        : 0;\n\n      return {\n        id,\n        email,\n        finished_at,\n        attempt: attemptCount,\n      };\n    });\n  }, [stats]);\n\n  return (\n    <Table\n      title={() => (\n        <Space>\n          <FormattedMessage id=\"course.finished\" defaultMessage=\"Finished\" />\n        </Space>\n      )}\n      columns={columns}\n      dataSource={dataSource}\n      size=\"small\"\n      scroll={{ x: 500 }}\n    />\n  );\n};\n\nexport const UserCourseAttempts: React.FC<{ stats: API.CourseAttempts[] }> = ({ stats }) => {\n  const [choosenUserEmail, setChoosenUserEmail] = useState<string | null>(null);\n  const [choosenAttempt, setChoosenAttempt] = useState<number | null>(null);\n  const intl = useIntl();\n\n  const dataSource = useMemo(() => {\n    return stats.flatMap((userStats) =>\n      Object.values(userStats.attempts).flatMap(({ dates, attempt }) => {\n        const datesValue = Object.values(dates).flatMap(({ date, seconds_total }) => {\n          return {\n            date,\n            attempt,\n            seconds_total,\n            email: userStats.email,\n          };\n        });\n\n        return datesValue;\n      }),\n    );\n  }, [stats]);\n\n  const config: any = {\n    xField: 'date',\n    yField: 'seconds_total',\n    seriesField: 'attempt',\n    isStack: true,\n    xAxis: {\n      label: {\n        autoHide: true,\n        autoRotate: false,\n      },\n    },\n    slider: {\n      start: 0,\n      end: 1,\n    },\n    label: {\n      position: 'middle',\n      layout: [\n        {\n          type: 'interval-adjust-position',\n        },\n        {\n          type: 'interval-hide-overlap',\n        },\n        {\n          type: 'adjust-color',\n        },\n      ],\n    },\n  };\n\n  return (\n    <ProCard\n      title={\n        <Space>\n          <FormattedMessage id=\"course.interactions_time_in_days\" />\n          <Select\n            showSearch\n            value={choosenUserEmail}\n            onChange={(newValue) => {\n              setChoosenUserEmail(newValue);\n              setChoosenAttempt(null);\n            }}\n            placeholder={<FormattedMessage id=\"select_person\" defaultMessage=\"Select a person\" />}\n          >\n            {stats.map(({ id, email }) => (\n              <Select.Option key={id} value={email}>\n                {email}\n              </Select.Option>\n            ))}\n          </Select>\n          <Select\n            value={choosenAttempt}\n            onChange={(newValue) => setChoosenAttempt(newValue)}\n            disabled={choosenUserEmail === null}\n            placeholder={<FormattedMessage id=\"select_attempt\" defaultMessage=\"Select attempt\" />}\n          >\n            {[\n              ...new Set(\n                dataSource\n                  .filter(({ email }) => email === choosenUserEmail)\n                  .map(({ attempt }) => attempt),\n              ),\n            ].map((attempt) => (\n              <Select.Option value={attempt} key={attempt}>\n                <FormattedMessage id=\"attempt\" defaultMessage=\"Attempt\" /> {attempt}\n              </Select.Option>\n            ))}\n          </Select>\n        </Space>\n      }\n      colSpan={12}\n      layout=\"center\"\n    >\n      <div style={{ overflow: 'auto', minHeight: '400px', width: '100%' }}>\n        <Column\n          {...config}\n          tooltip={{\n            title: `${intl.formatMessage({ id: 'attempt' })}`,\n            formatter: (datum: { seconds_total: number; attempt: string }) => {\n              const minutes = Math.floor(+datum.seconds_total / 60);\n              const seconds = +datum.seconds_total > 60 ? +datum.seconds_total - minutes * 60 : 0;\n\n              return {\n                name: datum.attempt,\n                value: `${minutes}m ${seconds}s`,\n              };\n            },\n          }}\n          data={dataSource\n            .filter(({ email }) => email === choosenUserEmail)\n            .filter(({ attempt }) =>\n              Number.isInteger(choosenAttempt) ? attempt === choosenAttempt : true,\n            )}\n        />\n      </div>\n    </ProCard>\n  );\n};\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\n\nimport { files, findFile, remove } from '@/services/escola-lms/files';\nimport { Button, Input, List, Pagination, Space, Typography } from 'antd';\n\nimport { DeleteOutlined, DownloadOutlined, FolderOutlined } from '@ant-design/icons';\nimport { FormattedMessage, useIntl } from 'umi';\n\nimport SecureUpload from '@/components/SecureUpload';\n\nimport './index.css';\n\ninterface FormWysiwygProps {\n  hideDeleteBtn?: boolean;\n  forceLoading?: boolean;\n  defaultDirectory?: string;\n  hideAddBtn?: boolean;\n  onFile?: (file: API.File, directory?: string) => void;\n}\n\ntype FileBrowserState = {\n  loading: boolean;\n  name: string;\n  directory: string;\n  current_page: number;\n  data?: API.File[];\n  per_page: number;\n  last_page: number;\n  total: number;\n};\n\nconst FilesBrowserActions: React.FC<{\n  directory: string;\n  onUploaded: (dir: string, file: API.File) => void;\n}> = ({ directory, onUploaded }) => {\n  return (\n    <Space align=\"start\">\n      <Typography.Text>\n        <FormattedMessage id=\"pages.files.filesBrowser\" />\n        <Typography.Text code>{directory}</Typography.Text>\n      </Typography.Text>\n      <SecureUpload\n        url=\"/api/admin/file/upload\"\n        name=\"file[]\"\n        data={{\n          target: directory,\n        }}\n        onUpload={(response) => {\n          if (response.success) {\n            onUploaded(directory, response.data);\n          }\n        }}\n      />\n    </Space>\n  );\n};\n\nexport const FilesBrowser: React.FC<FormWysiwygProps> = ({\n  defaultDirectory = '/',\n  onFile,\n  hideDeleteBtn = false,\n  forceLoading = false,\n  hideAddBtn = false,\n}) => {\n  const intl = useIntl();\n  const [state, setState] = useState<FileBrowserState>({\n    loading: false,\n    name: '',\n    directory: defaultDirectory,\n    current_page: 1,\n    data: undefined,\n    per_page: 1,\n    last_page: 1,\n    total: 0,\n  });\n\n  const controllerRef = useRef<AbortController | null>();\n\n  const setLoading = useCallback((loading: boolean) => {\n    setState((prevState) => ({\n      ...prevState,\n      loading,\n    }));\n  }, []);\n\n  const handleSuccessResponse = useCallback(\n    (response: API.FileList, dir: string) => {\n      if (response.success) {\n        setState((prevState) => ({\n          ...prevState,\n          ...response.data,\n          data: [\n            {\n              url: dir.split('/').slice(0, -1).join('/'),\n              name: '..',\n              created_at: '',\n              mime: 'directory',\n            } as API.File,\n            ...response.data.data.map((file: API.File) => ({\n              ...file,\n              url: file.mime === 'directory' ? `${dir}/${file.name}` : file.url,\n            })),\n          ].filter((file: API.File) => {\n            if (dir === '/' || dir === defaultDirectory) {\n              return file.name !== '..';\n            }\n            return true;\n          }),\n          directory: dir,\n          loading: false,\n        }));\n      }\n    },\n    [setLoading],\n  );\n\n  const fetchFiles = useCallback(\n    (dir: string, page = 1) => {\n      const abort = () => controllerRef.current && controllerRef.current.abort();\n      abort();\n\n      controllerRef.current = new AbortController();\n\n      setLoading(true);\n\n      files({ directory: dir, page }, { signal: controllerRef.current?.signal })\n        .then((response) => {\n          if (response.success) {\n            handleSuccessResponse(response, dir);\n          }\n        })\n        .catch(() => setLoading(false));\n      return () => {\n        abort();\n      };\n    },\n    [setLoading],\n  );\n\n  useEffect(() => {\n    return fetchFiles(defaultDirectory);\n  }, [defaultDirectory, fetchFiles]);\n\n  const onRemove = useCallback(\n    (url: string) => {\n      setLoading(true);\n\n      remove(url)\n        .then(() => {\n          fetchFiles(state.directory);\n        })\n        .catch(() => {\n          setLoading(false);\n        });\n    },\n    [fetchFiles, setLoading, state.directory],\n  );\n\n  const findByInputValue = useCallback(\n    (dir: string, input: string, page = 1) => {\n      const abort = () => controllerRef.current && controllerRef.current.abort();\n      abort();\n\n      controllerRef.current = new AbortController();\n\n      setLoading(true);\n\n      findFile({ directory: dir, name: input, page }, { signal: controllerRef.current?.signal })\n        .then((response) => {\n          if (response.success) {\n            handleSuccessResponse(response, dir);\n          }\n        })\n        .catch(() => setLoading(false));\n      return () => {\n        abort();\n      };\n    },\n    [setLoading],\n  );\n\n  return (\n    <div className=\"file-browser\">\n      <div className=\"file-browser__header\">\n        <Input\n          placeholder={intl.formatMessage({\n            id: 'search_file',\n          })}\n          className=\"file-browser__input\"\n          onChange={(e) =>\n            setState((prev) => {\n              return { ...prev, name: e.target.value };\n            })\n          }\n          value={state.name}\n        />\n        <div>\n          <Button className=\"file-browser__button\" onClick={() => fetchFiles(state.directory)}>\n            <FormattedMessage id=\"reset\" />\n          </Button>\n          <Button\n            className=\"file-browser__button\"\n            type=\"primary\"\n            onClick={() => findByInputValue(state.directory, state.name)}\n          >\n            <FormattedMessage id=\"query\" />\n          </Button>\n        </div>\n      </div>\n      <List\n        loading={state.loading || forceLoading}\n        size=\"small\"\n        itemLayout=\"horizontal\"\n        dataSource={state.data}\n        header={\n          hideAddBtn ? null : (\n            <FilesBrowserActions\n              directory={state.directory}\n              onUploaded={(dir, file) => {\n                if (file) {\n                  fetchFiles(dir);\n                  if (onFile) {\n                    onFile(file, dir);\n                  }\n                }\n              }}\n            />\n          )\n        }\n        footer={\n          hideAddBtn ? null : (\n            <FilesBrowserActions\n              directory={state.directory}\n              onUploaded={(dir, file) => {\n                fetchFiles(dir);\n                if (file && onFile) {\n                  onFile(file, dir);\n                }\n              }}\n            />\n          )\n        }\n        renderItem={(item) => (\n          <List.Item\n            actions={\n              item.mime !== 'directory' && !hideDeleteBtn\n                ? [\n                    <Button\n                      key=\"dir\"\n                      type=\"default\"\n                      danger\n                      icon={<DeleteOutlined />}\n                      size=\"small\"\n                      onClick={() => onRemove(item.url)}\n                    />,\n                  ]\n                : []\n            }\n          >\n            <List.Item.Meta\n              avatar={\n                item.mime === 'directory' ? (\n                  <Button\n                    type=\"primary\"\n                    icon={<FolderOutlined />}\n                    size=\"small\"\n                    onClick={() => fetchFiles(item.url)}\n                  />\n                ) : (\n                  <a href={item.url} target={'_blank'} rel=\"noreferrer\">\n                    <Button type=\"default\" icon={<DownloadOutlined />} size=\"small\" />\n                  </a>\n                )\n              }\n              description={\n                <React.Fragment>\n                  <Button\n                    type=\"text\"\n                    size=\"small\"\n                    onClick={() =>\n                      item.mime === 'directory'\n                        ? fetchFiles(item.url)\n                        : onFile && onFile(item, state.directory)\n                    }\n                  >\n                    {item.name}\n                  </Button>\n                </React.Fragment>\n              }\n            />\n          </List.Item>\n        )}\n      />\n      <Pagination\n        pageSizeOptions={[]}\n        current={state.current_page}\n        total={state.total}\n        pageSize={state.per_page}\n        onChange={(page) => fetchFiles(state.directory, page)}\n      />\n    </div>\n  );\n};\n\nexport default FilesBrowser;\n","import { useEffect, useRef } from 'react';\n\nexport function useTokenChangeListener(onTokenChange: (newToken: string | null) => void) {\n  const onTokenChangeRef = useRef(onTokenChange);\n\n  useEffect(() => {\n    const eventHandler = () => {\n      const token = localStorage.getItem('TOKEN');\n      onTokenChangeRef.current(token);\n    };\n\n    window.addEventListener('token_change', eventHandler);\n\n    return () => {\n      window.removeEventListener('token_change', eventHandler);\n    };\n  }, []);\n}\n","import {\n  ContextlessEditor,\n  type EditorSettings,\n  type H5PEditorContent,\n} from '@escolalms/h5p-react';\nimport { Alert, Col, Row, Spin, message } from 'antd';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { FormattedMessage, useIntl } from 'umi';\n\nimport { useTokenChangeListener } from '@/hooks/useTokenChangeListener';\nimport { editorSettings, updateContent } from '@/services/escola-lms/h5p';\n\nconst H5P_EDITOR_IFRAME_ID = 'h5p-editor';\nenum EditorMessage {\n  TokenChanged = 'TOKEN_CHANGED',\n}\n\nconst sendNewTokenToIFrame = (newToken: string | null) => {\n  const iframe = document.getElementById(H5P_EDITOR_IFRAME_ID) as HTMLIFrameElement | null;\n\n  if (!iframe) {\n    console.error(`There is no iframe with id '${H5P_EDITOR_IFRAME_ID}'`);\n    return;\n  }\n\n  iframe.contentWindow?.postMessage({ type: EditorMessage.TokenChanged, token: newToken }, '*');\n};\n\nexport const Editor: React.FC<{\n  id: 'new' | number;\n  onSubmitted: (id: number) => void;\n  onLoaded?: (settings: API.H5PObject) => void;\n}> = ({ id, onSubmitted, onLoaded }) => {\n  const [settings, setEditorSettings] = useState<EditorSettings>();\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string>();\n\n  const intl = useIntl();\n  const lang = intl.locale.split('-')[0];\n\n  useTokenChangeListener(sendNewTokenToIFrame);\n\n  useEffect(() => {\n    if (id) {\n      setLoading(true);\n      editorSettings(id === 'new' ? undefined : id, lang)\n        .then((data) => {\n          if (data.success) {\n            if (onLoaded) {\n              onLoaded(data.data);\n            }\n            setEditorSettings(data.data);\n          } else {\n            setError(data.message);\n          }\n        })\n        .catch((err: any) => err && setError(err.toString()))\n        .finally(() => setLoading(false));\n    }\n  }, [id]);\n\n  const onSubmit = useCallback((data: H5PEditorContent) => {\n    setLoading(true);\n    updateContent(data, id === 'new' ? undefined : id)\n      .then((responseData) => {\n        if (responseData.success) {\n          onSubmitted(responseData.data.id);\n          message.success(\n            <FormattedMessage\n              id=\"h5p_edited\"\n              defaultMessage=\"H5P Element edited and saved successfully\"\n            />,\n          );\n        } else {\n          setError(responseData.message);\n        }\n      })\n      .catch((err: any) => err && setError(err.toString()))\n      .finally(() => setLoading(false));\n  }, []);\n\n  if (!settings) {\n    return (\n      <Col>\n        <Row justify=\"center\" align=\"middle\">\n          {error && <Alert message={error} type=\"error\" />}\n          <Spin />\n        </Row>\n      </Col>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      {error && <Alert message={error} type=\"error\" />}\n\n      {settings && (\n        <ContextlessEditor\n          onError={(err: unknown) => console.error(err)}\n          state={settings}\n          allowSameOrigin\n          onSubmit={onSubmit}\n          loading={loading}\n          lang={lang}\n          iframeId={H5P_EDITOR_IFRAME_ID}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Editor;\n","import ProCard from '@ant-design/pro-card';\nimport { FormattedMessage } from 'umi';\n\nimport Editor from './editor';\nimport Player from './player';\n\nconst Card: React.FC<{\n  defaultCard?: 'edit' | 'preview';\n  id: 'new' | number;\n  onSubmit: (id: number) => void;\n  onLoaded?: (settings: API.H5PObject) => void;\n}> = ({ defaultCard = 'edit', id, onSubmit, onLoaded }) => {\n  return (\n    <ProCard\n      tabs={{\n        type: 'card',\n        defaultActiveKey: defaultCard,\n      }}\n    >\n      <ProCard.TabPane key=\"edit\" disabled={!id} tab={<FormattedMessage id=\"edit\" />}>\n        <Editor key={id} id={id} onSubmitted={onSubmit} onLoaded={onLoaded} />\n      </ProCard.TabPane>\n      {id !== 'new' && (\n        <ProCard.TabPane key=\"preview\" disabled={!id} tab={<FormattedMessage id=\"preview\" />}>\n          <Player id={id} onLoaded={onLoaded} />\n        </ProCard.TabPane>\n      )}\n    </ProCard>\n  );\n};\n\nexport default Card;\n","import { contentSettings } from '@/services/escola-lms/h5p';\nimport type { EditorSettings, XAPIEvent } from '@escolalms/h5p-react';\nimport { ContextlessPlayer } from '@escolalms/h5p-react';\nimport { Alert, Col, Divider, Row, Spin, Typography } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport ReactJson from 'react-json-view';\nimport { useIntl } from 'umi';\nconst { Title } = Typography;\n\nexport const Player: React.FC<{\n  id: 'new' | number;\n  onXAPI?: (event: XAPIEvent) => void;\n  onLoaded?: (settings: API.H5PObject) => void;\n}> = ({ id, onXAPI, onLoaded }) => {\n  const [settings, setEditorSettings] = useState<EditorSettings>();\n  const [loading, setLoading] = useState<boolean>(false);\n  const [XAPIEvents, setXAPIEvents] = useState<XAPIEvent[]>([]);\n  const [error, setError] = useState<string>();\n\n  const intl = useIntl();\n  const lang = intl.locale.split('-')[0];\n\n  useEffect(() => {\n    if (id) {\n      setLoading(true);\n      contentSettings(id, lang)\n        .then((data) => {\n          if (data.success) {\n            if (onLoaded) {\n              onLoaded(data.data);\n            }\n            setEditorSettings(data.data);\n          } else {\n            setError(data.message);\n          }\n        })\n        .catch((err: any) => err && setError(err.toString()))\n        .finally(() => setLoading(false));\n    }\n  }, [id]);\n\n  if (!settings) {\n    return (\n      <Col>\n        <Row justify=\"center\" align=\"middle\">\n          {error && <Alert message={error} type=\"error\" />}\n          <Spin />\n        </Row>\n      </Col>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      {error && <Alert message={error} type=\"error\" />}\n      <ContextlessPlayer\n        contentId={id}\n        onError={(err: unknown) => console.error(err)}\n        state={settings}\n        allowSameOrigin\n        loading={loading}\n        onXAPI={(event: XAPIEvent) => {\n          if (onXAPI) {\n            onXAPI(event);\n          } else {\n            setXAPIEvents((prevState) => [...prevState, event]);\n          }\n        }}\n      />\n\n      {!onXAPI && (\n        <React.Fragment>\n          <Divider />\n          <div style={{ overflow: 'auto', maxHeight: '400px' }}>\n            <Title level={5}>XAPI Events</Title>\n            <ReactJson src={XAPIEvents} />\n          </div>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Player;\n","import SecureUpload from '@/components/SecureUpload';\nimport React from 'react';\n\nexport const UploadH5P: React.FC<{\n  onSuccess: (response: any) => void;\n  onError: () => void;\n  hideLabel?: boolean;\n}> = ({ onSuccess, onError, hideLabel }) => {\n  return (\n    <SecureUpload\n      url=\"/api/admin/hh5p/content/upload\"\n      name=\"h5p_file\"\n      accept=\".h5p\"\n      hideLabel={hideLabel}\n      onChange={(info) => {\n        if (info.file.status === 'done') {\n          if (info.file.response) {\n            onSuccess(info.file.response);\n          }\n        }\n        if (info.file.status === 'error') {\n          onError();\n        }\n      }}\n    />\n  );\n};\n\nexport default UploadH5P;\n","import React, { useEffect, useState } from 'react';\n\nimport { saveAs } from 'file-saver';\nimport { useCallback } from 'react';\n\nimport JSZip from 'jszip';\n\ndeclare const REACT_APP_API_URL: string;\n\nexport const PdfZipList: React.FC<{\n  pdfIds: number[];\n  onProgress?: (proc: number) => void;\n  onFinished?: () => void;\n  filename?: string;\n}> = ({ pdfIds, onProgress, onFinished, filename = 'package.zip' }) => {\n  const [blobs, setBlobs] = useState<Blob[]>([]);\n\n  const onFinishedLocal = useCallback(\n    (allBlobs: Blob[]) => {\n      const zip = new JSZip();\n\n      allBlobs.forEach((blob, i) => zip.file(`${pdfIds[i]}.pdf`, blob));\n\n      zip.generateAsync({ type: 'blob' }).then(function (content) {\n        saveAs(content, filename);\n        if (onFinished) {\n          onFinished();\n        }\n      });\n    },\n    [blobs, filename],\n  );\n\n  useEffect(() => {\n    pdfIds.forEach((pdfId) => {\n      const result = fetch(\n        `${window.REACT_APP_API_URL || REACT_APP_API_URL}/api/pdfs/generate/${pdfId}`,\n        {\n          headers: { Authorization: `Bearer ${localStorage.getItem('TOKEN')}` },\n        },\n      );\n\n      result\n        .then((response) => response.blob())\n        .then((pdfBlob) => {\n          if (pdfBlob && pdfBlob instanceof Blob) {\n            setBlobs((prevBlobs) => {\n              const progress = (prevBlobs.length + 1) / pdfIds.length;\n              if (onProgress) {\n                onProgress(progress);\n              }\n              if (progress >= 1) {\n                onFinishedLocal([...prevBlobs, pdfBlob]);\n              }\n              return [...prevBlobs, pdfBlob];\n            });\n          }\n        });\n    });\n\n    /*\n\n      const fetch = async () => {\n        const responses = await Promise.all(pdfIds.map((pdfId) => generatedPdf(pdfId)));\n        setState({\n          state: 'start',\n          finishedPdfs: responses\n            .filter((response) => response.success)\n            .map((response) => response.success && response.data),\n        });\n      };\n      fetch();      \n\n      */\n  }, [pdfIds]);\n\n  /*\n\n  useEffect(() => {\n    if (state.state === 'processing') {\n      if (state.finishedPdfs.length === 0) {\n        setState({\n          state: 'finished',\n        });\n      } else {\n        setState({\n          state: 'start',\n          finishedPdfs: state.finishedPdfs,\n        });\n      }\n      if (onProgress) {\n        onProgress(1 - state.finishedPdfs.length / pdfIds.length);\n      }\n    }\n\n    if (state.state === 'finished') {\n      onFinishedLocal();\n    }\n  }, [state, pdfIds]);\n\n  */\n\n  return (\n    <p>\n      Progress {blobs.length} / {pdfIds.length}\n    </p>\n  );\n};\n\nexport default PdfZipList;\n","import type { AxiosRequestConfig } from '@umijs/max';\nimport { request } from 'umi';\n\n/**  GET /api/admin/pdfs */\nexport async function pdfs(\n  params: EscolaLms.TemplatesPdf.Http.Requests.PdfListingAdminRequest,\n  options?: AxiosRequestConfig,\n) {\n  return request<API.DefaultMetaResponse<EscolaLms.TemplatesPdf.Models.FabricPDF>>(\n    '/api/admin/pdfs',\n    {\n      params: {\n        ...params,\n      },\n      method: 'GET',\n      ...(options || {}),\n    },\n  );\n}\n\n/**  GET /api/pdf/{id} */\n\nexport async function pdf(id: number, options?: AxiosRequestConfig) {\n  return request<API.DefaultResponse<any>>(`/api/pdfs/${id}`, {\n    method: 'GET',\n    ...(options || {}),\n  });\n}\n\n/**  GET /api/pdf/generate/{id} */\n\nexport async function generatedPdf(id: number, options?: AxiosRequestConfig) {\n  return request<Response>(`/api/pdfs/generate/${id}`, {\n    method: 'GET',\n    ...(options || {}),\n  });\n}\n","import { Alert, Button, Divider, List, Spin, Typography } from 'antd';\nimport React, { Fragment, useEffect, useState } from 'react';\n\nimport { useCallback } from 'react';\nimport { FormattedMessage } from 'umi';\n\nimport PdfZipList from '@/components/Pdf/ziplist';\nimport { pdf, pdfs } from '@/services/escola-lms/pdfs';\n\nimport TypeButtonDrawer from '@/components/TypeButtonDrawer';\nimport { DownloadOutlined } from '@ant-design/icons';\nimport AuthenticatedLinkButton from '../AuthenticatedLinkButton';\n\ntype Request = EscolaLms.TemplatesPdf.Http.Requests.PdfListingAdminRequest & {\n  template_id?: number;\n  title?: string;\n};\ntype Model = EscolaLms.TemplatesPdf.Models.FabricPDF;\n\ntype ModelState =\n  | {\n      state: 'initial';\n    }\n  | {\n      state: 'loading';\n    }\n  | {\n      state: 'loaded';\n      list: Model[];\n    }\n  | {\n      state: 'error';\n      error: string;\n    };\n\ntype PreviewState =\n  | {\n      state: 'initial';\n    }\n  | {\n      state: 'loading';\n    }\n  | {\n      state: 'loaded';\n      data: any;\n    };\n\nexport const PdfList: React.FC<Request> = ({ user_id, template_id, title }) => {\n  const [state, setState] = useState<ModelState>({ state: 'initial' });\n\n  const [previewState, setPreviewState] = useState<PreviewState>({ state: 'initial' });\n  const [generateAll, setGenerateAll] = useState<boolean>(false);\n\n  useEffect(() => {\n    setState({ state: 'loading' });\n    const abortController = new AbortController();\n    pdfs({ user_id, template_id }, { signal: abortController.signal })\n      .then((response) => {\n        if (response && response.success) {\n          setState({ state: 'loaded', list: response.data });\n        } else if (response && !response.success) {\n          setState({ state: 'error', error: response.message });\n        }\n      })\n      .catch((err) => setState({ state: 'error', error: err.toString() }));\n\n    return () => {\n      abortController.abort();\n    };\n  }, []);\n\n  const getPdf = useCallback((id: number) => {\n    setPreviewState({ state: 'loading' });\n    pdf(id).then((response) => {\n      if (response.success) {\n        setPreviewState({ state: 'loaded', data: response.data.content });\n      } else {\n        setPreviewState({ state: 'initial' });\n      }\n    });\n  }, []);\n\n  if (state.state === 'error') {\n    return <Alert message=\"Error Text\" type=\"error\" />;\n  }\n\n  if (state.state === 'loading' || state.state === 'initial') {\n    return <Spin />;\n  }\n\n  return (\n    <Fragment>\n      <Divider />\n      {generateAll && (\n        <PdfZipList\n          pdfIds={state.list.map((item) => item.id)}\n          onFinished={() => setGenerateAll(false)}\n        />\n      )}\n      <List\n        size=\"small\"\n        itemLayout=\"horizontal\"\n        dataSource={state.list}\n        header={\n          <div>\n            <FormattedMessage id=\"template\" />{' '}\n            {title && <Typography.Text strong>{title}</Typography.Text>}\n            {'. '}\n            <FormattedMessage id=\"generated_pdfs\" defaultMessage=\"Generated PDFs\" />{' '}\n            <Button\n              loading={generateAll}\n              type=\"primary\"\n              onClick={() => setGenerateAll(true)}\n              icon={<DownloadOutlined />}\n              size=\"small\"\n            >\n              <FormattedMessage id=\"download_all\" defaultMessage=\"Download all PDFs\" />\n            </Button>\n          </div>\n        }\n        renderItem={(item) => (\n          <List.Item\n            actions={[\n              <AuthenticatedLinkButton\n                url={`/api/pdfs/generate/${item.id}`}\n                filename={`generated-${item.id}.pdf`}\n                key=\"download\"\n                size=\"small\"\n                icon={<DownloadOutlined />}\n                type=\"primary\"\n                onClick={() => getPdf(item.id)}\n                loading={previewState.state === 'loading'}\n              >\n                <FormattedMessage id=\"download_pdf\" defaultMessage=\"Download PDFs\" />\n              </AuthenticatedLinkButton>,\n            ]}\n          >\n            {item.title} <TypeButtonDrawer type=\"App\\Models\\User\" type_id={item.user_id} />\n          </List.Item>\n        )}\n      />\n    </Fragment>\n  );\n};\n\nexport default PdfList;\n","import { message } from 'antd';\nimport type { Location } from 'history';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { history, useIntl, useLocation } from 'umi';\n\nimport {\n  cloneLesson as apiCloneLesson,\n  cloneTopic as apiCloneTopic,\n  createLesson as apiCreateLesson,\n  createTopic as apiCreateTopic,\n  removeLesson as apiRemoveLesson,\n  removeTopic as apiRemoveTopic,\n  updateLesson as apiUpdateLesson,\n  updateTopic as apiUpdateTopic,\n  program,\n} from '@/services/escola-lms/course';\n\nimport { TopicType } from '@/services/escola-lms/enums';\nimport { fields } from '@/services/escola-lms/fields';\nimport type { UploadChangeParam } from 'antd/lib/upload';\n\ntype CurrentEditMode =\n  | { mode: 'lesson'; id: number; value?: API.Lesson | null }\n  | { mode: 'topic'; id: number; value?: API.Topic | null }\n  | { mode: 'init' };\n\ntype ProgramContext = {\n  currentEditMode?: CurrentEditMode;\n  state?: API.CourseProgram;\n  h5ps?: any[];\n  // token: credentials.token,\n  id?: number;\n  addNewLesson?: (parentId?: number) => API.Lesson;\n  updateLesson?: (lesson_id: number, data: FormData) => Promise<void | boolean>;\n  updateTopic?: (topic_id: number, data: FormData) => Promise<void>;\n  // addResource,\n  // removeResource,\n  deleteLesson?: (lesson_id: number) => void;\n  // updateH5P,\n  addNewTopic?: (lesson_id: number, type: API.TopicType) => API.Topic;\n  deleteTopic?: (topic_id: number) => void;\n  onTopicUploaded?: (prevTopicId: number, info: UploadChangeParam) => void;\n  cloneTopic?: (topic_id: number) => void;\n  cloneLesson?: (lesson_id: number) => void;\n  getLessons?: () => void;\n  isAssistant?: boolean;\n};\n\nexport const Context = React.createContext<ProgramContext>({});\n\nconst getRandomId = () => Math.round(Math.random() * 99999);\n\nconst getFlatLessons = (lessons: API.Lesson[]): API.Lesson[] => {\n  return lessons.reduce((acc, curr) => {\n    return [...acc, ...(curr.lessons ? getFlatLessons(curr.lessons) : []), curr];\n  }, [] as API.Lesson[]) as API.Lesson[];\n};\n\nexport const getFlatTopics = (lessons: API.Lesson[]): API.Topic[] => {\n  return lessons.reduce((acc, curr) => {\n    return [...acc, ...(curr.lessons ? getFlatTopics(curr.lessons) : []), ...(curr.topics ?? [])];\n  }, [] as API.Topic[]) as API.Topic[];\n};\n\nconst recursiveAddTopicToLessons = (\n  lessons: API.Lesson[],\n  lessonId: number,\n  topic: API.Topic,\n): API.Lesson[] => {\n  return lessons.map((lesson) => ({\n    ...lesson,\n    lessons: lesson.lessons ? recursiveAddTopicToLessons(lesson.lessons, lessonId, topic) : [],\n    topics: lesson.id === lessonId ? [...(lesson.topics ?? []), topic] : lesson.topics ?? [],\n  }));\n};\n\n// Probably should be removed\n// const recursiveEditTopic = (\n//   lessons: API.Lesson[],\n//   topicId: number,\n//   updatedTopic: API.Topic,\n// ): API.Lesson[] => {\n//   return lessons.map((lesson) => ({\n//     ...lesson,\n//     lessons: recursiveEditTopic(lesson.lessons ?? [], topicId, updatedTopic),\n//     topics: lesson.topics?.map((topic) => (topic.id === topicId ? updatedTopic : topic)) ?? [],\n//   }));\n// };\n\nconst recursiveAddLessonToLessons = (\n  lessons: API.Lesson[],\n  newLesson: API.Lesson,\n  lessonId?: number | null,\n): API.Lesson[] => {\n  if (!lessonId) {\n    return [...lessons, newLesson];\n  }\n  return lessons.map((lesson) => ({\n    ...lesson,\n    lessons: [\n      ...(lesson.lessons ? recursiveAddLessonToLessons(lesson.lessons, newLesson, lessonId) : []),\n      ...(lesson.id === lessonId ? [newLesson] : []),\n    ],\n  }));\n};\n\nconst recursiveEditLesson = (\n  lessons: API.Lesson[],\n  lessonId: number,\n  updatedLesson: API.Lesson,\n): API.Lesson[] => {\n  return lessons.map((lesson) => ({\n    ...(lesson.id === lessonId ? updatedLesson : lesson),\n    lessons: lesson.lessons ? recursiveEditLesson(lesson.lessons, lessonId, updatedLesson) : [],\n  }));\n};\n\nconst appendParentIdToLessons = (lessons: API.Lesson[], lessonParentId?: number): API.Lesson[] => {\n  return lessons.map((lesson) => ({\n    ...lesson,\n    parent_id: lessonParentId,\n    lessons: lesson.lessons ? appendParentIdToLessons(lesson.lessons, lesson.id) : [],\n  }));\n};\n\nconst recursiveDeleteLesson = (lessons: API.Lesson[], lessonId: number): API.Lesson[] => {\n  return lessons\n    .filter((lesson) => lesson.id !== lessonId)\n    .map((lesson) => ({\n      ...lesson,\n      lessons: lesson.lessons ? recursiveDeleteLesson(lesson.lessons, lessonId) : [],\n    }));\n};\n\nconst recursiveDeleteTopic = (lessons: API.Lesson[], topicId: number): API.Lesson[] => {\n  return lessons.map((lesson) => ({\n    ...lesson,\n    lessons: lesson.lessons ? recursiveDeleteTopic(lesson.lessons, topicId) : [],\n    topics: lesson.topics ? lesson.topics.filter((topic) => topic.id !== topicId) : [],\n  }));\n};\n\nconst recursiveTopicUploaded = (\n  prevTopicId: number,\n  info: UploadChangeParam,\n  lesson_id: number | null | undefined,\n  lessons: API.Lesson[],\n): API.Lesson[] => {\n  return lessons?.map((lesson) => {\n    if (lesson.id === lesson_id) {\n      return {\n        ...lesson,\n        topics: lesson.topics?.map((topic) => {\n          if (topic.id === prevTopicId) {\n            return info.file.response.data;\n          }\n          return topic;\n        }),\n      };\n    } else if (lesson.lessons) {\n      return {\n        ...lesson,\n        lessons: recursiveTopicUploaded(prevTopicId, info, lesson_id, lesson.lessons || []),\n      };\n    }\n    return lesson;\n  });\n};\n\nexport const AppContext: React.FC<{ children: React.ReactNode; id: number }> = ({\n  children,\n  id,\n}) => {\n  const [state, setState] = useState<API.CourseProgram>();\n  const intl = useIntl();\n\n  const flatTopics: API.Topic[] = useMemo(() => {\n    return state && state.lessons ? getFlatTopics(state.lessons) : [];\n  }, [state]);\n\n  const flatLessons: API.Lesson[] = useMemo(() => {\n    return state && state.lessons ? getFlatLessons(state.lessons) : [];\n  }, [state]);\n\n  const [h5ps, setH5ps] = useState([]);\n  const [isAssistant, setIsAssistant] = useState<boolean>(false);\n\n  const l = useLocation() as Location & { query: { lesson?: string; topic?: string } };\n\n  const params = useMemo(() => {\n    const urlParams = new URLSearchParams(l.search);\n\n    return {\n      lesson: urlParams.get('lesson'),\n      topic: urlParams.get('topic'),\n    };\n  }, [l]);\n\n  const getAssistantId = useCallback(async () => {\n    const res = await fields({\n      class_type: 'EscolaLms\\\\Courses\\\\Models\\\\Lesson',\n    });\n    if (res.success) {\n      const foundAssistantId = res.data.find(({ name }) => name === 'assistant_id');\n      setIsAssistant(!!foundAssistantId?.id);\n    }\n  }, []);\n\n  useEffect(() => {\n    getAssistantId();\n    setH5ps([]);\n  }, []);\n\n  /*\n  useEffect(() => {\n    API(`h5p`, token)\n      .then((response) => response.json())\n      .then((data) => {\n        setH5ps(data);\n      });\n    //.then(() => addNewLesson());\n  }, []);\n  */\n\n  const getLessons = useCallback(() => {\n    program(id).then((data) => {\n      return (\n        data.success &&\n        setState({\n          ...data.data,\n          lessons: appendParentIdToLessons(data.data.lessons),\n        })\n      );\n    });\n  }, [id]);\n\n  useEffect(() => {\n    getLessons();\n  }, [getLessons]);\n\n  const getLessonIdByTopicId = useCallback(\n    (topic_id: number) => {\n      const lesson = flatLessons.find((lesson_item) =>\n        lesson_item?.topics?.find((topic) => topic.id === topic_id),\n      );\n      return lesson ? lesson.id : null;\n    },\n    [flatLessons],\n  );\n\n  const currentEditMode = useMemo<CurrentEditMode>(() => {\n    if (params.lesson) {\n      return {\n        mode: 'lesson',\n        id: Number(params.lesson),\n        value: flatLessons.find((lesson) => lesson.id === Number(params.lesson)),\n      };\n    }\n    if (params.topic) {\n      return {\n        mode: 'topic',\n        id: Number(params.topic),\n        value: flatTopics.find((t) => t.id === Number(params.topic)),\n      };\n    }\n    return { mode: 'init' };\n  }, [params, state, flatLessons, flatTopics]);\n\n  const addNewLesson = useCallback(\n    (parentId?: number) => {\n      const newLesson: API.Lesson = {\n        course_id: id,\n        topics: [],\n        isNew: true,\n        id: state ? state.lessons.length + 1 : getRandomId(), // New Lesson\n        order: 0,\n        title: intl.formatMessage({ id: 'add_title_here' }),\n        active: true,\n        parent_id: parentId,\n      };\n\n      setState((prevState) => ({\n        ...prevState,\n        lessons: recursiveAddLessonToLessons(prevState?.lessons ?? [], newLesson, parentId),\n        //lessons: [...(prevState ? prevState.lessons : []), newLesson] as API.Lesson[],\n      }));\n\n      return newLesson;\n    },\n    [id, state],\n  );\n\n  const updateLesson = useCallback(\n    (lesson_id: number, formData: FormData) => {\n      const newLesson = flatLessons.find((lesson) => lesson.id === lesson_id);\n      const isNew = newLesson && newLesson.isNew;\n      return (isNew ? apiCreateLesson(formData) : apiUpdateLesson(lesson_id, formData)).then(\n        (data) => {\n          message.success(data.message);\n          getLessons();\n          return (\n            data.success &&\n            setState((prevState) => ({\n              ...prevState,\n              lessons: recursiveEditLesson(prevState?.lessons ?? [], lesson_id, {\n                ...data.data,\n                isNew: false,\n              }),\n              /*\n              lessons: prevState?.lessons\n                ? prevState.lessons.map((lesson) => {\n                    if (lesson.id === lesson_id) {\n                      return {\n                        ...lesson,\n                        ...data.data,\n                        isNew: false,\n                      };\n                    }\n                    return lesson;\n                  })\n                : [data.data],\n                */\n            }))\n          );\n        },\n      );\n    },\n    [state],\n  );\n\n  const deleteLesson = useCallback(\n    (lesson_id: number) => {\n      const lesson = flatLessons.find((lesson_item) => lesson_item.id === lesson_id);\n      if (!lesson) {\n        return;\n      }\n      const { isNew } = lesson;\n\n      if (isNew) {\n        setState((prevState) => ({\n          ...prevState,\n          lessons: recursiveDeleteLesson(prevState?.lessons ?? [], lesson_id),\n        }));\n      } else {\n        apiRemoveLesson(lesson_id).then((data) => {\n          if (data.success) {\n            message.success(data.message);\n            setState((prevState) => ({\n              ...prevState,\n              lessons: recursiveDeleteLesson(prevState?.lessons ?? [], lesson_id),\n            }));\n          }\n        });\n      }\n    },\n    [state],\n  );\n\n  const updateTopic = useCallback(\n    (topic_id: number, formData: FormData) => {\n      const lesson_id = getLessonIdByTopicId(topic_id);\n\n      const lesson = flatLessons.find((lesson_item) => lesson_item.id === lesson_id);\n\n      const topic = lesson && lesson.topics?.find((topic_item) => topic_item.id === topic_id);\n\n      const isNew = topic?.isNew;\n\n      return (isNew ? apiCreateTopic(formData) : apiUpdateTopic(topic_id, formData)).then(\n        (data) => {\n          if (data.success) {\n            message.success(data.message);\n            getLessons();\n\n            history.push(`/courses/list/${id}/program/?topic=${data.data.id}`);\n\n            if (topic?.topicable_type === TopicType.Video) {\n              setTimeout(() => {\n                getLessons();\n              }, 5000);\n            }\n          }\n        },\n      );\n    },\n    [getLessonIdByTopicId, state, getLessons],\n  );\n\n  const deleteTopic = useCallback(\n    (topic_id: number) => {\n      const lesson_id = getLessonIdByTopicId(topic_id);\n\n      const lesson = flatLessons.find((lesson_item) => lesson_item.id === lesson_id);\n      if (!lesson) {\n        return;\n      }\n\n      const topic = flatTopics?.find((topic_item) => topic_item.id === topic_id);\n\n      const isNew = topic?.isNew;\n      if (isNew && !topic.topicable) {\n        setState((prevState) => ({\n          ...prevState,\n          lessons: recursiveDeleteTopic(prevState?.lessons ?? [], topic_id),\n        }));\n      } else {\n        apiRemoveTopic(topic_id).then((data) => {\n          if (data.success) {\n            message.success(data.message);\n            setState((prevState) => ({\n              ...prevState,\n              lessons: recursiveDeleteTopic(prevState?.lessons ?? [], topic_id),\n            }));\n          }\n        });\n\n        // TODO #1018 call API to delete\n        /**\n         return API(`topic/delete/${id}`, token, 'POST')\n        .then((response) => response.json())\n        .then(() =>\n          setState((prevState) => ({\n            ...prevState,\n            lessons: prevState.lessons.map((lesson) => {\n              if (lesson.id == id) {\n                return {\n                  ...lesson,\n                  topics: lesson.topics.filter((topic) => topic.id !== id),\n                };\n              }\n              return lesson;\n            }),\n          })),\n        );\n         */\n      }\n    },\n    [state, getLessonIdByTopicId],\n  );\n\n  /*\n  const addResource = useCallback(\n    (id, formData) => {\n      const isNew = false;\n\n      const id = getLessonByTopicId(id);\n\n      return API(`topic/resource/save/${id}`, token, 'POST', formData)\n        .then((response) => response.json())\n        .then((data) =>\n          setState((prevState) => ({\n            ...prevState,\n            lessons: prevState.lessons.map((lesson) => {\n              if (lesson.id == id) {\n                return {\n                  ...lesson,\n                  topics: lesson.topics.map((topic) => {\n                    if (topic.id == id) {\n                      return {\n                        ...topic,\n                        resources: [...topic.resources, data],\n                      };\n                    }\n                    return topic;\n                  }),\n                };\n              }\n              return lesson;\n            }),\n          })),\n        );\n    },\n    [state],\n  );\n  */\n\n  /*\n  const removeResource = useCallback(\n    (resource_id) => {\n      // resource/delete/{courseFiles}\n\n      const id = getQuizIdByResourseId(resource_id);\n      const id = getLessonByTopicId(id);\n\n      return API(`topic/resource/delete/${resource_id}`, token, 'DELETE', null)\n        .then((response) => response.json())\n        .then(() =>\n          setState((prevState) => ({\n            ...prevState,\n            lessons: prevState.lessons.map((lesson) => {\n              if (lesson.id == id) {\n                return {\n                  ...lesson,\n                  topics: lesson.topics.map((topic) => {\n                    if (topic.id == id) {\n                      return {\n                        ...topic,\n                        resources: topic.resources.filter(\n                          (resource) => resource.id !== resource_id,\n                        ),\n                      };\n                    }\n                    return topic;\n                  }),\n                };\n              }\n              return lesson;\n            }),\n          })),\n        );\n    },\n    [state],\n  );\n  */\n\n  /*\n  const updateH5P = useCallback(\n    (id, h5p_id) => {\n      const id = getLessonByTopicId(id);\n      return API(`topic/h5p/save/${id}`, token, 'POST', getFormData({ media: h5p_id }))\n        .then((response) => response.json())\n        .then((data) =>\n          setState((prevState) => ({\n            ...prevState,\n            lessons: prevState.lessons.map((lesson) => {\n              if (lesson.id == id) {\n                return {\n                  ...lesson,\n                  topics: lesson.topics.map((topic) => {\n                    if (topic.id == id) {\n                      return {\n                        ...topic,\n                        media: data,\n                      };\n                    }\n                    return topic;\n                  }),\n                };\n              }\n              return lesson;\n            }),\n          })),\n        );\n    },\n    [state],\n  );\n  */\n\n  const addNewTopic = useCallback((lesson_id: number, type: API.TopicType) => {\n    const newTopic: API.Topic = {\n      lesson_id,\n      isNew: true,\n      id: getRandomId(),\n      title: intl.formatMessage({ id: 'add_title_here' }),\n      active: true,\n      topicable_type: type,\n    };\n\n    setState((prevState) => ({\n      ...prevState,\n      lessons: recursiveAddTopicToLessons(prevState?.lessons ?? [], lesson_id, newTopic),\n    }));\n    return newTopic;\n  }, []);\n\n  const onTopicUploaded = (prevTopicId: number, info: UploadChangeParam) => {\n    const lesson_id = getLessonIdByTopicId(prevTopicId);\n    setState((prevState) => ({\n      ...prevState,\n      lessons: prevState\n        ? recursiveTopicUploaded(prevTopicId, info, lesson_id, prevState.lessons || [])\n        : [],\n      // Probably should be removed\n      // lessons: recursiveEditTopic(prevState?.lessons ?? [], prevTopicId, info.file.response.data),\n    }));\n    // Update topic id in params after receiving from server\n    history.push(`/courses/list/${id}/program/?topic=${info.file.response.data.id}`);\n  };\n\n  const cloneTopic = useCallback(\n    (topic_id: number) => {\n      return apiCloneTopic(topic_id).then((response) => {\n        if (response.success) {\n          message.success(response.message);\n          const lesson_id = getLessonIdByTopicId(topic_id);\n\n          setState((prevState) => ({\n            ...prevState,\n            lessons: prevState\n              ? prevState.lessons?.map((lesson) => {\n                  if (lesson.id === lesson_id) {\n                    const topics = lesson.topics || [];\n                    return {\n                      ...lesson,\n                      topics: [...topics, response.data] as API.Topic[],\n                    };\n                  }\n                  return lesson;\n                })\n              : [],\n          }));\n        }\n      });\n    },\n    [state, getLessonIdByTopicId],\n  );\n\n  const cloneLesson = useCallback((lesson_id: number) => {\n    return apiCloneLesson(lesson_id).then((response) => {\n      if (response.success) {\n        message.success(response.message);\n\n        setState((prevState) => ({\n          ...prevState,\n          lessons: prevState ? [...prevState.lessons, response.data] : [],\n        }));\n      }\n    });\n  }, []);\n\n  const value = {\n    state,\n    h5ps,\n    // token: credentials.token,\n    id,\n    addNewLesson,\n    updateLesson,\n    updateTopic,\n    // addResource,\n    // removeResource,\n    deleteLesson,\n    // updateH5P,\n    addNewTopic,\n    deleteTopic,\n    onTopicUploaded,\n    cloneTopic,\n    cloneLesson,\n    currentEditMode,\n    getLessons,\n    isAssistant,\n  };\n\n  return <Context.Provider value={value}>{children}</Context.Provider>;\n};\n","import React from 'react';\ndeclare const REACT_APP_API_URL: string;\n\nconst ScormPreview: React.FC<{ uuid: string }> = ({ uuid }) => {\n  return (\n    <iframe\n      style={{ border: 'none', background: 'none', width: '100%', height: '100%' }}\n      className=\"scorm-preview-player\"\n      src={`${window.REACT_APP_API_URL || REACT_APP_API_URL}/api/scorm/play/${uuid}`}\n    />\n  );\n};\n\nexport default ScormPreview;\n","import FilesBrowser from '@/components/FilesBrowser';\nimport SecureUpload from '@/components/SecureUpload';\nimport { FolderOpenOutlined } from '@ant-design/icons';\nimport type { AxiosRequestConfig } from '@umijs/max';\nimport { Button, Modal, message } from 'antd';\nimport type { UploadChangeParam } from 'antd/lib/upload';\nimport type { PropsWithChildren } from 'react';\nimport { useCallback, useState } from 'react';\nimport { FormattedMessage, request } from 'umi';\nimport type { SecureUploadType } from './index';\n\ntype PostResponse = API.DefaultResponse<EscolaLms.ModelFields.Models.Metadata>;\n\nconst post = async (url: string, body: Record<string, string>, options?: AxiosRequestConfig) => {\n  return request<API.DefaultResponse<EscolaLms.ModelFields.Models.Metadata>>(url, {\n    method: 'POST',\n    data: body,\n    ...(options || {}),\n  });\n};\n\nconst fixDirName = (inputDir: string) => {\n  let dir = inputDir.split('//').join('/');\n  dir = dir[dir.length - 1] === '/' ? dir : `${dir}/`;\n  dir = dir[0] === '/' ? dir.slice(1) : dir;\n  return dir;\n};\n\nconst fixFileName = (file: API.File[] | API.File) => {\n  if (Array.isArray(file) && file[0]) {\n    return file[0].name;\n  }\n  return (file as API.File).name;\n};\n\nconst getPath = (dir: string, file: API.File[] | API.File) => {\n  const fixedDir = fixDirName(dir);\n  const fixedName = fixFileName(file);\n  if (fixedName.includes(fixedDir)) {\n    return fixedName;\n  }\n  return `${fixedDir}${fixedName}`;\n};\n\nconst getUploadChangeSuccessParam = (data: any): UploadChangeParam => ({\n  file: {\n    status: 'done',\n    uid: 'fileFromBrowser',\n    name: 'fileFromBrowser',\n    response: data,\n  },\n  fileList: [],\n});\n\nfunction SecureUploadBrowser<Type = API.File>({\n  folder,\n  onResponse,\n  onUpload,\n  ...props\n}: PropsWithChildren<\n  SecureUploadType<Type> & { folder: string; onResponse?: (response: PostResponse) => void }\n>) {\n  const [showBrowser, setShowBrowser] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n  const { url, name, onChange, data } = props;\n\n  const closeModal = useCallback(() => {\n    setShowBrowser(false);\n  }, []);\n\n  const handleFile = useCallback(async (file: API.File, dir: string | undefined) => {\n    if (!dir) return;\n\n    setLoading(true);\n\n    try {\n      const response: PostResponse = await post(url, {\n        ...data,\n        [name]: getPath(dir, file),\n      });\n\n      if (onResponse) {\n        onResponse(response);\n      }\n\n      if (response.success) {\n        closeModal();\n        if (onChange) {\n          onChange(getUploadChangeSuccessParam(response));\n        }\n      } else {\n        message.error(response.message);\n      }\n    } catch (err: any) {\n      setLoading(false);\n      message.error('data' in err ? err.data.message : 'Unknown Error');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  return (\n    <>\n      <Button onClick={() => setShowBrowser(true)} icon={<FolderOpenOutlined />}>\n        {' '}\n        <FormattedMessage id=\"browse\" />\n      </Button>\n\n      {showBrowser && (\n        <Modal\n          open={showBrowser}\n          onCancel={closeModal}\n          onOk={closeModal}\n          width=\"60vw\"\n          closeIcon={false}\n        >\n          <FilesBrowser\n            forceLoading={loading}\n            hideDeleteBtn={true}\n            defaultDirectory={folder}\n            onFile={(file, dir) => handleFile(file, dir)}\n          />\n        </Modal>\n      )}\n      <div style={{ marginTop: '10px' }}>\n        <SecureUpload onUpload={onUpload} {...props} />\n      </div>\n    </>\n  );\n}\n\nexport default SecureUploadBrowser;\n","import { ProFormUploadButton } from '@ant-design/pro-form';\nimport type { FormProps } from 'antd';\nimport { Form } from 'antd';\nimport type { UploadChangeParam } from 'antd/lib/upload';\nimport type { UploadFile } from 'antd/lib/upload/interface';\nimport ConditionalWrap from 'conditional-wrap';\nimport type { PropsWithChildren } from 'react';\nimport { useState } from 'react';\nimport { FormattedMessage, useIntl } from 'umi';\ndeclare const REACT_APP_API_URL: string;\n\nexport type SecureUploadType<T = API.File> = {\n  url: string;\n  name: string;\n  extra?: string;\n  onChange?: (info: UploadChangeParam<UploadFile<API.DefaultResponse<T>>>) => void;\n  onUpload?: (response: API.DefaultResponse<T>) => void;\n  on?: (info: UploadChangeParam<UploadFile<API.DefaultResponse<T>>>) => void;\n  accept?: string;\n  data?: Record<string, any>;\n  wrapInForm?: boolean;\n  title?: string;\n  formProps?: FormProps;\n  maxFiles?: number;\n  clearListAfterUpload?: boolean;\n  hideLabel?: boolean;\n  disabled?: boolean;\n  showUploadList?: boolean;\n};\n\nfunction SecureUpload<Type = API.File>({\n  onChange,\n  onUpload,\n  url,\n  name,\n  extra,\n  accept,\n  data,\n  wrapInForm = true,\n  title,\n  formProps,\n  maxFiles,\n  clearListAfterUpload,\n  hideLabel,\n  disabled,\n  showUploadList,\n}: PropsWithChildren<SecureUploadType<Type>>) {\n  const [infoState, setInfoState] = useState<UploadChangeParam<UploadFile<any>>>();\n  const intl = useIntl();\n\n  if (data && data[name]) {\n    // eslint-disable-next-line no-param-reassign\n    delete data[name];\n  }\n\n  return (\n    <ConditionalWrap\n      condition={wrapInForm}\n      wrap={(children: JSX.Element) => <Form {...formProps}>{children}</Form>}\n    >\n      <ProFormUploadButton\n        title={\n          title\n            ? title\n            : ` ${intl.formatMessage({\n                id: 'upload_click_here',\n              })}`\n        }\n        placeholder={intl.formatMessage({\n          id: 'upload_click_here',\n        })}\n        label={!hideLabel && <FormattedMessage id=\"upload\" />}\n        max={maxFiles ?? 2}\n        fieldProps={{\n          data,\n          accept,\n          name,\n          showUploadList,\n          headers: { Authorization: `Bearer ${localStorage.getItem('TOKEN')}` },\n          onChange: (info) => {\n            setInfoState(info);\n            if (onChange) {\n              onChange(info);\n            }\n            if (info.file.status === 'done') {\n              if (onUpload) {\n                onUpload(info.file.response);\n              }\n              if (clearListAfterUpload) {\n                setInfoState(undefined);\n              }\n            }\n          },\n        }}\n        action={`${window.REACT_APP_API_URL || REACT_APP_API_URL}${url}`}\n        extra={extra}\n        fileList={infoState?.fileList}\n        disabled={disabled}\n      />\n    </ConditionalWrap>\n  );\n}\n\nexport default SecureUpload;\n","import {\n  assignQuestionnaire,\n  questionnaire,\n  unassignQuestionnaire,\n} from '@/services/escola-lms/questionnaire';\nimport type { ActionType, ProColumns } from '@ant-design/pro-table';\nimport ProTable from '@ant-design/pro-table';\nimport { Switch, message } from 'antd';\nimport React, { useCallback, useRef } from 'react';\nimport { FormattedMessage, useIntl } from 'umi';\nimport TypeButtonDrawer from '../TypeButtonDrawer';\n\nconst ModelNames = {\n  1: 'course',\n};\n\nexport enum ModelTypes {\n  COURSE = 1,\n}\n\nconst TableColumns: ProColumns<API.Questionnaire>[] = [\n  {\n    title: <FormattedMessage id=\"ID\" defaultMessage=\"ID\" />,\n    dataIndex: 'id',\n    hideInSearch: true,\n    sorter: true,\n    width: '80px',\n  },\n  {\n    title: <FormattedMessage id=\"title\" defaultMessage=\"title\" />,\n    dataIndex: 'title',\n    hideInSearch: true,\n    sorter: true,\n    width: '80%',\n    render: (_, record) => (\n      <TypeButtonDrawer type={'Questionnaire'} type_id={Number(record.id)} text={record.title} />\n    ),\n  },\n];\n\nconst AssignQuestionnary: React.FC<{ modelType: ModelTypes; id: number }> = ({ modelType, id }) => {\n  const actionRef = useRef<ActionType>();\n\n  const intl = useIntl();\n\n  const handleChange = useCallback(\n    async (qId: number, value: boolean) => {\n      const hide = message.loading(\n        intl.formatMessage({\n          id: 'loading',\n        }),\n      );\n\n      try {\n        const request = value\n          ? await assignQuestionnaire(ModelNames[modelType], id, qId)\n          : await unassignQuestionnaire(ModelNames[modelType], id, qId);\n        if (request.success) {\n          hide();\n          message.success(request.message);\n          actionRef.current?.reload();\n        }\n        return;\n      } catch (error) {\n        hide();\n        message.error(<FormattedMessage id=\"error\" defaultMessage=\"error\" />);\n\n        return false;\n      }\n    },\n    [modelType, id],\n  );\n\n  return (\n    <ProTable<API.Questionnaire>\n      headerTitle={intl.formatMessage({\n        id: 'questionnaires',\n        defaultMessage: 'questionnaires',\n      })}\n      actionRef={actionRef}\n      rowKey=\"id\"\n      search={false}\n      request={({}, sort) => {\n        const sortArr = sort && Object.entries(sort)[0];\n        return questionnaire({\n          order_by: sortArr && sortArr[0],\n          order: sortArr ? (sortArr[1] === 'ascend' ? 'ASC' : 'DESC') : undefined,\n        }).then((response) => {\n          if (response.success) {\n            return {\n              data: response.data,\n              success: true,\n            };\n          }\n          return [];\n        });\n      }}\n      columns={[\n        ...TableColumns,\n        {\n          title: <FormattedMessage id=\"assign\" defaultMessage=\"assign\" />,\n          dataIndex: 'option',\n          valueType: 'option',\n\n          render: (_, record) => [\n            <Switch\n              key=\"assign\"\n              defaultChecked={\n                record.models && record.models?.filter((m) => m.model_id === id).length > 0\n              }\n              onChange={(value) => handleChange(Number(record.id), value)}\n            />,\n          ],\n        },\n      ]}\n    />\n  );\n};\n\nexport default AssignQuestionnary;\n","import { ExportOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\nimport React, { useCallback, useState } from 'react';\nimport { FormattedMessage } from 'umi';\n\nimport { exportStatForTopic } from '@/services/escola-lms/reports';\n\ninterface Props {\n  topic_id: number | undefined;\n  stat: API.TopicStatsKey;\n}\n\nexport const ExportTopicStatsButton: React.FC<Props> = ({ topic_id, stat }) => {\n  const [loading, setLoading] = useState(false);\n\n  const onClickFactory = useCallback(\n    (topicId?: number) => async () => {\n      if (!topicId) return;\n\n      setLoading(true);\n      try {\n        const response = await exportStatForTopic(topicId, stat);\n\n        if (response instanceof Blob) {\n          const downloadLink = document.createElement('a');\n          downloadLink.href = window.URL.createObjectURL(response);\n          downloadLink.download = `${stat}_${topicId}.xlsx`;\n          document.body.appendChild(downloadLink);\n          downloadLink.click();\n          document.body.removeChild(downloadLink);\n        }\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    },\n    [stat],\n  );\n\n  return (\n    <Button\n      type=\"primary\"\n      loading={loading}\n      disabled={topic_id === undefined}\n      onClick={onClickFactory(topic_id)}\n    >\n      <ExportOutlined /> <FormattedMessage id=\"export\" />\n    </Button>\n  );\n};\n","import ProTable, { type ProColumns } from '@ant-design/pro-table';\nimport { format } from 'date-fns';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { FormattedMessage } from 'umi';\n\nimport TypeButtonDrawer from '@/components/TypeButtonDrawer';\nimport { DATETIME_FORMAT } from '@/consts/dates';\nimport { getTopicStats } from '@/services/escola-lms/course';\nimport { TopicStatsKey } from '@/services/escola-lms/enums';\nimport { ExportTopicStatsButton } from './ExportTopicStatsButton';\n\ninterface TableParams {\n  topic_id?: number;\n}\n\ntype TableColumn = ProColumns<API.GiftQuizTopicStat>;\n\nconst staticColumns: TableColumn[] = [\n  {\n    dataIndex: 'attempt',\n    title: <FormattedMessage id=\"TopicStatistics.giftQuiz.attempt\" />,\n    hideInSearch: true,\n    fixed: 'left',\n    width: 100,\n  },\n  {\n    dataIndex: 'email',\n    title: <FormattedMessage id=\"email\" />,\n    hideInSearch: true,\n    fixed: 'left',\n  },\n  {\n    dataIndex: 'user_id',\n    title: <FormattedMessage id=\"user\" />,\n    hideInSearch: true,\n    render: (_n, record) => <TypeButtonDrawer type=\"App\\Models\\User\" type_id={record.user_id} />,\n  },\n  {\n    dataIndex: 'attempt_date',\n    title: <FormattedMessage id=\"TopicStatistics.giftQuiz.attemptDate\" />,\n    hideInSearch: true,\n    render: (_n, record) =>\n      record.attempt_date ? format(new Date(record.attempt_date), DATETIME_FORMAT) : '-',\n  },\n  {\n    dataIndex: 'attempt_time',\n    title: <FormattedMessage id=\"TopicStatistics.giftQuiz.attemptDuration\" />,\n    hideInSearch: true,\n    render: (_n, record) => (record.attempt_time ? `${record.attempt_time}s` : '-'),\n  },\n  {\n    dataIndex: 'summary',\n    title: <FormattedMessage id=\"TopicStatistics.giftQuiz.result\" />,\n    hideInSearch: true,\n    render: (_n, record) =>\n      typeof record.summary === 'number' ? `${(record.summary * 100).toFixed(2)}%` : '-',\n  },\n];\n\nconst getQuestionColumns = (giftQuizTopicStat: undefined | API.GiftQuizTopicStat): TableColumn[] =>\n  giftQuizTopicStat !== undefined\n    ? Object.keys(giftQuizTopicStat)\n        .filter((k) => k.includes('question'))\n        .map<TableColumn>((key, i) => ({\n          title: <FormattedMessage id=\"TopicStatistics.giftQuiz.question\" values={{ i: i + 1 }} />,\n          dataIndex: key,\n          hideInSearch: true,\n        }))\n    : [];\n\ninterface Props {\n  quizTopics: API.TopicQuiz[];\n}\n\nexport const GiftQuizStatistics: React.FC<Props> = ({ quizTopics }) => {\n  const [selectedTopicId, setSelectedTopicId] = useState(quizTopics?.[0]?.id);\n  const [dynamicColumns, setDynamicColumns] = useState<TableColumn[]>([]);\n\n  const topicOptions = useMemo(\n    () =>\n      quizTopics.reduce<{ value: number; label: string }[]>(\n        (acc, { id, title }) =>\n          title !== undefined && id !== undefined ? [...acc, { value: id, label: title }] : acc,\n        [],\n      ),\n    [quizTopics],\n  );\n\n  const columns: TableColumn[] = useMemo(\n    () => [\n      {\n        dataIndex: 'topic_id',\n        title: <FormattedMessage id=\"TopicStatistics.giftQuiz.topic\" />,\n        hideInTable: true,\n        valueType: 'select',\n        fieldProps: {\n          options: topicOptions,\n          defaultValue: topicOptions?.[0]?.value,\n          allowClear: false,\n        },\n      },\n      ...staticColumns,\n      ...dynamicColumns,\n    ],\n    [topicOptions, dynamicColumns],\n  );\n\n  const handleRequest = useCallback(async ({ topic_id = selectedTopicId }: TableParams) => {\n    if (!topic_id) return { success: false, data: [], total: 0 };\n    const response = await getTopicStats(topic_id, TopicStatsKey.QuizSummary);\n\n    if (\n      !response.success ||\n      !response.data?.[TopicStatsKey.QuizSummary as keyof typeof response.data]\n    ) {\n      return { success: false, data: [], total: 0 };\n    }\n\n    const [responseColumns, ...data] = response.data[\n      TopicStatsKey.QuizSummary as keyof typeof response.data\n    ] as API.GiftQuizTopicStat[];\n    setDynamicColumns(getQuestionColumns(responseColumns));\n\n    return {\n      success: true,\n      data,\n      total: data.length,\n    };\n  }, []);\n\n  return (\n    <ProTable<API.GiftQuizTopicStat, TableParams>\n      headerTitle={<FormattedMessage id=\"TopicStatistics.giftQuiz.title\" />}\n      onSubmit={({ topic_id }) => setSelectedTopicId(topic_id)}\n      onReset={() => setSelectedTopicId(quizTopics?.[0]?.id)}\n      toolBarRender={() => [\n        <ExportTopicStatsButton\n          key=\"export\"\n          stat={TopicStatsKey.QuizSummary}\n          topic_id={selectedTopicId}\n        />,\n      ]}\n      className=\"table-standalone\"\n      request={handleRequest}\n      columns={columns}\n      search={{ layout: 'vertical' }}\n      scroll={{ x: 1500 }}\n    />\n  );\n};\n","import React, { useMemo } from 'react';\n\nimport { TopicType } from '@/services/escola-lms/enums';\nimport { GiftQuizStatistics } from './GiftQuizStatistics';\n\ninterface TopicsGroupedByType {\n  [TopicType.RichText]: API.TopicRichText[];\n  [TopicType.OEmbed]: API.TopicOEmbed[];\n  [TopicType.Audio]: API.TopicAudio[];\n  [TopicType.Video]: API.TopicVideo[];\n  [TopicType.H5P]: API.TopicH5P[];\n  [TopicType.Image]: API.TopicImage[];\n  [TopicType.PDF]: API.TopicPDF[];\n  [TopicType.SCORM]: API.TopicScorm[];\n  [TopicType.Project]: API.TopicProject[];\n  [TopicType.GiftQuiz]: API.TopicQuiz[];\n  [TopicType.Unselected]: API.TopicUnselected[];\n}\n\ninterface Props {\n  flatTopics: API.Topic[];\n}\n\nexport const CourseTopicsStatistics: React.FC<Props> = ({ flatTopics }) => {\n  const topicsGroupedByType = useMemo(\n    () =>\n      flatTopics.reduce<TopicsGroupedByType>(\n        (acc, t) => ({ ...acc, [t.topicable_type]: [...acc[t.topicable_type as TopicType], t] }),\n        {\n          [TopicType.RichText]: [],\n          [TopicType.OEmbed]: [],\n          [TopicType.Audio]: [],\n          [TopicType.Video]: [],\n          [TopicType.H5P]: [],\n          [TopicType.Image]: [],\n          [TopicType.PDF]: [],\n          [TopicType.SCORM]: [],\n          [TopicType.Project]: [],\n          [TopicType.GiftQuiz]: [],\n          [TopicType.Unselected]: [],\n        },\n      ),\n    [flatTopics],\n  );\n\n  return (\n    <>\n      {topicsGroupedByType[TopicType.GiftQuiz].length > 0 && (\n        <GiftQuizStatistics quizTopics={topicsGroupedByType[TopicType.GiftQuiz]} />\n      )}\n      {/* TODO #1008 add other topics statistics when they are implemented on backend */}\n    </>\n  );\n};\n","import { Column } from '@ant-design/plots';\nimport ProCard from '@ant-design/pro-card';\nimport React, { useCallback } from 'react';\n\nconst Chart: React.FC<{\n  config: any;\n  value: any[];\n  title: JSX.Element | string;\n  children?: JSX.Element;\n  valueLabel?: string;\n}> = ({ config, value, title, children, valueLabel }) => {\n  const onTitle = useCallback(\n    (_title: string, datum: any) => {\n      const topic = value.find((v) => v.type === datum.type)?.topic;\n      if (topic as API.Topic) {\n        return `${topic.topicable_type.split('\\\\').pop()}:${topic.title}`;\n      }\n      return _title;\n    },\n    [value],\n  );\n\n  const onTooltip = useCallback(\n    (datum: any) => {\n      return {\n        name: valueLabel || datum.type,\n        value: datum.value,\n      };\n    },\n    [valueLabel],\n  );\n\n  return (\n    <ProCard title={title} headerBordered>\n      <div style={{ overflow: 'auto', minHeight: '400px' }}>\n        <Column\n          {...config}\n          tooltip={{\n            formatter: onTooltip,\n            title: onTitle,\n          }}\n          data={value}\n        />\n        {children && children}\n      </div>\n    </ProCard>\n  );\n};\n\nexport default Chart;\n","import { CourseTopicsStatistics } from '@/components/CourseTopicsStatistics';\nimport { getFlatTopics } from '@/components/ProgramForm/Context';\nimport { program as fetchProgram, getCourseStats } from '@/services/escola-lms/course';\nimport ProCard from '@ant-design/pro-card';\nimport { Alert, Spin, Typography } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { FormattedMessage, useIntl } from 'umi';\nimport Chart from './chart';\nimport { UserCourseAttempts, UserCourseFinish, UserProgress } from './userProgress';\n\ntype State =\n  | {\n      mode: 'init';\n    }\n  | {\n      mode: 'loading';\n    }\n  | {\n      mode: 'error';\n      error: string;\n    }\n  | {\n      mode: 'loaded';\n      // TODO #1009 add type\n      value: any;\n    };\n\nconst config = {\n  xField: 'type',\n  yField: 'value',\n  seriesField: 'type',\n  isRange: false,\n  title: null,\n  xAxis: {\n    label: {\n      autoHide: true,\n      autoRotate: false,\n    },\n  },\n  interactions: [\n    {\n      type: 'active-region',\n      enable: false,\n    },\n  ],\n\n  columnBackground: { style: { fill: 'rgba(0,0,0,0.1)' } },\n};\n\ninterface courseStats {\n  type: string;\n  value:\n    | API.CourseAttempts[]\n    | Record<string, API.CourseStatsAverageTimePerTopic>\n    | number\n    | API.FinishedCourseUserStats[]\n    | API.FinishedTopicsUserStats[];\n}\n\nconst CourseStatistics: React.FC<{ courseId: string }> = ({ courseId }) => {\n  const [state, setState] = useState<State>({ mode: 'init' });\n  const [topics, setTopics] = useState<API.Topic[]>([]);\n  const { Text } = Typography;\n  const intl = useIntl();\n\n  useEffect(() => {\n    setState({ mode: 'loading' });\n\n    Promise.all([fetchProgram(Number(courseId)), getCourseStats(Number(courseId))]).then(\n      ([programResponse, statsResponse]) => {\n        if (programResponse.success && statsResponse.success) {\n          setTopics(getFlatTopics(programResponse.data.lessons));\n          setState({\n            mode: 'loaded',\n            value: Object.entries(statsResponse.data).map(([key, value]) => {\n              const type = intl.formatMessage({\n                id: key.split('\\\\').pop(),\n              });\n              return {\n                type,\n                value,\n              };\n            }),\n          });\n        }\n      },\n    );\n  }, []);\n\n  return (\n    <ProCard split=\"vertical\">\n      {state.mode === 'loading' && <Spin />}\n      {state.mode === 'loaded' && (\n        <>\n          <UserProgress\n            course_id={Number(courseId)}\n            topics={topics}\n            stats={\n              state.value.find((element: courseStats) => element.type.includes('FinishedTopics'))\n                ?.value as API.FinishedTopicsUserStats[]\n            }\n          />\n\n          <UserCourseFinish\n            stats={\n              state.value.find((element: courseStats) => element.type.includes('FinishedCourse'))\n                ?.value as API.FinishedCourseUserStats[]\n            }\n            attempts={\n              state.value.find((element: courseStats) => element.type.includes('AttendanceList'))\n                ?.value as API.CourseAttempts[]\n            }\n          />\n\n          <UserCourseAttempts\n            stats={\n              state.value.find((element: courseStats) => element.type.includes('AttendanceList'))\n                ?.value as API.CourseAttempts[]\n            }\n          />\n\n          <Text>\n            <FormattedMessage id=\"MoneyEarned\" />\n            {`: ${\n              state.value.find(\n                (element: courseStats) =>\n                  element.type.split('\\\\').pop() === intl.formatMessage({ id: 'MoneyEarned' }),\n              ).value\n            }`}\n          </Text>\n\n          <ProCard colSpan={12} layout=\"center\">\n            <Chart\n              config={config}\n              title={<FormattedMessage id=\"People\" />}\n              value={state.value.filter((element: courseStats) => {\n                const type = element.type.split('\\\\').pop();\n                return (\n                  type === intl.formatMessage({ id: 'PeopleBought' }) ||\n                  type === intl.formatMessage({ id: 'PeopleFinished' }) ||\n                  type === intl.formatMessage({ id: 'PeopleStarted' })\n                );\n              })}\n            />\n          </ProCard>\n          <ProCard colSpan={12} layout=\"center\">\n            <Chart\n              config={config}\n              title={<FormattedMessage id=\"AverageTimePerTopic\" />}\n              valueLabel={intl.formatMessage({ id: 'seconds', defaultMessage: 'seconds' })}\n              value={Object.entries(\n                state.value.find(\n                  (element: courseStats) =>\n                    element.type.split('\\\\').pop() ===\n                    intl.formatMessage({ id: 'AverageTimePerTopic' }),\n                ).value,\n              ).map((element) => ({\n                type: element[0],\n                value: (element[1] as API.CourseStatsAverageTimePerTopic)?.average_time,\n                topic: topics.find((topic) => topic.id === Number(element[0])),\n              }))}\n            >\n              <Text>\n                <FormattedMessage id=\"AverageTime\" />\n                {`:\n                    ${\n                      state.value.find(\n                        (element: courseStats) =>\n                          element.type.split('\\\\').pop() ===\n                          intl.formatMessage({ id: 'AverageTime' }),\n                      ).value\n                    }\n                  `}\n              </Text>\n            </Chart>\n          </ProCard>\n          <ProCard>\n            <CourseTopicsStatistics flatTopics={topics} />\n          </ProCard>\n        </>\n      )}\n      {state.mode === 'error' && <Alert message={state.error} type=\"error\" />}\n    </ProCard>\n  );\n};\n\nexport default CourseStatistics;\n","import ProForm from '@ant-design/pro-form';\nimport { Button } from 'antd';\nimport type { UploadChangeParam } from 'antd/lib/upload';\nimport React from 'react';\nimport ReactPlayer from 'react-player';\nimport { FormattedMessage } from 'umi';\nimport SecureUploadBrowser from '../SecureUpload/browser';\n\nexport const ProFormVideoUpload: React.FC<{\n  folder: string;\n  action: string;\n  form_name: string;\n  src_name: string;\n  getUploadedSrcField: (info: UploadChangeParam) => string;\n  setPath: (state: object) => void;\n  hideLabel?: boolean;\n}> = ({ action, form_name, src_name, getUploadedSrcField, setPath, folder, hideLabel }) => {\n  return (\n    <ProForm.Group title={<FormattedMessage id=\"video\" />}>\n      <ProForm.Item shouldUpdate>\n        {(form) => {\n          return (\n            <React.Fragment>\n              <SecureUploadBrowser\n                folder={folder}\n                accept=\"video/*\"\n                name={form_name}\n                url={action}\n                onChange={(info) => {\n                  if (info.file.status === 'done') {\n                    form.setFieldsValue({ [src_name]: getUploadedSrcField(info) });\n                    if (info.file.response?.success) {\n                      const data = info.file.response.data;\n                      setPath({\n                        [`${form_name}_url`]: data[`${form_name}_url` as keyof typeof data],\n                        [`${form_name}_path`]: data[`${form_name}_path` as keyof typeof data],\n                      });\n                    }\n                  }\n                }}\n                hideLabel={hideLabel}\n              />\n              <Button\n                danger\n                onClick={() => [\n                  setPath({\n                    [`${form_name}_url`]: '',\n                    [`${form_name}_path`]: '',\n                  }),\n                  form.setFieldsValue({ [src_name]: '' }),\n                ]}\n              >\n                <FormattedMessage id=\"delete\" />\n              </Button>\n            </React.Fragment>\n          );\n        }}\n      </ProForm.Item>\n      <ProForm.Item shouldUpdate>\n        {(form) => {\n          const formSrcName = form.getFieldValue(src_name);\n          if (!!formSrcName) {\n            return <ReactPlayer width={'auto'} height={200} url={formSrcName} controls />;\n          }\n          return <></>;\n        }}\n      </ProForm.Item>\n    </ProForm.Group>\n  );\n};\n\nexport default ProFormVideoUpload;\n","export const getFormData = (data) => {\n  const formData = new FormData();\n\n  for (let key in data) {\n    if (data[key] != undefined || data[key] != null) {\n      if (Array.isArray(data[key])) {\n        if (!data[key].length) {\n          formData.append(`${key}[]`, '[]');\n        }\n        for (let value of data[key]) {\n          formData.append(`${key}[]`, value);\n        }\n        continue;\n      }\n\n      formData.set(key, data[key]);\n    }\n  }\n  return formData;\n};\n","import { Context } from '@/components/ProgramForm/Context';\nimport { ProFormTreeSelect } from '@ant-design/pro-form';\nimport type { DefaultOptionType } from 'antd/es/select';\nimport React, { useContext, useMemo } from 'react';\nimport { FormattedMessage, useIntl } from 'umi';\n\ntype TreeData = Omit<DefaultOptionType, 'label'>;\n\nconst traverse = (\n  lessons: API.Lesson[],\n  disabledLessonId?: number,\n  disableNested?: boolean,\n): TreeData[] =>\n  lessons.reduce<TreeData[]>((acc, lesson) => {\n    const disabled = disabledLessonId === lesson.id;\n\n    return [\n      ...acc,\n      {\n        value: lesson.id,\n        title: lesson.title,\n        label: lesson.title,\n        disabled: disableNested || disabled,\n        children: traverse(lesson?.lessons ?? [], disabledLessonId, disabled || disableNested),\n      },\n    ];\n  }, []);\n\ninterface Props {\n  name: string;\n  currentLessonId?: number;\n}\n\nexport const ParentLesson: React.FC<Props> = ({ name, currentLessonId }) => {\n  const intl = useIntl();\n  const { state } = useContext(Context);\n\n  const treeData: TreeData[] = useMemo(\n    () => [\n      {\n        // This have to be empty string\n        value: '',\n        title: intl.formatMessage({\n          id: 'root',\n          defaultMessage: 'Root',\n        }),\n        label: intl.formatMessage({\n          id: 'root',\n          defaultMessage: 'Root',\n        }),\n        children: traverse(state?.lessons ?? [], currentLessonId),\n      },\n    ],\n    [state, currentLessonId],\n  );\n\n  return (\n    <div className=\"tree-select\">\n      <ProFormTreeSelect\n        name={name}\n        label={<FormattedMessage id=\"parent_lesson\" />}\n        fieldProps={{ treeData, treeDefaultExpandAll: true, treeLine: true }}\n      />\n    </div>\n  );\n};\n","import ProCard from '@ant-design/pro-card';\nimport ProForm, { ProFormDatePicker, ProFormSwitch, ProFormText } from '@ant-design/pro-form';\nimport { Affix, Button, Col, Divider, Popconfirm, Row, Space } from 'antd';\nimport { isAfter, isBefore } from 'date-fns';\nimport React, { useContext } from 'react';\nimport { FormattedMessage, useIntl } from 'umi';\n\nimport { Context } from '@/components/ProgramForm/Context';\nimport WysiwygMarkdown from '@/components/WysiwygMarkdown';\nimport { ParentLesson } from '../ParentLesson';\nimport type { StateLesson } from './types';\n\nexport const LessonForm: React.FC<{\n  lesson: StateLesson;\n  onFinish: (values: Record<string, string>) => Promise<void>;\n  onValuesChange: (changedValues: any, values: Record<string, string>) => void;\n  onDelete: () => Promise<void>;\n  onClone: () => void;\n  initialValues: any;\n  loading: boolean;\n}> = ({ onFinish, onValuesChange, onDelete, onClone, initialValues, lesson, loading = false }) => {\n  const { isAssistant } = useContext(Context);\n  const [form] = ProForm.useForm();\n  const activeFrom = ProForm.useWatch('active_from', form);\n  const activeTo = ProForm.useWatch('active_to', form);\n\n  const intl = useIntl();\n  return (\n    <ProForm\n      form={form}\n      submitter={{\n        // Fully customize the entire area\n        render: (props) => {\n          return (\n            <Row gutter={16}>\n              <Col span={24 - 8}>\n                <Row justify=\"center\" className={'program__cta-footer'}>\n                  <Affix offsetBottom={4}>\n                    <Space size=\"large\">\n                      <Button\n                        loading={loading}\n                        type=\"primary\"\n                        key=\"submit\"\n                        onClick={() => props.form?.submit()}\n                        {...props.submitButtonProps}\n                      >\n                        {lesson.isNew ? (\n                          <FormattedMessage id=\"create\" />\n                        ) : (\n                          <FormattedMessage id=\"save\" />\n                        )}\n                      </Button>\n                      {!lesson.isNew && (\n                        <Button onClick={onClone} loading={loading}>\n                          <FormattedMessage id=\"clone\" />\n                        </Button>\n                      )}\n                      <Popconfirm\n                        key=\"delete\"\n                        onConfirm={onDelete}\n                        title={<FormattedMessage id=\"deleteQuestion\" />}\n                        okText={<FormattedMessage id=\"yes\" />}\n                        cancelText={<FormattedMessage id=\"no\" />}\n                      >\n                        <Button\n                          type=\"primary\"\n                          danger\n                          {...props.submitButtonProps}\n                          loading={loading}\n                        >\n                          <FormattedMessage id=\"delete\" />\n                        </Button>\n                      </Popconfirm>\n                    </Space>\n                  </Affix>\n                </Row>\n              </Col>\n            </Row>\n          );\n        },\n      }}\n      layout=\"vertical\"\n      onFinish={onFinish}\n      onValuesChange={onValuesChange}\n      initialValues={{ ...initialValues, summary: initialValues.summary || '' }}\n      style={{ height: '100%' }}\n    >\n      <Row\n        gutter={16}\n        style={{\n          height: '100%',\n        }}\n      >\n        <Col span={24 - 8}>\n          <Divider>\n            <FormattedMessage id=\"lesson\" />\n          </Divider>\n          <ProCard>\n            <ProFormText\n              name=\"title\"\n              label={<FormattedMessage id=\"title\" />}\n              tooltip={<FormattedMessage id=\"title\" />}\n              placeholder={intl.formatMessage({\n                id: 'title',\n              })}\n              required\n              labelCol={{\n                span: 5,\n              }}\n            />\n            <ProForm.Item\n              name=\"summary\"\n              label={<FormattedMessage id=\"summary\" />}\n              tooltip={<FormattedMessage id=\"summary_tooltip\" />}\n              valuePropName=\"value\"\n              labelCol={{\n                span: 5,\n              }}\n            >\n              <WysiwygMarkdown\n                directory={`course/${lesson.course_id}/lesson/${lesson.id}/wysiwyg`}\n              />\n            </ProForm.Item>\n          </ProCard>\n        </Col>\n        <Col span={8}>\n          <aside className={'program-sidebar program-sidebar--right'}>\n            <ProFormText\n              name=\"duration\"\n              label={<FormattedMessage id=\"duration\" />}\n              tooltip={<FormattedMessage id=\"duration\" />}\n              placeholder={intl.formatMessage({\n                id: 'duration',\n              })}\n            />\n            <ProFormSwitch name=\"active\" label={<FormattedMessage id=\"is_active\" />} />\n            <ProFormDatePicker\n              allowClear={false}\n              width=\"lg\"\n              name=\"active_from\"\n              label={<FormattedMessage id=\"active_from\" />}\n              placeholder={intl.formatMessage({\n                id: 'active_from',\n                defaultMessage: 'active_from',\n              })}\n              rules={[\n                {\n                  validator: (_, value) => {\n                    if (value && activeTo && isAfter(new Date(value), new Date(activeTo))) {\n                      return Promise.reject(new Error(intl.formatMessage({ id: 'invalidDate' })));\n                    }\n\n                    return Promise.resolve();\n                  },\n                },\n              ]}\n            />\n            <ProFormDatePicker\n              allowClear={false}\n              width=\"lg\"\n              name=\"active_to\"\n              label={<FormattedMessage id=\"active_to\" />}\n              placeholder={intl.formatMessage({\n                id: 'active_to',\n                defaultMessage: 'active_to',\n              })}\n              disabled={!activeFrom && !activeTo}\n              rules={[\n                {\n                  validator(_, value) {\n                    if (value && activeFrom && isBefore(new Date(value), new Date(activeFrom))) {\n                      return Promise.reject(new Error(intl.formatMessage({ id: 'invalidDate' })));\n                    }\n\n                    return Promise.resolve();\n                  },\n                },\n              ]}\n            />\n            <ParentLesson name=\"parent_id\" currentLessonId={lesson?.id} />\n            {isAssistant && (\n              <ProFormText\n                name=\"assistant_id\"\n                label={<FormattedMessage id=\"assistant_id\" defaultMessage=\"Assistant ID\" />}\n                tooltip={<FormattedMessage id=\"assistant_id_tooltip\" />}\n                placeholder={intl.formatMessage({\n                  id: 'Assistant ID',\n                })}\n              />\n            )}\n          </aside>\n        </Col>\n      </Row>\n    </ProForm>\n  );\n};\n\nexport default LessonForm;\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { useParams } from 'umi';\n\nimport { Context } from '@/components/ProgramForm/Context';\nimport { getFormData } from '@/services/api';\nimport LessonForm from './form';\nimport type { StateLesson } from './types';\n\nconst getStateLesson = (lesson: API.Lesson): StateLesson => ({\n  ...lesson,\n  parent_id: lesson.parent_id ?? '',\n});\n\nexport const Lesson: React.FC = () => {\n  const { updateLesson, deleteLesson, cloneLesson, currentEditMode } = useContext(Context);\n\n  const lesson =\n    currentEditMode && currentEditMode.mode === 'lesson' && currentEditMode.value\n      ? currentEditMode.value\n      : {};\n  const [state, setState] = useState<StateLesson>(getStateLesson(lesson));\n  const [, setTopicList] = useState<API.Topic[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  const params = useParams<{ course?: string; tab?: string }>();\n\n  useEffect(() => {\n    setState(getStateLesson(lesson));\n    return lesson?.topics && setTopicList(lesson.topics);\n  }, [lesson]);\n\n  const handleSave = useCallback(() => {\n    setLoading(true);\n\n    const formData = getFormData({\n      course_id: lesson?.course_id || params.course,\n      ...state,\n      active: state.active ? 1 : 0,\n      parent_lesson_id: state.parent_id,\n    });\n\n    if (updateLesson && state.id) {\n      return updateLesson(state.id, formData)\n        .then(() => setLoading(false))\n        .catch((err) => {\n          console.error(err);\n          setLoading(false);\n        });\n    }\n    return Promise.resolve();\n  }, [state, lesson?.course_id, updateLesson]);\n\n  const handleDelete = useCallback(() => {\n    if (state.id && deleteLesson) {\n      deleteLesson(state.id);\n    }\n    return Promise.resolve();\n  }, [deleteLesson, state.id]);\n\n  const handleClone = useCallback(() => {\n    return state.id && cloneLesson?.(state.id);\n  }, [cloneLesson, state.id]);\n\n  return (\n    <LessonForm\n      loading={loading}\n      lesson={state}\n      initialValues={state}\n      onDelete={handleDelete}\n      onFinish={handleSave}\n      onClone={handleClone}\n      onValuesChange={(changedValues) => {\n        setState((prevState) => ({\n          ...prevState,\n          ...changedValues,\n        }));\n      }}\n    />\n  );\n};\n\nexport default Lesson;\n","import WysiwygMarkdown from '@/components/WysiwygMarkdown';\nimport { FormattedMessage } from '@@/plugin-locale/localeExports';\nimport ProForm from '@ant-design/pro-form';\nimport { Button, Modal } from 'antd';\nimport React from 'react';\n\ninterface DescriptionModalProps {\n  handleOk: () => void;\n  isModalVisible: boolean;\n  initialValues: API.Topic;\n  courseId: number;\n}\n\nexport const DescriptionModal: React.FC<DescriptionModalProps> = (props) => {\n  const { handleOk, isModalVisible, initialValues, courseId } = props;\n\n  return (\n    <Modal\n      title={<FormattedMessage id=\"description\" />}\n      visible={isModalVisible}\n      onOk={handleOk}\n      onCancel={handleOk}\n      width={1000}\n      footer={[\n        <Button key=\"back\" type={'primary'} onClick={handleOk}>\n          Ok\n        </Button>,\n      ]}\n    >\n      <ProForm.Item\n        name=\"introduction\"\n        label={<FormattedMessage id=\"introduction\" />}\n        labelCol={{ span: 5 }}\n        wrapperCol={{ span: 19 }}\n        tooltip={<FormattedMessage id=\"introduction_tooltip\" />}\n        valuePropName=\"value\"\n      >\n        <WysiwygMarkdown\n          directory={`course/${courseId}/lesson/${initialValues.lesson_id}/topic/${initialValues.id}/wysiwyg`}\n        />\n      </ProForm.Item>\n      <ProForm.Item\n        name=\"description\"\n        label={<FormattedMessage id=\"description\" />}\n        labelCol={{ span: 5 }}\n        wrapperCol={{ span: 19 }}\n        tooltip={<FormattedMessage id=\"description_tooltip\" />}\n        valuePropName=\"value\"\n      >\n        <WysiwygMarkdown\n          directory={`course/${courseId}/lesson/${initialValues.lesson_id}/topic/${initialValues.id}/wysiwyg`}\n        />\n      </ProForm.Item>\n      <ProForm.Item\n        name=\"summary\"\n        label={<FormattedMessage id=\"summary\" />}\n        labelCol={{ span: 5 }}\n        wrapperCol={{ span: 19 }}\n        tooltip={<FormattedMessage id=\"summary_tooltip\" />}\n        valuePropName=\"value\"\n      >\n        <WysiwygMarkdown\n          directory={`course/${courseId}/lesson/${initialValues.lesson_id}/topic/${initialValues.id}/wysiwyg`}\n        />\n      </ProForm.Item>\n    </Modal>\n  );\n};\n","import JsonEditor from '@/components/JsonEditor';\nimport { DescriptionModal } from '@/components/ProgramForm/ThreeColProgram/TopicForm/descriptionModal';\nimport ProForm, { ProFormSwitch, ProFormText } from '@ant-design/pro-form';\nimport { Button } from 'antd';\nimport React from 'react';\nimport { FormattedMessage, useIntl } from 'umi';\nimport { ParentLesson } from '../ParentLesson';\n\nexport const TopicForm: React.FC<{\n  onValuesChange: (changedValues: API.Topic, values: API.Topic) => void;\n  initialValues: API.Topic;\n  courseId: number;\n  courseLessons: API.Lesson[];\n}> = ({ onValuesChange, initialValues, courseId }) => {\n  const intl = useIntl();\n\n  const [visibleModal, setVisibleModal] = React.useState<boolean>(false);\n\n  return (\n    <ProForm<API.Topic>\n      submitter={false}\n      onValuesChange={onValuesChange}\n      initialValues={{ ...initialValues }}\n      layout={'horizontal'}\n    >\n      <ProFormText\n        name=\"title\"\n        label={<FormattedMessage id=\"title\" />}\n        tooltip={<FormattedMessage id=\"title\" />}\n        placeholder={intl.formatMessage({\n          id: 'title',\n          defaultMessage: 'title',\n        })}\n        required\n      />\n      <ProFormText\n        name=\"duration\"\n        label={<FormattedMessage id=\"duration\" />}\n        tooltip={<FormattedMessage id=\"duration\" />}\n        placeholder={intl.formatMessage({\n          id: 'duration',\n        })}\n      />\n      <ParentLesson name=\"lesson_id\" />\n      <ProForm.Item label={<FormattedMessage id=\"description\" />}>\n        <Button type={'primary'} onClick={() => setVisibleModal(true)}>\n          <FormattedMessage id=\"open_editor\" />\n        </Button>\n      </ProForm.Item>\n      <ProFormSwitch name=\"active\" label={<FormattedMessage id=\"is_active\" />} />\n      <ProFormSwitch name=\"preview\" label={<FormattedMessage id=\"able_to_preview\" />} />\n      <ProFormSwitch name=\"can_skip\" label={<FormattedMessage id=\"can_skip\" />} />\n      <ProForm.Item\n        name=\"json\"\n        label={<FormattedMessage id=\"json\" />}\n        tooltip={<FormattedMessage id=\"json_tooltip\" />}\n        valuePropName=\"value\"\n      >\n        <JsonEditor />\n      </ProForm.Item>\n      <DescriptionModal\n        isModalVisible={visibleModal}\n        handleOk={() => setVisibleModal(false)}\n        initialValues={initialValues}\n        courseId={courseId}\n      />\n    </ProForm>\n  );\n};\n\nexport default TopicForm;\n","export const getTypeName = (topic: API.Topic): string => {\n  if (typeof topic?.topicable_type !== 'string' || !topic.topicable_type) return 'Unknown';\n  const types: string[] = (topic?.topicable_type || '').split('\\\\');\n\n  return types.pop() || 'Unknown';\n};\n","import { allContent } from '@/services/escola-lms/h5p';\nimport { searchSubstring } from '@/utils/utils';\nimport { Select } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { FormattedMessage } from 'umi';\n\nexport const H5PContentSelect: React.FC<{\n  state?: {\n    type: number;\n  };\n  multiple?: boolean;\n  value?: string;\n  onChange?: (value: string) => void;\n}> = ({ value, onChange, multiple = false }) => {\n  const [contents, setContents] = useState<API.H5PContentListItem[]>([]);\n\n  useEffect(() => {\n    allContent().then((response) => response.success && setContents(response.data));\n  }, []);\n\n  useEffect(() => {\n    if (contents.length) {\n      if (!contents.find((content) => Number(content.id) === Number(value))) {\n        allContent().then((response) => response.success && setContents(response.data));\n      }\n    }\n  }, [value]);\n\n  return (\n    <Select\n      loading={contents.length === 0}\n      style={{ width: '100%' }}\n      value={value}\n      onChange={onChange}\n      mode={multiple ? 'multiple' : undefined}\n      showSearch\n      placeholder={<FormattedMessage id=\"H5P_select_content\" />}\n      optionFilterProp=\"children\"\n      filterOption={(input, option) => {\n        const h5pTitle = option?.children?.slice(1, option?.children.length).join('');\n        return searchSubstring(h5pTitle, input);\n      }}\n    >\n      {contents.map((content) => (\n        <Select.Option key={content.id.toString()} value={content.id.toString()}>\n          <small>{content.id}</small> {content.title} ({content.library.title})\n        </Select.Option>\n      ))}\n    </Select>\n  );\n};\n\nexport default H5PContentSelect;\n","import H5PContentSelect from '@/components/H5PContentSelect';\nimport { Button, Col, Divider, Row, Typography } from 'antd';\nimport React, { useState } from 'react';\n\nimport UploadH5P from '@/components/H5P/upload';\nimport { FormattedMessage, useIntl } from 'umi';\n\nimport H5PCard from '@/components/H5P/card';\n\nexport const H5PForm: React.FC<{\n  id: string;\n  onChange: (value: string) => void;\n}> = ({ id, onChange }) => {\n  const intl = useIntl();\n  const [editId, setEditId] = useState<number | 'new'>(\n    id === 'new' || id === undefined ? 'new' : Number(id),\n  );\n\n  return (\n    <React.Fragment>\n      <Row gutter={16} align=\"middle\" className=\"create-new\">\n        <Col>\n          <Button type=\"primary\" onClick={() => setEditId('new')}>\n            {' '}\n            <FormattedMessage id=\"create_new\" />\n          </Button>\n        </Col>\n\n        <Col span={4}>\n          <Typography>\n            <small>\n              <FormattedMessage id=\"or\" />\n            </small>{' '}\n            <FormattedMessage id=\"reuse_existing\" />\n          </Typography>\n        </Col>\n\n        <Col span={12}>\n          <H5PContentSelect\n            value={id}\n            onChange={(value) => {\n              onChange(value);\n\n              setEditId(id === 'new' ? 'new' : Number(id));\n            }}\n          />\n        </Col>\n      </Row>\n\n      <Row\n        style={{\n          marginTop: '30px',\n        }}\n      >\n        <Col span={24}>\n          <H5PCard key={editId} id={editId} onSubmit={(h5pId) => onChange(String(h5pId))} />\n        </Col>\n      </Row>\n\n      <Divider />\n\n      <Row gutter={16}>\n        <Col span={24}>\n          <Row>\n            <UploadH5P\n              onSuccess={(data) => {\n                if (data.data.id) {\n                  onChange(String(data.data.id));\n                }\n              }}\n              onError={() =>\n                console.log(\n                  intl.formatMessage({\n                    id: 'error',\n                  }),\n                )\n              }\n            />\n          </Row>\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default H5PForm;\n","import React from 'react';\nimport Embed, { type EmbedProps } from 'react-tiny-oembed';\n\nconst PROVIDERS = [\n  {\n    provider_name: 'YouTube',\n    provider_url: 'https://www.youtube.com/',\n    endpoints: [\n      {\n        schemes: [\n          'https://*.youtube.com/watch*',\n          'https://*.youtube.com/v/*',\n          'https://youtu.be/*',\n          'https://*.youtube.com/shorts/*',\n          'https://youtube.com/shorts/*',\n        ],\n        url: 'https://www.youtube.com/oembed',\n        discovery: true,\n      },\n    ],\n  },\n  {\n    provider_name: 'Reddit',\n    provider_url: 'https://reddit.com/',\n    endpoints: [\n      {\n        schemes: ['https://reddit.com/r/*/comments/*/*', 'https://www.reddit.com/r/*/comments/*/*'],\n        url: 'https://www.reddit.com/oembed',\n      },\n    ],\n  },\n  {\n    provider_name: 'Flickr',\n    provider_url: 'https://www.flickr.com/',\n    endpoints: [\n      {\n        schemes: [\n          'http://*.flickr.com/photos/*',\n          'http://flic.kr/p/*',\n          'https://*.flickr.com/photos/*',\n          'https://flic.kr/p/*',\n        ],\n        url: 'https://www.flickr.com/services/oembed/',\n        discovery: true,\n      },\n    ],\n  },\n  {\n    provider_name: 'Vimeo',\n    provider_url: 'https://vimeo.com/',\n    endpoints: [\n      {\n        schemes: [\n          'https://vimeo.com/*',\n          'https://vimeo.com/album/*/video/*',\n          'https://vimeo.com/channels/*/*',\n          'https://vimeo.com/groups/*/videos/*',\n          'https://vimeo.com/ondemand/*/*',\n          'https://player.vimeo.com/video/*',\n        ],\n        url: 'https://vimeo.com/api/oembed.{format}',\n        discovery: true,\n      },\n    ],\n  },\n  {\n    provider_name: 'SoundCloud',\n    provider_url: 'http://soundcloud.com/',\n    endpoints: [\n      {\n        schemes: [\n          'http://soundcloud.com/*',\n          'https://soundcloud.com/*',\n          'https://soundcloud.app.goog.gl/*',\n        ],\n        url: 'https://soundcloud.com/oembed',\n      },\n    ],\n  },\n  {\n    provider_name: 'Twitter',\n    provider_url: 'http://www.twitter.com/',\n    endpoints: [\n      {\n        schemes: [\n          'https://twitter.com/*/status/*',\n          'https://*.twitter.com/*/status/*',\n          'https://twitter.com/*/moments/*',\n          'https://*.twitter.com/*/moments/*',\n        ],\n        url: 'https://publish.twitter.com/oembed',\n      },\n    ],\n  },\n  {\n    provider_name: 'GIPHY',\n    provider_url: 'https://giphy.com',\n    endpoints: [\n      {\n        schemes: [\n          'https://giphy.com/gifs/*',\n          'http://gph.is/*',\n          'https://media.giphy.com/media/*/giphy.gif',\n        ],\n        url: 'https://giphy.com/services/oembed',\n        discovery: true,\n      },\n    ],\n  },\n];\n\ntype Props = Omit<EmbedProps, 'providers'>;\n\nexport const OEmbed: React.FC<Props> = (props) => <Embed {...props} providers={PROVIDERS} />;\n","import { Button, Input, Row } from 'antd';\nimport React, { useState } from 'react';\nimport { FormattedMessage } from 'umi';\n\nimport { OEmbed } from '@/components/OEmbed';\n\nexport const Oembed: React.FC<{ text: string; onChange: (value: string) => void }> = ({\n  text,\n  onChange,\n}) => {\n  const [currentValue, setCurrentValue] = useState<string>(text);\n  const [previewValue, setPreviewValue] = useState<string>(text);\n\n  return (\n    <React.Fragment>\n      <Row>\n        <Input\n          value={text}\n          onChange={(e) => {\n            setCurrentValue(e.target.value);\n            onChange(e.target.value);\n          }}\n        />\n        <Button onClick={() => setPreviewValue(currentValue)}>\n          <FormattedMessage id=\"preview\" />\n        </Button>\n      </Row>\n      <Row>{previewValue && <OEmbed key={previewValue} url={previewValue} />}</Row>\n    </React.Fragment>\n  );\n};\n\nexport default Oembed;\n","import React from 'react';\n\nimport FormWysiwygProps from '@/components/WysiwygMarkdown';\n\nexport const MediaText: React.FC<{\n  text: string;\n  onChange: (value: string) => void;\n  directory: string;\n}> = ({ text, onChange, directory = 'topics/new' }) => {\n  return (\n    <div>\n      <FormWysiwygProps\n        directory={directory}\n        value={text}\n        onChange={(value) => {\n          onChange(value);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default MediaText;\n","import SecureUploadBrowser from '@/components/SecureUpload/browser';\nimport { TopicType } from '@/services/escola-lms/enums';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { Button, Pagination, Progress, Row, Spin, Typography } from 'antd';\nimport type { UploadChangeParam, UploadFile } from 'antd/lib/upload';\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport { FormattedMessage } from 'umi';\nimport './index.css';\n\nimport { Context } from '@/components/ProgramForm/Context';\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\nconst CONFIG = {\n  acceptedTypes: {\n    audio: '.mp3,audio/*',\n    video: '.mp3,video/*',\n    document: '.doc,.docx,.pdf,.zip',\n    [TopicType.Audio]: '.mp3,audio/*',\n    [TopicType.Video]: '.mp3,video/*',\n    [TopicType.PDF]: '.pdf,application/pdf',\n  },\n};\n\nconst prepareObject = (data: Record<string, string | number | boolean | object | undefined>) => {\n  const result: Record<string, string | number> = {};\n  let key: string;\n  for (key in data) {\n    switch (typeof data[key]) {\n      case 'boolean':\n        result[key] = data[key] ? 1 : 0;\n        break;\n      case 'object':\n        result[key] = JSON.stringify(data[key]);\n        break;\n      case 'string':\n      case 'number':\n        result[key] = data[key] as string | number;\n        break;\n      default:\n        break;\n    }\n  }\n  return result;\n};\n\nconst PDFPreview: React.FC<{ file: string }> = ({ file }) => {\n  const [nPages, setNumPages] = useState(0);\n  const [pageNumber, setPageNumber] = useState(1);\n\n  return (\n    <div>\n      {nPages === 0 ? (\n        <Spin />\n      ) : (\n        <div style={{ margin: '0.5em 0' }}>\n          <Typography>\n            <FormattedMessage id=\"page\" />:\n          </Typography>\n          <Pagination\n            defaultPageSize={1}\n            size=\"small\"\n            total={nPages}\n            onChange={(page) => setPageNumber(page)}\n            simple\n          />\n        </div>\n      )}\n      <Document file={file} onLoadSuccess={({ numPages }) => setNumPages(numPages)}>\n        <Page pageNumber={pageNumber} className=\"pdf-preview\" />\n      </Document>\n    </div>\n  );\n};\n\nconst VideoProgress: React.FC<{ topic: API.TopicVideo }> = ({ topic }) => {\n  const { getLessons } = useContext(Context);\n\n  useEffect(() => {\n    if (topic.json?.ffmpeg.state === 'coding') {\n      const t = setTimeout(() => {\n        if (getLessons) {\n          getLessons();\n        }\n      }, 1000);\n      return () => clearTimeout(t);\n    }\n    return;\n  }, []);\n\n  if (topic.json?.ffmpeg.state === 'coding') {\n    return (\n      <Typography>\n        <FormattedMessage id=\"encoding_progress\" defaultMessage=\"Encoding progress:\" />\n        <Progress percent={topic.json?.ffmpeg?.percentage} />\n      </Typography>\n    );\n  }\n  return <React.Fragment />;\n};\n\nexport const MediaUploadPreview: React.FC<{ topic: API.Topic; type: TopicType }> = ({\n  type,\n  topic,\n}) => {\n  if (topic && topic.topicable && 'url' in topic.topicable) {\n    switch (type) {\n      case TopicType.Audio:\n        return topic.topicable_type === TopicType.Audio && topic.topicable?.url ? (\n          <audio preload=\"none\" controls src={topic.topicable.url} />\n        ) : (\n          <React.Fragment />\n        );\n      case TopicType.Video:\n        return topic.topicable_type === TopicType.Video && topic.topicable?.url ? (\n          <video controls src={topic.topicable.url} width=\"100%\" />\n        ) : (\n          <React.Fragment />\n        );\n      case TopicType.Image:\n        return topic.topicable_type === TopicType.Image && topic.topicable?.url ? (\n          <img title=\"Topic image\" src={topic.topicable.url} width=\"100%\" />\n        ) : (\n          <React.Fragment />\n        );\n      case TopicType.PDF:\n        return topic.topicable_type === TopicType.PDF && topic.topicable?.url ? (\n          <PDFPreview file={topic.topicable.url} />\n        ) : (\n          <React.Fragment />\n        );\n      default:\n        return <React.Fragment />;\n    }\n  }\n  return <React.Fragment />;\n};\n\nexport const MediaUploadForm: React.FC<{\n  topic: API.Topic;\n  currentState: API.Topic;\n  type: TopicType.Audio | TopicType.Video | TopicType.Image | TopicType.PDF;\n  onUpdate: (info: UploadChangeParam) => void;\n  onChange: (info: UploadChangeParam) => void;\n  disabled: boolean;\n  folder: string;\n  maxFiles?: number;\n  clearListAfterUpload?: boolean;\n}> = ({\n  topic,\n  type,\n  onUpdate,\n  disabled = false,\n  currentState,\n  onChange,\n  folder,\n  maxFiles,\n  clearListAfterUpload,\n}) => {\n  const onInfoChange = useCallback(\n    (info: UploadChangeParam<UploadFile<API.DefaultResponse<API.File>>>) => {\n      if (info.file.status === 'done') {\n        return onUpdate && onUpdate(info);\n      }\n\n      return onChange && onChange(info);\n    },\n    [onUpdate, onChange],\n  );\n\n  const data = {\n    ...currentState,\n    topicable_type: type,\n    active: currentState.active ? 1 : 0,\n    preview: currentState.preview ? 1 : 0,\n    can_skip: currentState.can_skip ? 1 : 0,\n  };\n\n  // I delete these fields if they are null because validation does not allow them on the backend so if they are null the user has not edited them\n\n  if (!data.introduction) {\n    delete data?.introduction;\n  }\n  if (!data.description) {\n    delete data?.description;\n  }\n  if (!data.summary) {\n    delete data?.summary;\n  }\n  if (!data.json) {\n    delete data?.json;\n  }\n\n  return (\n    <React.Fragment>\n      <Row>\n        <SecureUploadBrowser\n          folder={folder}\n          onChange={onInfoChange}\n          name=\"value\"\n          url={topic.isNew ? `/api/admin/topics` : `/api/admin/topics/${topic.id}?_method=PUT`}\n          accept={CONFIG.acceptedTypes[type as keyof typeof CONFIG.acceptedTypes]}\n          data={prepareObject(data)}\n          maxFiles={maxFiles}\n          clearListAfterUpload={clearListAfterUpload}\n        >\n          <Button disabled={disabled} icon={<UploadOutlined />}>\n            Click to upload {type}\n          </Button>\n        </SecureUploadBrowser>\n      </Row>\n      <Row>\n        <div style={{ padding: '0 12px' }}>\n          {topic.topicable_type === TopicType.Video && (\n            <VideoProgress topic={topic as API.TopicVideo} />\n          )}\n          <MediaUploadPreview type={type} topic={currentState} />\n        </div>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default MediaUploadForm;\n","import SecureUploadBrowser from '@/components/SecureUpload/browser';\nimport { deleteResource, resources as fetchResources } from '@/services/escola-lms/course';\nimport { DeleteOutlined, DownloadOutlined } from '@ant-design/icons';\nimport { Button, List } from 'antd';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\n\nexport const Resources: React.FC<{ topicId: number; folder: string }> = ({ topicId, folder }) => {\n  const [resources, setResources] = useState<API.Resource[]>();\n  const controller = useRef<AbortController>();\n\n  const fetch = useCallback(() => {\n    if (controller.current) {\n      controller.current.abort();\n    }\n    controller.current = new AbortController();\n\n    fetchResources(topicId, { signal: controller.current.signal }).then((response) => {\n      if (response && response.success) {\n        setResources(response.data);\n      }\n    });\n  }, [topicId]);\n\n  const onUploaded = useCallback((response: API.ResourceRow) => {\n    if (response && response.success) {\n      fetchResources(topicId).then((fetchResponse) => {\n        if (fetchResponse && fetchResponse.success) {\n          setResources(fetchResponse.data);\n        }\n      });\n    }\n  }, []);\n\n  const onRemove = useCallback(\n    (resId: number) => {\n      deleteResource(topicId, resId).then((response) => {\n        if (response.success) {\n          fetch();\n        }\n      });\n    },\n    [topicId],\n  );\n\n  useEffect(() => {\n    fetch();\n  }, [topicId]);\n\n  return (\n    <List\n      size=\"small\"\n      itemLayout=\"horizontal\"\n      dataSource={resources}\n      header={\n        <SecureUploadBrowser<API.Resource>\n          folder={folder}\n          url={`/api/admin/topics/${topicId}/resources`}\n          name=\"resource\"\n          onChange={(response) => {\n            if (response.file.status === 'done') {\n              if (response.file.response?.success) {\n                onUploaded(response.file.response);\n              }\n            }\n          }}\n        />\n      }\n      renderItem={(item) => (\n        <List.Item\n          actions={[\n            <Button\n              key=\"delete\"\n              type=\"default\"\n              danger\n              icon={<DeleteOutlined />}\n              size=\"small\"\n              onClick={() => onRemove(item.id)}\n            />,\n          ]}\n        >\n          <List.Item.Meta\n            avatar={\n              <a href={item.url} target=\"_blank\" rel=\"noreferrer\">\n                <Button type=\"default\" icon={<DownloadOutlined />} size=\"small\" />\n              </a>\n            }\n            description={\n              <React.Fragment>\n                <Button type=\"text\" size=\"small\">\n                  {item.name}\n                </Button>\n              </React.Fragment>\n            }\n          />\n        </List.Item>\n      )}\n    />\n  );\n};\n\nexport default Resources;\n\n/*\n\nimport React, { useCallback, useEffect, useState, useContext, useRef } from 'react';\nimport { Context } from '@/context/curriculum';\nimport { getFormData } from '@/services/api';\nimport Divider from 'antd/lib/divider';\nimport List from 'antd/lib/list';\nimport Skeleton from 'antd/lib/skeleton';\nimport Button from 'antd/lib/button';\nimport Popconfirm from 'antd/lib/popconfirm';\nimport Upload from 'antd/lib/upload';\nimport Tag from 'antd/lib/tag';\nimport { APIpath } from '@/services/api';\nimport { UploadOutlined } from '@ant-design/icons';\n\nexport const ResourceUploadForm = ({ topic_id, onUpload }) => {\n  const { token, id, updateLesson } = useContext(Context);\n\n  const onChange = useCallback((info) => {\n    if (info.file.status === 'done') {\n      onUpload && onUpload(info);\n      //message.success(`${info.file.name} file uploaded successfully`);\n    } else if (info.file.status === 'error') {\n      //message.error(`${info.file.name} file upload failed.`);\n    }\n  });\n\n  return (\n    <Upload\n      onChange={onChange}\n      name=\"topicres\"\n      action={`${APIpath('topic/resource/save')}/${id}`}\n      headers={{\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      }}\n    >\n      <Button icon={<UploadOutlined />}>Click to upload new resource</Button>\n    </Upload>\n  );\n};\n\nexport const ResourceIcon = ({ resource }) => {\n  return <Tag>{resource.file_type}</Tag>;\n  switch (resource.file_type) {\n    case 'pdf':\n      return <i size=\"2em\">{resource.file_type}</i>;\n    default:\n      return <i size=\"2em\">{resource.file_type}</i>;\n  }\n};\n\nexport const Resources = ({ resources, quizId }) => {\n  const [state, setState] = useState(resources);\n  const [loading, setLoading] = useState(false);\n\n  const fileRef = useRef();\n\n  const { addResource, removeResource } = useContext(Context);\n\n  const uploadFile = useCallback(() => {\n    const formData = getFormData({});\n    formData.append('topicres', fileRef.current.files[0]);\n    setLoading(true);\n    addResource(quizId, formData).then(() => setLoading(false));\n  }, [fileRef]);\n\n  const onUpload = useCallback((info) => console.log(info), []);\n\n  const onDelete = useCallback((resource_id) => {\n    setLoading(true);\n    removeResource(resource_id).then(() => setLoading(false));\n  }, []);\n\n  useEffect(() => {\n    setState(resources);\n  }, [resources]);\n\n  return (\n    <React.Fragment>\n      <List\n        loading={loading}\n        header={<div>Resources</div>}\n        bordered\n        dataSource={state}\n        renderItem={(item) => (\n          <List.Item\n            actions={[\n              <Popconfirm\n                title=\"Are you sure to delete this resource?\"\n                onConfirm={() => onDelete(item.id)}\n                okText=\"Yes\"\n                cancelText=\"No\"\n              >\n                <Button danger size=\"small\">\n                  delete\n                </Button>\n              </Popconfirm>,\n            ]}\n          >\n            <Skeleton avatar title={false} loading={item.loading} active>\n              <List.Item.Meta\n                avatar={<ResourceIcon resource={item} />}\n                title={\n                  <a href={item.url} target=\"_blank\">\n                    {item.file_name}\n                  </a>\n                }\n              />\n            </Skeleton>\n          </List.Item>\n        )}\n      />\n      <Divider />\n\n      <ResourceUploadForm id={quizId} onUpload={onUpload} />\n    </React.Fragment>\n  );\n};\n\nexport default Resources;\n */\n","import ScormPreview from '@/components/Scorm/preview';\nimport { scorms as fetchScorms } from '@/services/escola-lms/scorm';\nimport { Button, Modal, Select, Space, Spin } from 'antd';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { FormattedMessage } from 'umi';\n\nexport const ScormSelect: React.FC<{\n  state?: {\n    type: number;\n  };\n  value?: number;\n  onChange?: (value: string) => void;\n}> = ({ value, onChange }) => {\n  const [scorms, setScorms] = useState<API.SCORM[]>([]);\n  const [fetching, setFetching] = useState(false);\n  const [currSco, setCurrSco] = useState<API.SCORM_SCO | undefined>();\n  const [previewUuid, setPreviewUuid] = useState<string>();\n  const abortController = useRef<AbortController>();\n\n  const fetch = useCallback((search?: string) => {\n    setFetching(true);\n    if (abortController.current) {\n      abortController.current.abort();\n    }\n\n    abortController.current = new AbortController();\n    fetchScorms({ search, pageSize: 0 }, { signal: abortController.current.signal })\n      .then((response) => {\n        if (response.success) {\n          return Array.isArray(response.data.data) && setScorms(response.data.data);\n        }\n        setFetching(false);\n      })\n      .catch(() => setFetching(false));\n  }, []);\n\n  const onSearch = useCallback(\n    (search: string) => {\n      fetch(search);\n    },\n    [fetch],\n  );\n\n  useEffect(() => {\n    fetch();\n  }, [value]);\n\n  useEffect(() => {\n    setCurrSco(scorms.map((scorm) => scorm.scos.filter((sco) => sco.id === value)).flat()[0]);\n  }, [scorms]);\n\n  return (\n    <React.Fragment>\n      {previewUuid && (\n        <Modal\n          width={'80vw'}\n          bodyStyle={{ height: '70vh' }}\n          visible={true}\n          onOk={() => setPreviewUuid(undefined)}\n          onCancel={() => setPreviewUuid(undefined)}\n        >\n          <ScormPreview uuid={previewUuid} />\n        </Modal>\n      )}\n\n      <Space>\n        <Select\n          allowClear\n          style={{ width: '100%', minWidth: '300px' }}\n          value={currSco ? `${currSco?.id}: ${currSco?.title}` : undefined}\n          onChange={(changeValue: string) =>\n            onChange && onChange(changeValue ? changeValue.split(':')[0] : changeValue)\n          }\n          showSearch\n          onSearch={onSearch}\n          placeholder={<FormattedMessage id=\"select_scorm_package\" />}\n          optionFilterProp=\"children\"\n          filterOption={(input, option) => {\n            if (option && option.children) {\n              return option?.children?.toString().toLowerCase().indexOf(input.toLowerCase()) >= 0;\n            }\n            return true;\n          }}\n          notFoundContent={fetching ? <Spin size=\"small\" /> : null}\n        >\n          {scorms.map((scorm) => (\n            <Select.OptGroup key={scorm.id} label={`${scorm.id}: ${scorm.version}`}>\n              <React.Fragment>\n                {scorm.scos.map((sco) => (\n                  <Select.Option key={sco.id} value={`${sco.id}: ${sco.title}`}>\n                    {sco.title}\n                  </Select.Option>\n                ))}\n              </React.Fragment>\n            </Select.OptGroup>\n          ))}\n        </Select>\n        {currSco && (\n          <Button\n            key={value}\n            onClick={() => {\n              setPreviewUuid(currSco?.uuid);\n            }}\n          >\n            <FormattedMessage id=\"preview\" />\n          </Button>\n        )}\n      </Space>\n    </React.Fragment>\n  );\n};\n\nexport default ScormSelect;\n","import { Button, Space } from 'antd';\nimport React from 'react';\nimport { FormattedMessage } from 'umi';\nimport SelectScorm from './select';\n\nexport const ScormSelector: React.FC<{\n  value?: number | undefined;\n  onChange?: (value: number | undefined) => void;\n}> = ({ value, onChange }) => {\n  // const intl = useIntl();\n  return (\n    <Space size=\"large\" align=\"start\">\n      <SelectScorm value={value} onChange={(id) => onChange && onChange(Number(id))} />\n      {/*\n      // TODO #1021 this isn't working \n      <UploadScorm\n        onSuccess={(scorm) => onChange && onChange(scorm.id)}\n        onError={() =>\n          message.error(\n            intl.formatMessage({\n              id: 'error',\n            }),\n          )\n        }\n      />\n      */}\n      <Button onClick={() => onChange && onChange(undefined)}>\n        <FormattedMessage id=\"clear_selection\" />\n      </Button>\n    </Space>\n  );\n};\n\nexport default ScormSelector;\n","import { Table } from '@/components/GiftQuizQuestions/table';\nimport ProForm, { ProFormDigit, ProFormGroup } from '@ant-design/pro-form';\nimport { Divider } from 'antd';\nimport Typography from 'antd/lib/typography/Typography';\nimport React, { Fragment } from 'react';\nimport { FormattedMessage, useIntl } from 'umi';\n\nexport const GiftQuiz: React.FC<{\n  topicable: API.TopicQuiz['topicable'];\n  onChange: (key: 'max_attempts' | 'max_execution_time', value: number | null) => void;\n  onAdded?: () => void;\n  onRemoved?: () => void;\n  onEdited?: () => void;\n}> = ({ topicable, onAdded, onRemoved, onEdited, onChange }) => {\n  const intl = useIntl();\n\n  return (\n    <Fragment>\n      <ProForm\n        initialValues={{\n          max_attempts: topicable ? topicable.max_attempts : undefined,\n          max_execution_time: topicable ? topicable.max_execution_time : undefined,\n          min_pass_score: topicable ? topicable.min_pass_score : undefined,\n        }}\n        onValuesChange={(values) => {\n          const key = Object.keys(values)[0] as 'max_attempts' | 'max_execution_time';\n          if (key) {\n            onChange(key, values[key]);\n          }\n        }}\n        submitter={false}\n      >\n        <ProFormGroup>\n          <ProFormDigit\n            name=\"max_attempts\"\n            label={<FormattedMessage id=\"max_attempts\" />}\n            tooltip={<FormattedMessage id=\"max_attempts\" />}\n            placeholder={intl.formatMessage({\n              id: 'max_attempts',\n              defaultMessage: 'max_attempts',\n            })}\n          />\n          <ProFormDigit\n            name=\"max_execution_time\"\n            label={<FormattedMessage id=\"max_execution_time\" />}\n            tooltip={<FormattedMessage id=\"max_execution_time_tooltip\" />}\n            placeholder={intl.formatMessage({\n              id: 'max_execution_time',\n              defaultMessage: 'max_execution_time',\n            })}\n          />\n          <ProFormDigit\n            name=\"min_pass_score\"\n            max={100}\n            label={<FormattedMessage id=\"min_pass_score\" />}\n            tooltip={<FormattedMessage id=\"min_pass_score_tooltip\" />}\n            placeholder={intl.formatMessage({\n              id: 'min_pass_score',\n              defaultMessage: 'min_pass_score',\n            })}\n          />\n        </ProFormGroup>\n      </ProForm>\n\n      <Divider />\n\n      {topicable ? (\n        <Table\n          questions={topicable.questions}\n          quizId={topicable.id}\n          onAdded={onAdded}\n          onEdited={onEdited}\n          onRemoved={onRemoved}\n        />\n      ) : (\n        <Typography>\n          <FormattedMessage\n            id=\"pressSaveToCreateQuestions\"\n            defaultMessage=\"Create this Topic before adding questions\"\n          />\n        </Typography>\n      )}\n    </Fragment>\n  );\n};\n\nexport default GiftQuiz;\n","import UserSelect from '@/components/UserSelect';\nimport ProForm from '@ant-design/pro-form';\nimport React, { useCallback } from 'react';\nimport { FormattedMessage } from 'umi';\n\ntype SelectValue = string | number | string[] | number[];\n\ninterface FormValues {\n  notify_users: SelectValue;\n}\n\ninterface Props {\n  onChange: (value: SelectValue) => void;\n  topicable: API.TopicProject['topicable'];\n}\n\nexport const Project: React.FC<Props> = ({ onChange, topicable }) => {\n  const onValuesChange = useCallback((values: FormValues) => {\n    const key = Object.keys(values)[0];\n    if (key) {\n      onChange(values[key as keyof typeof values]);\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <ProForm\n        initialValues={{ notify_users: topicable?.notify_users ?? [] }}\n        onValuesChange={onValuesChange}\n        submitter={false}\n      >\n        <ProForm.Item\n          name=\"notify_users\"\n          label={<FormattedMessage id=\"notify_users\" defaultMessage=\"Users to notify\" />}\n          tooltip={\n            <FormattedMessage\n              id=\"notify_users_tooltip\"\n              defaultMessage=\"Indicate which users should be notified about project upload\"\n            />\n          }\n        >\n          <UserSelect multiple />\n        </ProForm.Item>\n      </ProForm>\n    </React.Fragment>\n  );\n};\n\nexport default Project;\n","import { Context } from '@/components/ProgramForm/Context';\nimport { getFormData } from '@/services/api';\nimport { getTopic } from '@/services/escola-lms/course';\nimport { TopicType } from '@/services/escola-lms/enums';\nimport { Affix, Alert, Col, Row, Space } from 'antd';\nimport Button from 'antd/lib/button';\nimport Divider from 'antd/lib/divider';\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { FormattedMessage } from 'umi';\nimport TopicForm from './form';\nimport { getTypeName } from './media';\nimport H5PForm from './media/h5p';\nimport Oembed from './media/oembed';\nimport RichTextEditor from './media/text';\nimport MediaUpload from './media/upload';\nimport Resources from './resources';\n\nimport ScormSelector from '@/components/Scorm';\nimport {\n  AudioOutlined,\n  CarryOutOutlined,\n  ExclamationCircleOutlined,\n  FileImageOutlined,\n  FilePdfOutlined,\n  FileTextOutlined,\n  FundOutlined,\n  InteractionOutlined,\n  PercentageOutlined,\n  VideoCameraAddOutlined,\n  YoutubeOutlined,\n} from '@ant-design/icons';\nimport GiftQuiz from './media/giftquiz';\nimport Project from './media/project';\n\nexport const getTypeIcon = (type: string | undefined) => {\n  if (type) {\n    switch (type) {\n      case 'ScormSco':\n        return <FundOutlined />;\n      case 'PDF':\n        return <FilePdfOutlined />;\n      case 'Audio':\n        return <AudioOutlined />;\n      case 'Image':\n        return <FileImageOutlined />;\n      case 'OEmbed':\n        return <YoutubeOutlined />;\n      case 'H5P':\n        return <InteractionOutlined />;\n      case 'Video':\n        return <VideoCameraAddOutlined />;\n      case 'RichText':\n        return <FileTextOutlined />;\n      case 'Project':\n        return <CarryOutOutlined />;\n      case 'GiftQuiz':\n        return <PercentageOutlined />;\n    }\n  }\n  return <ExclamationCircleOutlined />;\n};\n\nconst topicCanHaveEmptyValue = (type: TopicType) => {\n  return [TopicType.GiftQuiz, TopicType.Project, TopicType.GiftQuiz].includes(type);\n};\n\nexport const Topic: React.FC = () => {\n  const {\n    state,\n    currentEditMode,\n    updateTopic,\n    deleteTopic,\n    onTopicUploaded,\n    cloneTopic,\n    getLessons,\n  } = useContext(Context);\n\n  const topic =\n    currentEditMode && currentEditMode.mode === 'topic' && currentEditMode.value\n      ? currentEditMode.value\n      : {};\n  const [saveIsDisabled, setSaveIsDisabled] = useState(false);\n  const [topics, setTopics] = useState<API.Topic>({\n    ...topic,\n    value: topic?.topicable?.value,\n    can_skip: topic.isNew ? true : topic.can_skip,\n  });\n\n  const type = topics.topicable_type;\n\n  const [sortOrder /* , setSortOrder */] = useState(topics.order);\n  const [loading, setLoading] = useState(false);\n  const [currentTopic, setCurrentTopic] = useState<API.Topic>(topic);\n\n  useEffect(() => {\n    setCurrentTopic(topic);\n  }, [topic]);\n\n  useEffect(() => {\n    setTopics((prevState) => {\n      return {\n        ...prevState,\n        ...topic,\n        value: type === topic?.topicable_type ? topic?.topicable?.value : '',\n      };\n    });\n    if (topic?.isNew) {\n      setSaveIsDisabled(!topicCanHaveEmptyValue(topic.topicable_type));\n    }\n  }, [type, topic]);\n\n  // Encoding progressbar state refresh\n  useEffect(() => {\n    if (\n      currentTopic?.topicable_type !== TopicType.Video ||\n      !currentTopic.json?.ffmpeg.state ||\n      currentTopic.json?.ffmpeg.state === 'finished'\n    )\n      return;\n\n    const fetchData = async () => {\n      if (topic.id) {\n        const response = await getTopic(topic.id);\n        if (response.success) {\n          setCurrentTopic(response.data);\n        }\n      }\n    };\n\n    const interval = window.setInterval(fetchData, 5000);\n\n    return () => {\n      window.clearInterval(interval);\n    };\n  }, [currentTopic?.topicable_type, currentTopic.json?.ffmpeg?.state]);\n\n  const updateValue = useCallback(\n    (key: keyof API.Topic, value: any) => {\n      setTopics((prevState) => ({\n        ...prevState,\n        [key]: value,\n      }));\n      setSaveIsDisabled(false);\n    },\n    [topic],\n  );\n\n  const updateValues = useCallback(\n    (values: API.Topic) => {\n      setTopics((prevState) => ({\n        ...prevState,\n        ...values,\n      }));\n    },\n    [topic],\n  );\n\n  const handleSave = useCallback(\n    (formData: FormData) => {\n      if (updateTopic && topics.id) {\n        setLoading(true);\n\n        updateTopic(topics.id, formData)\n          .then(() => setLoading(false))\n          .catch(() => {\n            setLoading(false);\n          });\n      }\n    },\n    [topics, updateTopic, topic],\n  );\n\n  const onFormSubmit = useCallback(() => {\n    const values = {\n      ...topics,\n      active: topics.active ? 1 : 0,\n      preview: topics.preview ? 1 : 0,\n      can_skip: topics.can_skip ? 1 : 0,\n      order: sortOrder,\n      json: topics.json ? JSON.stringify(topics.json) : null,\n    };\n\n    if (topicCanHaveEmptyValue(topic.topicable_type) && !values.value) {\n      values.value = 'theProject';\n    }\n\n    const formData = getFormData(values);\n\n    handleSave(formData);\n  }, [topics, handleSave, sortOrder]);\n\n  const onDelete = useCallback(() => {\n    if (topic?.isNew) {\n      return deleteTopic && topics.id && deleteTopic(topics.id);\n    }\n    setLoading(true);\n    return deleteTopic && topics.id && deleteTopic(topics.id);\n  }, [topics, deleteTopic, topic]);\n\n  const onClone = useCallback(() => {\n    return topic.id && cloneTopic && cloneTopic(topic.id);\n  }, [topic, cloneTopic]);\n\n  return (\n    <React.Fragment>\n      <Row\n        gutter={16}\n        style={{\n          height: '100%',\n        }}\n      >\n        <Col\n          span={24 - 8}\n          style={{\n            marginBottom: '46px',\n          }}\n        >\n          <Divider>\n            {topic && getTypeIcon(getTypeName(topic))}{' '}\n            {topic?.topicable_type && topic?.topicable_type.split('\\\\').pop()}{' '}\n            <FormattedMessage id=\"type\" />\n          </Divider>\n          {!type && <Alert message={<FormattedMessage id=\"select_type_topic\" />} type=\"info\" />}\n          {type && type === TopicType?.RichText && (\n            <RichTextEditor\n              directory={`course/${state?.id}/lesson/${topic?.lesson_id}/topic/${topic?.id}/wysiwyg`}\n              text={\n                topic?.topicable_type === TopicType?.RichText ? topic?.topicable?.value || '' : ''\n              }\n              onChange={(value) => updateValue('value', value)}\n            />\n          )}\n          {topic &&\n            type &&\n            (type === TopicType.Video ||\n              type === TopicType.Audio ||\n              type === TopicType.Image ||\n              type === TopicType.PDF) && (\n              <MediaUpload\n                folder={`course/${state?.id}`}\n                type={type}\n                topic={currentTopic}\n                currentState={topics}\n                onChange={(info) => {\n                  setLoading(true);\n                  if (info.file.status === 'removed') {\n                    setLoading(false);\n                  }\n                }}\n                onUpdate={(info) => {\n                  if (topic.id && onTopicUploaded) onTopicUploaded(topic.id, info);\n\n                  // refetch lessons to get if video is being transcoded\n                  if (topic.topicable_type === TopicType.Video) {\n                    setTimeout(() => {\n                      if (getLessons) {\n                        getLessons();\n                      }\n                    }, 5000);\n                  }\n\n                  setTopics({\n                    ...topics,\n                    id: info?.file?.response?.data?.id,\n                    order: info.file.response.data?.order,\n                    value: info?.file?.response.data?.topicable?.value,\n                    topicable: info?.file?.response.data?.topicable,\n                  });\n                  setSaveIsDisabled(false);\n                  setLoading(false);\n                }}\n                disabled={false}\n                maxFiles={1}\n                clearListAfterUpload={true}\n              />\n            )}\n          {type && type === TopicType.OEmbed && (\n            <Oembed text={topics.value} onChange={(value) => updateValue('value', value)} />\n          )}\n          {type && type === TopicType.Project && (\n            <Project\n              onChange={(value) => updateValue('notify_users' as keyof API.Topic, value)}\n              topicable={topic.topicable as API.TopicProject['topicable']}\n            />\n          )}\n          {type && type === TopicType.GiftQuiz && (\n            <GiftQuiz\n              onChange={(key, value) => {\n                updateValue(key as keyof API.Topic, value);\n              }}\n              topicable={topics.topicable as API.TopicQuiz['topicable']}\n              onAdded={getLessons}\n              onRemoved={getLessons}\n              onEdited={getLessons}\n            />\n          )}\n          {type && type === TopicType.H5P && (\n            <H5PForm id={topics.value} onChange={(value) => updateValue('value', value)} />\n          )}\n          {type && type === TopicType.SCORM && (\n            <ScormSelector\n              value={Number(topics.value)}\n              onChange={(value) => updateValue('value', value)}\n            />\n          )}\n\n          <Row justify=\"center\" className={'program__cta-footer'}>\n            <Affix offsetBottom={4}>\n              <Space size=\"large\">\n                <Button loading={loading}>\n                  <FormattedMessage id=\"cancel\" />\n                </Button>\n                {!topic.isNew && (\n                  <Button onClick={onClone} loading={loading}>\n                    <FormattedMessage id=\"clone\" />\n                  </Button>\n                )}\n                <Button\n                  type=\"primary\"\n                  onClick={onFormSubmit}\n                  disabled={saveIsDisabled}\n                  loading={loading}\n                >\n                  <FormattedMessage id=\"save\" />\n                </Button>\n                <Button danger onClick={onDelete} loading={loading}>\n                  <FormattedMessage id=\"delete\" />\n                </Button>\n              </Space>\n            </Affix>\n          </Row>\n        </Col>\n        <Col span={8}>\n          <aside className={'program-sidebar program-sidebar--right'}>\n            {state?.lessons && (\n              <TopicForm\n                courseId={Number(state?.id)}\n                courseLessons={state?.lessons}\n                initialValues={topics}\n                onValuesChange={(values) => updateValues(values)}\n              />\n            )}\n            {!topics.isNew && (\n              <React.Fragment>\n                <Divider>\n                  <FormattedMessage id=\"file_resources\" />\n                </Divider>\n                <Resources topicId={Number(topic?.id)} folder={`course/${state?.id}`} />\n              </React.Fragment>\n            )}\n          </aside>\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default Topic;\n","import { ExportOutlined, FolderOutlined } from '@ant-design/icons';\nimport type { TreeDraggableProvided } from '@atlaskit/tree/dist/types/components/TreeItem/TreeItem-types';\nimport { Button, Input, Tooltip } from 'antd';\nimport React, { useState } from 'react';\nimport { FormattedMessage } from 'umi';\n\nexport const NewLessonListItem = React.forwardRef<\n  HTMLDivElement,\n  {\n    initialValue: API.Lesson;\n    onCreate: (title: string) => void;\n  } & TreeDraggableProvided['draggableProps'] &\n    TreeDraggableProvided['dragHandleProps']\n>(({ initialValue, onCreate, ...draggableProps }, ref) => {\n  const [value, setValue] = useState('');\n\n  return (\n    <div\n      className=\"program-sidebar__list-item program-sidebar__list-item--lesson-new\"\n      ref={ref}\n      {...draggableProps}\n    >\n      <FolderOutlined />\n      <Input\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n        placeholder={initialValue.title}\n      />\n      <div>\n        <Tooltip placement=\"right\" title={<FormattedMessage id=\"create\" />}>\n          <Button\n            disabled={!value}\n            size=\"small\"\n            className=\"btn-create-lesson\"\n            type=\"primary\"\n            icon={<ExportOutlined />}\n            onClick={() => onCreate(value)}\n          />\n        </Tooltip>\n      </div>\n    </div>\n  );\n});\n","export const RecommenderSvg = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"23.01\" height=\"18.077\" viewBox=\"0 0 23.01 18.077\">\n    <g id=\"Group_5\" data-name=\"Group 5\" transform=\"translate(-97.496 -306.965)\">\n      <path\n        id=\"Path_2\"\n        data-name=\"Path 2\"\n        d=\"M138.934,401.557s8.685.579,12.972-6.836-11.893-6.747-7.254-1.854,16.02-8.07,16.02-8.07\"\n        transform=\"translate(-40.906 -77.037)\"\n        fill=\"none\"\n        stroke=\"#58c35d\"\n        strokeLinecap=\"round\"\n        strokeWidth=\"1\"\n      />\n      <path\n        id=\"Path_3\"\n        data-name=\"Path 3\"\n        d=\"M115.761,306.465h5.332V311.8\"\n        transform=\"translate(-1.087 1)\"\n        fill=\"none\"\n        stroke=\"#58c35d\"\n        strokeLinecap=\"round\"\n        strokeWidth=\"1\"\n      />\n    </g>\n  </svg>\n);\n","import Icon from '@ant-design/icons';\nimport type { CustomIconComponentProps } from '@ant-design/icons/lib/components/Icon';\nimport { RecommenderSvg } from './recommender';\n\nexport const RecommenderIcon = (props: Partial<CustomIconComponentProps>) => (\n  <Icon component={RecommenderSvg} {...props} />\n);\n","import type { AxiosRequestConfig } from '@umijs/max';\nimport { request } from 'umi';\n\n/**  GET /api/admin/recommender/course/:courseId */\nexport async function getCourseRecommender(courseId?: number, options?: AxiosRequestConfig) {\n  return request<API.DefaultResponse<API.Recommender>>(\n    `/api/admin/recommender/course/${courseId} `,\n    {\n      method: 'GET',\n      /* useCache: true */ useCache: false,\n      ...(options || {}),\n    },\n  );\n}\n\n/**  GET /api/admin/recommender/lesson/:lessonId/topic */\nexport async function getExerciseRecommender(lessonId: number, options?: AxiosRequestConfig) {\n  return request<API.DefaultResponse<API.RecommenderExercise>>(\n    `/api/admin/recommender/lesson/${lessonId}/topic `,\n    {\n      method: 'GET',\n      /* useCache: true */ useCache: false,\n      ...(options || {}),\n    },\n  );\n}\n","import { getCourseRecommender, getExerciseRecommender } from '@/services/escola-lms/recommender';\nimport { useEffect, useState } from 'react';\n\nexport type RecommenderSimpleTopicType = 'OEmbed' | 'PDF' | 'Video' | 'RichText' | 'Image' | 'H5P';\n\nexport const useCourseRecommender = (courseId: number) => {\n  const [course, setCourse] = useState<API.Recommender>();\n\n  useEffect(() => {\n    getCourseRecommender(courseId).then((res) => res.success && setCourse(res.data));\n  }, [courseId]);\n\n  return course;\n};\n\nexport const useExerciseRecommender = (lessonId: number) => {\n  const [exercise, setExercise] = useState<API.RecommenderExercise>();\n\n  useEffect(() => {\n    getExerciseRecommender(lessonId).then((res) => res.success && setExercise(res.data));\n  }, [lessonId]);\n\n  return exercise;\n};\n\nexport const getTopicType = (topic: API.RecommenderTopicType): RecommenderSimpleTopicType =>\n  topic.includes('H5P') ? 'H5P' : topic;\n\nexport const createText = (topic: API.RecommenderTopicType) =>\n  topic?.includes('.') && topic?.split('.').join(' ');\n\nexport const formatRecommenderProbability = (probability: number): number =>\n  Math.min(Math.ceil(Math.abs(probability) * 100), 100);\n","import { Button } from 'antd';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport { FormattedMessage } from 'umi';\nimport { createText, formatRecommenderProbability } from './utils';\n\ninterface ExerciseRecommenderProps {\n  recommendedData: API.RecommenderExercise;\n  createTopic: () => void;\n}\n\nexport const ExerciseRecommender: React.FC<ExerciseRecommenderProps> = ({\n  recommendedData,\n  createTopic,\n}) => (\n  <>\n    <Paragraph className=\"recommender__paragraph\">\n      <FormattedMessage id=\"recommender.add_exercise\" />\n      <span className=\"recommender__paragraph--span\">{`${createText(\n        recommendedData?.topic_type,\n      )},`}</span>\n      <br />\n      <FormattedMessage id=\"recommender.increase\" />\n      <span className=\"recommender__paragraph--span\">\n        {`${formatRecommenderProbability(recommendedData.probability)}%.`}\n      </span>\n    </Paragraph>\n    <Button className=\"recommender__button\" type=\"default\" onClick={createTopic}>\n      <FormattedMessage id=\"recommender.add_button\" />\n    </Button>\n  </>\n);\n","import Paragraph from 'antd/lib/typography/Paragraph';\nimport { FormattedMessage } from 'umi';\n\nexport const InfoRecommender: React.FC = () => (\n  <Paragraph className=\"recommender__paragraph\">\n    <FormattedMessage id=\"recommender.save_exercise\" />\n  </Paragraph>\n);\n","import { FormattedMessage } from 'umi';\n\nexport const RecommenderPopoverContent: React.FC = () => (\n  <div className=\"recommender__popover-wrapper\">\n    <h3 className=\"recommender__popover-title\">\n      <FormattedMessage id=\"recommender_info.title\" />\n    </h3>\n    <strong className=\"recommender__popover-text\">\n      <FormattedMessage id=\"recommender_info.first_title\" />\n    </strong>\n    <p className=\"recommender__popover-text\">\n      <FormattedMessage id=\"recommender_info.first_text\" />\n    </p>\n    <strong className=\"recommender__popover-text\">\n      <FormattedMessage id=\"recommender_info.second_title\" />\n    </strong>\n    <p className=\"recommender__popover-text\">\n      <FormattedMessage id=\"recommender_info.second_text\" />\n    </p>\n  </div>\n);\n","import { InfoCircleOutlined } from '@ant-design/icons';\nimport { Popover } from 'antd';\nimport { RecommenderPopoverContent } from './RecommenderPopoverContent';\n\nexport const RecommenderPopoverInfo: React.FC = () => (\n  <Popover\n    placement=\"bottomLeft\"\n    content={<RecommenderPopoverContent />}\n    trigger=\"click\"\n    showArrow={false}\n    className=\"recommender__popover\"\n  >\n    <InfoCircleOutlined style={{ color: '#2DAC34' }} />\n  </Popover>\n);\n","import { RecommenderIcon } from '@/icons';\nimport { RecommenderType, TopicType } from '@/services/escola-lms/enums';\nimport { Spin } from 'antd';\nimport React, { useCallback, useContext } from 'react';\nimport { FormattedMessage, history } from 'umi';\nimport { Context } from '../../../Context';\nimport { ExerciseRecommender } from './ExerciseRecommender';\nimport { InfoRecommender } from './InfoRecommender';\nimport { RecommenderPopoverInfo } from './RecommenderPopoverInfo';\nimport { getTopicType, useExerciseRecommender } from './utils';\n\nexport const Recommender: React.FC<{\n  courseId: number;\n  lessonId: number;\n  recommenderType?: RecommenderType;\n}> = ({ courseId, lessonId, recommenderType = RecommenderType.Exercise }) => {\n  const { addNewTopic } = useContext(Context);\n  const exercise = useExerciseRecommender(lessonId);\n\n  const onTopicCreate = useCallback(\n    (lesson_id: number, topic_type: TopicType) => {\n      if (addNewTopic) {\n        const newTopic = addNewTopic(lesson_id, topic_type);\n        history.push(`/courses/list/${courseId}/program/?topic=${newTopic.id}`);\n      }\n    },\n    [addNewTopic],\n  );\n\n  const getRecommender = (type: RecommenderType) => {\n    switch (type) {\n      case RecommenderType.Info:\n        return <InfoRecommender />;\n      case RecommenderType.Exercise:\n        return (\n          exercise && (\n            <ExerciseRecommender\n              createTopic={() =>\n                onTopicCreate(lessonId, TopicType[getTopicType(exercise?.topic_type)])\n              }\n              recommendedData={exercise}\n            />\n          )\n        );\n      default:\n        return <FormattedMessage id=\"recommender.no_recommendation\" />;\n    }\n  };\n\n  const isLoading = recommenderType === RecommenderType.Exercise && !exercise;\n\n  return (\n    <div className=\"recommender\">\n      <RecommenderIcon style={{ marginTop: '4px' }} />\n      <div>\n        <h3 className=\"recommender__title\">\n          <FormattedMessage id=\"recommender.title\" />\n        </h3>\n        {isLoading && <Spin />}\n        {getRecommender(recommenderType)}\n      </div>\n      <RecommenderPopoverInfo />\n    </div>\n  );\n};\n","import { RecommenderIcon } from '@/icons';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport { FormattedMessage } from 'umi';\nimport { RecommenderPopoverInfo } from './RecommenderPopoverInfo';\nimport { formatRecommenderProbability, useCourseRecommender } from './utils';\n\ninterface CourseRecommenderProps {\n  courseId: number;\n}\n\nexport const CourseRecommender: React.FC<CourseRecommenderProps> = ({ courseId }) => {\n  const recommendedData = useCourseRecommender(courseId);\n  if (recommendedData && recommendedData.probability && recommendedData.probability > -0.016) {\n    return null;\n  }\n  return recommendedData ? (\n    <div className=\"recommender\">\n      <RecommenderIcon style={{ marginTop: '4px' }} />\n      <div>\n        <h3 className=\"recommender__title\">\n          <FormattedMessage id=\"recommender.title\" />\n        </h3>\n\n        <Paragraph className=\"recommender__paragraph\">\n          <FormattedMessage id=\"recommender.finish\" />\n          <strong>{`${formatRecommenderProbability(recommendedData.probability)}%. `}</strong>\n          <br />\n          <FormattedMessage id=\"recommender.too_long\" />\n        </Paragraph>\n      </div>\n      <RecommenderPopoverInfo />\n    </div>\n  ) : (\n    <></>\n  );\n};\n","import PACKAGES from '@/consts/packages';\nimport {\n  AudioOutlined,\n  CarryOutOutlined,\n  FileImageOutlined,\n  FilePdfOutlined,\n  FileTextOutlined,\n  FundOutlined,\n  InteractionOutlined,\n  MinusOutlined,\n  PercentageOutlined,\n  PlusOutlined,\n  VideoCameraAddOutlined,\n  YoutubeOutlined,\n} from '@ant-design/icons';\nimport { Button, Tooltip } from 'antd';\nimport { useCallback, useState } from 'react';\n\nimport { topicTypeToSettingName } from '@/pages/Settings/global';\nimport { TopicType } from '@/services/escola-lms/enums';\nimport { createHavePackageInstalled } from '@/utils/access';\nimport { FormattedMessage, useModel } from 'umi';\nimport '../types.css';\n\nconst topicTypes = [\n  {\n    type: TopicType.RichText,\n    icon: <FileTextOutlined />,\n    title: <FormattedMessage id=\"RichText\" />,\n  },\n  {\n    type: TopicType.OEmbed,\n    icon: <YoutubeOutlined />,\n    title: <FormattedMessage id=\"OEmbed\" />,\n  },\n  {\n    type: TopicType.Audio,\n    icon: <AudioOutlined />,\n    title: <FormattedMessage id=\"Audio\" />,\n  },\n  {\n    type: TopicType.Video,\n    icon: <VideoCameraAddOutlined />,\n    title: <FormattedMessage id=\"Video\" />,\n  },\n  {\n    type: TopicType.H5P,\n    icon: <InteractionOutlined />,\n    title: <FormattedMessage id=\"H5P\" />,\n  },\n  {\n    type: TopicType.Image,\n    icon: <FileImageOutlined />,\n    title: <FormattedMessage id=\"Image\" />,\n  },\n  {\n    type: TopicType.PDF,\n    icon: <FilePdfOutlined />,\n    title: <FormattedMessage id=\"PDF\" />,\n  },\n  {\n    type: TopicType.SCORM,\n    icon: <FundOutlined />,\n    title: <FormattedMessage id=\"SCORM\" />,\n  },\n  {\n    type: TopicType.Project,\n    icon: <CarryOutOutlined />,\n    title: <FormattedMessage id=\"Project\" />,\n  },\n  {\n    type: TopicType.GiftQuiz,\n    icon: <PercentageOutlined />,\n    title: <FormattedMessage id=\"Quiz\" />,\n  },\n];\n\nexport const RecommenderTopicSelector: React.FC<{\n  onSelected: (type: TopicType) => void;\n  positionsToHide?: (TopicType | 'lesson')[];\n}> = ({ onSelected, positionsToHide }) => {\n  const [open, setOpen] = useState(false);\n\n  const { initialState } = useModel('@@initialState');\n\n  const setSelected = useCallback((type: TopicType) => {\n    setOpen(false);\n    onSelected(type);\n  }, []);\n\n  const havePackageInstalled = useCallback(createHavePackageInstalled(initialState?.packages), [\n    initialState?.packages,\n  ]);\n\n  const topicTypeIsDisabled = useCallback(\n    (type: TopicType) => {\n      const key = Object.keys(TopicType)\n        // TODO: #1020 fix types\n        // @ts-ignore\n        .filter((x) => TopicType[x] == type)\n        .pop();\n\n      const value =\n        key &&\n        initialState?.config?.filter((item) => item.key === topicTypeToSettingName(key))[0]?.data;\n\n      if (!!value) {\n        return true;\n      }\n\n      switch (type) {\n        case TopicType.GiftQuiz:\n          return !havePackageInstalled(PACKAGES.TopicTypeGift);\n        case TopicType.SCORM:\n          return !havePackageInstalled(PACKAGES.Scorm);\n        case TopicType.Project:\n          return !havePackageInstalled(PACKAGES.TopicTypeProject);\n        default:\n          return !havePackageInstalled(PACKAGES.TopicTypes);\n      }\n    },\n    [initialState],\n  );\n\n  return (\n    <div\n      className={`topic-types-selector topic-types-selector__recommender-wrapper\n       ${open ? 'topic-types-selector--visible' : ''}`}\n    >\n      <Button\n        type=\"text\"\n        size=\"small\"\n        onClick={() => setOpen((prev) => !prev)}\n        className=\"topic-types-selector__recommender--add-btn\"\n        icon={open ? <MinusOutlined /> : <PlusOutlined />}\n      >\n        <FormattedMessage id=\"recommender.add_new_exercise\" />\n      </Button>\n\n      <div\n        className={`${'topic-types-selector__recommender'}\n          ${open ? 'topic-types-selector__recommender--active' : ''}`}\n      >\n        {topicTypes.map(\n          (topic) =>\n            !positionsToHide?.includes(topic.type) &&\n            !topicTypeIsDisabled(topic.type) && (\n              <Tooltip title={topic.title} key={topic.type}>\n                <Button block onClick={() => setSelected(topic.type)} icon={topic.icon} />\n              </Tooltip>\n            ),\n        )}\n      </div>\n    </div>\n  );\n};\n","import PACKAGES from '@/consts/packages';\nimport {\n  AudioOutlined,\n  CarryOutOutlined,\n  FileImageOutlined,\n  FilePdfOutlined,\n  FileTextOutlined,\n  FundOutlined,\n  InteractionOutlined,\n  //CaretUpOutlined,\n  //CaretDownOutlined,\n  PercentageOutlined,\n  PicCenterOutlined,\n  PlusOutlined,\n  VideoCameraAddOutlined,\n  YoutubeOutlined,\n} from '@ant-design/icons';\nimport { Button, Divider, Space, Tooltip } from 'antd';\nimport { useCallback, useState } from 'react';\n\nimport { TopicType } from '@/services/escola-lms/enums';\nimport { FormattedMessage, useIntl, useModel } from 'umi';\nimport './types.css';\n\nimport { topicTypeToSettingName } from '@/pages/Settings/global';\n\nexport const TopicTypesSelector: React.FC<{\n  onSelected: (type: TopicType) => void;\n  onNewLesson: () => void;\n  positionsToHide?: (TopicType | 'lesson')[];\n  depth?: number;\n}> = ({ onSelected, onNewLesson, positionsToHide, depth = 0 }) => {\n  const [open, setOpen] = useState<boolean>(false);\n\n  const { initialState } = useModel('@@initialState');\n  const intl = useIntl();\n\n  const setSelected = useCallback((type: TopicType) => {\n    setOpen(false);\n    onSelected(type);\n  }, []);\n\n  const topicTypeIsDisabled = useCallback(\n    (type: TopicType) => {\n      const key = Object.keys(TopicType)\n        .filter((x) => TopicType[x as keyof typeof TopicType] == type)\n        .pop();\n\n      const value =\n        key &&\n        initialState?.config?.filter((item) => item.key === topicTypeToSettingName(key))[0]?.data;\n\n      if (!!value) {\n        return true;\n      }\n\n      switch (type) {\n        case TopicType.GiftQuiz:\n          return !(initialState?.packages && initialState?.packages?.[PACKAGES.TopicTypeGift]);\n        case TopicType.SCORM:\n          return !(initialState?.packages && initialState?.packages?.[PACKAGES.Scorm]);\n        case TopicType.Project:\n          return !(initialState?.packages && initialState?.packages?.[PACKAGES.TopicTypeProject]);\n        default:\n          return !(initialState?.packages && initialState?.packages?.[PACKAGES.TopicTypes]);\n      }\n    },\n    [initialState],\n  );\n\n  return (\n    <div className={`topic-types-selector ${open ? 'topic-types-selector--visible' : ''}`}>\n      <Space>\n        <Tooltip placement=\"top\" title={<FormattedMessage id=\"add_new_topic\" />}>\n          <Button\n            type=\"primary\"\n            size=\"small\"\n            onClick={() => setOpen((prev) => !prev)}\n            icon={<PlusOutlined />}\n          />\n        </Tooltip>\n      </Space>\n\n      <div\n        className={`topic-types-selector__list ${\n          open ? 'topic-types-selector__list--visible' : ''\n        }`}\n      >\n        {!positionsToHide?.includes('lesson') && (\n          <>\n            <Tooltip\n              placement=\"right\"\n              title={\n                intl.messages[`Lesson_level-${depth}`] ? (\n                  <FormattedMessage id={`Lesson_level-${depth}`} />\n                ) : (\n                  <FormattedMessage id=\"Lesson\" defaultMessage=\"Lesson\" />\n                )\n              }\n            >\n              <Button\n                block\n                onClick={() => {\n                  setOpen(false);\n                  onNewLesson();\n                }}\n                icon={<PicCenterOutlined />}\n              />\n            </Tooltip>\n            <Divider />\n          </>\n        )}\n        {!positionsToHide?.includes(TopicType.RichText) &&\n          !topicTypeIsDisabled(TopicType.RichText) && (\n            <Tooltip placement=\"right\" title={<FormattedMessage id=\"RichText\" />}>\n              <Button\n                block\n                onClick={() => setSelected(TopicType.RichText)}\n                icon={<FileTextOutlined />}\n              />\n            </Tooltip>\n          )}\n        {!positionsToHide?.includes(TopicType.OEmbed) && !topicTypeIsDisabled(TopicType.OEmbed) && (\n          <Tooltip placement=\"right\" title={<FormattedMessage id=\"OEmbed\" />}>\n            <Button\n              block\n              onClick={() => setSelected(TopicType.OEmbed)}\n              icon={<YoutubeOutlined />}\n            />\n          </Tooltip>\n        )}\n        {!positionsToHide?.includes(TopicType.Audio) && !topicTypeIsDisabled(TopicType.Audio) && (\n          <Tooltip placement=\"right\" title={<FormattedMessage id=\"Audio\" />}>\n            <Button block onClick={() => setSelected(TopicType.Audio)} icon={<AudioOutlined />} />\n          </Tooltip>\n        )}\n        {!positionsToHide?.includes(TopicType.Video) && !topicTypeIsDisabled(TopicType.Video) && (\n          <Tooltip placement=\"right\" title={<FormattedMessage id=\"Video\" />}>\n            <Button\n              block\n              onClick={() => setSelected(TopicType.Video)}\n              icon={<VideoCameraAddOutlined />}\n            />\n          </Tooltip>\n        )}\n        {!positionsToHide?.includes(TopicType.H5P) && !topicTypeIsDisabled(TopicType.H5P) && (\n          <Tooltip placement=\"right\" title={<FormattedMessage id=\"H5P\" />}>\n            <Button\n              block\n              onClick={() => setSelected(TopicType.H5P)}\n              icon={<InteractionOutlined />}\n            />\n          </Tooltip>\n        )}\n        {!positionsToHide?.includes(TopicType.Image) && !topicTypeIsDisabled(TopicType.Image) && (\n          <Tooltip placement=\"right\" title={<FormattedMessage id=\"Image\" />}>\n            <Button\n              block\n              onClick={() => setSelected(TopicType.Image)}\n              icon={<FileImageOutlined />}\n            />\n          </Tooltip>\n        )}\n        {!positionsToHide?.includes(TopicType.PDF) && !topicTypeIsDisabled(TopicType.PDF) && (\n          <Tooltip placement=\"right\" title={<FormattedMessage id=\"PDF\" />}>\n            <Button block onClick={() => setSelected(TopicType.PDF)} icon={<FilePdfOutlined />} />\n          </Tooltip>\n        )}\n        {!positionsToHide?.includes(TopicType.SCORM) && !topicTypeIsDisabled(TopicType.SCORM) && (\n          <Tooltip placement=\"right\" title={<FormattedMessage id=\"SCORM\" />}>\n            <Button block onClick={() => setSelected(TopicType.SCORM)} icon={<FundOutlined />} />\n          </Tooltip>\n        )}\n        {!positionsToHide?.includes(TopicType.Project) &&\n          !topicTypeIsDisabled(TopicType.Project) && (\n            <Tooltip placement=\"right\" title={<FormattedMessage id=\"Project\" />}>\n              <Button\n                block\n                onClick={() => setSelected(TopicType.Project)}\n                icon={<CarryOutOutlined />}\n              />\n            </Tooltip>\n          )}\n        {!positionsToHide?.includes(TopicType.GiftQuiz) &&\n          !topicTypeIsDisabled(TopicType.GiftQuiz) && (\n            <Tooltip placement=\"right\" title={<FormattedMessage id=\"Quiz\" />}>\n              <Button\n                block\n                onClick={() => setSelected(TopicType.GiftQuiz)}\n                icon={<PercentageOutlined />}\n              />\n            </Tooltip>\n          )}\n      </div>\n    </div>\n  );\n};\n","import type {\n  ItemId,\n  TreeData,\n  TreeDestinationPosition,\n  TreeItem,\n  TreeSourcePosition,\n} from '@atlaskit/tree';\nimport { moveItemOnTree } from '@atlaskit/tree';\nimport type { Dispatch, SetStateAction } from 'react';\n\n// UTIL TYPES\nexport enum MovedType {\n  New = 'new',\n  Lesson = 'lesson',\n  Topic = 'topic',\n}\nexport type StringifyId<Obj extends { id?: number }> = Omit<Obj, 'id'> & { id: string };\nexport type LessonDeeplyStringifyId = Omit<StringifyId<API.Lesson>, 'lessons' | 'topics'> & {\n  lessons?: StringifyId<API.Lesson>[];\n  topics?: StringifyId<API.Topic>[];\n};\n\nconst mutateTopicsId = (topics: API.Topic[], depth: number): StringifyId<API.Topic>[] =>\n  topics.map((t) => ({ ...t, id: `topic-${t.id}-${depth}` }));\nconst mutateLessonsId = (lessons: API.Lesson[], depth: number): StringifyId<API.Lesson>[] =>\n  lessons.map((l) => ({ ...l, id: l.isNew ? `new-${l.id}-${depth}` : `lesson-${l.id}-${depth}` }));\n\nconst getLessonDeeplyStringifyId = (l: API.Lesson, depth: number): LessonDeeplyStringifyId => ({\n  ...l,\n  id: l.isNew ? `new-${l.id}-${depth}` : `lesson-${l.id}-${depth}`,\n  lessons: mutateLessonsId(l?.lessons ?? [], depth + 1),\n  topics: mutateTopicsId(l?.topics ?? [], depth + 1),\n});\n\nexport const getFlatLessonDeeplyStringifyId = (\n  lessons: API.Lesson[],\n  depth = 0,\n): LessonDeeplyStringifyId[] =>\n  lessons.reduce<LessonDeeplyStringifyId[]>(\n    (acc, l) => [\n      ...acc,\n      ...getFlatLessonDeeplyStringifyId(l?.lessons ?? [], depth + 1),\n      getLessonDeeplyStringifyId(l, depth),\n    ],\n    [],\n  );\n\nexport const getFlatTopicsStringifyId = (\n  lessons: API.Lesson[],\n  depth = 1, // Because topic has to be nested in lesson\n): StringifyId<API.Topic>[] =>\n  lessons.reduce<StringifyId<API.Topic>[]>(\n    (acc, l) => [\n      ...acc,\n      ...getFlatTopicsStringifyId(l?.lessons ?? [], depth + 1),\n      ...mutateTopicsId(l?.topics ?? [], depth),\n    ],\n    [],\n  );\n\nexport const getRootLessons = (lessons: API.Lesson[]): TreeItem[] =>\n  lessons.map((l) => {\n    const lesson = getLessonDeeplyStringifyId(l, 0);\n    const children = [...(lesson.lessons ?? []), ...(lesson.topics ?? [])].map(({ id }) => id!);\n\n    return {\n      id: lesson.id,\n      children,\n      hasChildren: children.length > 0,\n      isExpanded: true,\n      data: lesson,\n    };\n  });\n\nexport const getTreeDataItemsFromFlatLessonsAndTopics = (\n  items: (LessonDeeplyStringifyId | StringifyId<API.Topic>)[],\n  prevState?: Record<string | number, TreeItem>,\n): Record<string | number, TreeItem> =>\n  items.reduce<Record<string | number, TreeItem>>((acc, item) => {\n    let children: string[] = [];\n\n    if ('lessons' in item || 'topics' in item) {\n      children = [...(item.lessons ?? []), ...(item.topics ?? [])].map(({ id }) => id);\n    }\n\n    const isExpanded = prevState?.[`${item.id}`]?.isExpanded ?? true;\n\n    return {\n      ...acc,\n      [`${item.id}`]: {\n        id: item.id,\n        children,\n        hasChildren: children.length > 0,\n        isExpanded,\n        data: item,\n      },\n    };\n  }, {});\n\nexport const reorderIdArr = (\n  idArr: ItemId[],\n  sourceIndex: number,\n  destinationIndex: number,\n): ItemId[] => {\n  const arrCopy = [...idArr];\n  const arrCopyContextSourceIndex = sourceIndex % arrCopy.length;\n  const arrCopyContextDestinationIndex = destinationIndex % arrCopy.length;\n\n  const [removed] = arrCopy.splice(arrCopyContextSourceIndex, 1);\n  arrCopy.splice(arrCopyContextDestinationIndex, 0, removed);\n\n  return arrCopy;\n};\n\nexport const insertToIndexIdArr = (\n  idArr: ItemId[],\n  destinationIndex: number,\n  item: ItemId,\n): ItemId[] => {\n  const arrCopy = [...idArr];\n  const arrCopyContextDestinationIndex =\n    arrCopy.length === 1 || destinationIndex === arrCopy.length\n      ? destinationIndex\n      : destinationIndex % arrCopy.length;\n\n  arrCopy.splice(arrCopyContextDestinationIndex, 0, item);\n\n  return arrCopy;\n};\n\nexport const getOrdersFromReorderedArr = (idArr: ItemId[]): [number, number][] =>\n  idArr.map((id, index) => {\n    const [, strId] = id.toString().split('-');\n\n    return [+strId, index];\n  });\n\nexport const optimisticMoveThroughTree = async (\n  setState: Dispatch<SetStateAction<TreeData>>,\n  moveItemOnTreeParams: [TreeSourcePosition, TreeDestinationPosition],\n  promise: () => Promise<unknown> | Promise<API.DefaultResponse<unknown>>,\n) => {\n  let prevState: TreeData | undefined = undefined;\n  setState((prev) => {\n    prevState = prev;\n    return moveItemOnTree(prev, ...moveItemOnTreeParams);\n  });\n\n  try {\n    const res = await promise();\n    if (\n      typeof res === 'object' &&\n      res !== null &&\n      'success' in res &&\n      typeof res.success === 'boolean' &&\n      !res.success &&\n      prevState\n    ) {\n      setState(prevState);\n    }\n  } catch {\n    if (prevState) {\n      setState(prevState);\n    }\n  }\n};\n\nexport const findParentByChildrenId = (\n  treeData: TreeData,\n  childrenId: ItemId,\n): TreeItem | undefined =>\n  Object.values(treeData.items).find(({ children }) => children.includes(childrenId));\n\nexport const findChildrenIndexPosition = (\n  treeData: TreeData,\n  parentId: ItemId,\n  childrenId: ItemId,\n): number => treeData.items?.[parentId]?.children?.indexOf(childrenId) ?? -1;\n","import { FolderOpenOutlined, FolderOutlined, PlusOutlined } from '@ant-design/icons';\nimport type {\n  RenderItemParams,\n  TreeData,\n  TreeDestinationPosition,\n  TreeItem,\n  TreeSourcePosition,\n} from '@atlaskit/tree';\nimport Tree, { mutateTree } from '@atlaskit/tree';\nimport { Button, Tooltip, message } from 'antd';\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { FormattedMessage, NavLink, history, useIntl, useModel } from 'umi';\n\nimport { Context } from '@/components/ProgramForm/Context';\nimport { getTypeIcon } from '@/components/ProgramForm/ThreeColProgram/TopicForm';\nimport { getTypeName } from '@/components/ProgramForm/ThreeColProgram/TopicForm/media';\nimport PACKAGES from '@/consts/packages';\nimport { getFormData } from '@/services/api';\nimport {\n  updateLesson as apiUpdateLesson,\n  updateTopic as apiUpdateTopic,\n  sort,\n} from '@/services/escola-lms/course';\nimport { RecommenderType, TopicType } from '@/services/escola-lms/enums';\nimport { createHavePackageInstalled } from '@/utils/access';\nimport { NewLessonListItem } from '../NewLessonListItem';\nimport { Recommender } from '../Recommender';\nimport { CourseRecommender } from '../Recommender/CourseRecommender';\nimport { RecommenderTopicSelector } from '../Recommender/RecommenderTopicSelector';\nimport { TopicTypesSelector } from '../TopicTypesSelector';\nimport type { LessonDeeplyStringifyId } from './utils';\nimport {\n  MovedType,\n  findChildrenIndexPosition,\n  findParentByChildrenId,\n  getFlatLessonDeeplyStringifyId,\n  getFlatTopicsStringifyId,\n  getOrdersFromReorderedArr,\n  getRootLessons,\n  getTreeDataItemsFromFlatLessonsAndTopics,\n  insertToIndexIdArr,\n  optimisticMoveThroughTree,\n  reorderIdArr,\n} from './utils';\n\ninterface NestingSettings {\n  topic?: number;\n  lesson?: number;\n}\n\ninterface LessonListProps {\n  onNewLesson?: () => void;\n}\n\nexport const LessonList: React.FC<LessonListProps> = ({ onNewLesson }) => {\n  const { state, currentEditMode, updateLesson, addNewTopic, addNewLesson, getLessons } =\n    useContext(Context);\n  const courseId = state?.id;\n  const rootLessons = useMemo(() => getRootLessons(state?.lessons ?? []), [state?.lessons]);\n  const flatLessonsAndTopics = useMemo(\n    () => [\n      ...getFlatLessonDeeplyStringifyId(state?.lessons ?? []),\n      ...getFlatTopicsStringifyId(state?.lessons ?? []),\n    ],\n    [state?.lessons],\n  );\n  const [treeData, setTreeData] = useState<TreeData>({ rootId: 0, items: {} });\n  const { initialState } = useModel('@@initialState');\n  const intl = useIntl();\n\n  const havePackageInstalled = useCallback(createHavePackageInstalled(initialState?.packages), [\n    initialState?.packages,\n  ]);\n  useEffect(() => {\n    setTreeData((prevState) => {\n      const root: TreeItem = {\n        children: rootLessons.map(({ id }) => id),\n        id: 'root',\n        data: rootLessons,\n        isExpanded: true,\n        hasChildren: rootLessons.length > 0,\n      };\n\n      const items = getTreeDataItemsFromFlatLessonsAndTopics(flatLessonsAndTopics, prevState.items);\n      return { rootId: root.id, items: { ...items, [root.id]: root } };\n    });\n  }, [flatLessonsAndTopics]);\n\n  const onTopicCreate = useCallback(\n    (lesson_id: number, topic_type: TopicType) => {\n      if (addNewTopic) {\n        const newTopic = addNewTopic(lesson_id, topic_type);\n        history.push(`/courses/list/${courseId}/program/?topic=${newTopic.id}`);\n      }\n    },\n    [addNewTopic],\n  );\n\n  const nestingSettings = useMemo(\n    () =>\n      (initialState?.config ?? []).reduce<NestingSettings>((acc, setting) => {\n        if (setting.key === 'maxLessonsNestingInProgram') {\n          return { ...acc, lesson: setting.data };\n        }\n        if (setting.key === 'minTopicNestingInProgram') {\n          return { ...acc, topic: setting.data };\n        }\n        return acc;\n      }, {}),\n    [initialState?.config],\n  );\n\n  const getHiddenNewTopicOptions = useCallback(\n    (level: number) => {\n      const hiddenOptions: (TopicType | 'lesson')[] = [];\n\n      const maxLessonsNestingInProgram = nestingSettings?.lesson ?? 0.5;\n      const minTopicNestingInProgram = nestingSettings?.topic ?? 0.5;\n\n      if (Number.isInteger(maxLessonsNestingInProgram) && level > maxLessonsNestingInProgram) {\n        hiddenOptions.push('lesson');\n      }\n      if (Number.isInteger(minTopicNestingInProgram) && level < minTopicNestingInProgram) {\n        Object.values(TopicType).forEach((topicType) => hiddenOptions.push(topicType));\n      }\n      return hiddenOptions;\n    },\n    [nestingSettings],\n  );\n  const renderItem = useCallback(\n    ({ item, depth, provided, onExpand, onCollapse }: RenderItemParams) => {\n      const [type, strId] = item.id.toString().split('-');\n      const id = Number(strId);\n\n      const checkLastTopic = (lessonId: number, currentTopicId: string) => {\n        const lessonTopics = flatLessonsAndTopics.find((lesson) =>\n          lesson.id.includes(String(lessonId)),\n        ) as LessonDeeplyStringifyId;\n        const lastTopic = lessonTopics?.topics?.[lessonTopics.topics.length - 1];\n        return lastTopic?.id === currentTopicId;\n      };\n\n      if (type === 'new' && item.data.isNew) {\n        return (\n          <NewLessonListItem\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n            initialValue={item.data}\n            onCreate={(title: string) => {\n              const formData = getFormData({\n                ...item.data,\n                parent_lesson_id: item.data.parent_id,\n                title,\n                active: item.data.active ? 1 : 0,\n              });\n              if (updateLesson) {\n                updateLesson(id, formData);\n              }\n            }}\n          />\n        );\n      }\n\n      if (type === 'lesson') {\n        return (\n          <div\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n            className={`program-sidebar__list-item program-sidebar__list-item--lesson ${\n              currentEditMode?.mode === 'lesson' && currentEditMode.id === id\n                ? 'program-sidebar__list-item--active'\n                : ''\n            }`}\n          >\n            <div className=\"program-sidebar__text-wrap\">\n              <button\n                className=\"program-sidebar__collapse\"\n                onClick={() => (item.isExpanded ? onCollapse(item.id) : onExpand(item.id))}\n              >\n                {item.isExpanded ? <FolderOpenOutlined /> : <FolderOutlined />}\n              </button>\n              <Tooltip placement=\"top\" title={item.data.title}>\n                <NavLink\n                  to={`/courses/list/${courseId}/program/?${type}=${id}`}\n                  className=\"program-sidebar__link\"\n                >\n                  <span className=\"program-sidebar__title\">{item.data.title}</span>\n                </NavLink>\n              </Tooltip>\n            </div>\n            <TopicTypesSelector\n              onNewLesson={() => {\n                if (addNewLesson) {\n                  addNewLesson(id);\n                }\n              }}\n              onSelected={(topic_type) => onTopicCreate(id, topic_type)}\n              // depth is 0 index based and settings are 1 index based\n              positionsToHide={getHiddenNewTopicOptions(depth + 1)}\n              depth={depth}\n            />\n          </div>\n        );\n      }\n      return (\n        <>\n          <NavLink\n            className={`program-sidebar__link program-sidebar__list-item program-sidebar__list-item--topic ${\n              currentEditMode?.mode === 'topic' && currentEditMode.id === id\n                ? 'program-sidebar__list-item--active'\n                : ''\n            }`}\n            to={`/courses/list/${courseId}/program/?${type}=${id}`}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n          >\n            <Tooltip placement=\"right\" title={<FormattedMessage id={getTypeName(item.data)} />}>\n              {getTypeIcon(getTypeName(item.data))}\n            </Tooltip>\n            <span className=\"title\">{item.data.title}</span>\n          </NavLink>\n\n          {havePackageInstalled(PACKAGES.Recommender) &&\n            courseId &&\n            currentEditMode?.mode === 'topic' &&\n            currentEditMode?.value?.lesson_id &&\n            currentEditMode?.value?.lesson_id === item.data.lesson_id &&\n            checkLastTopic(currentEditMode.value.lesson_id, item.data.id) && (\n              <>\n                {flatLessonsAndTopics.length > 5 && <CourseRecommender courseId={courseId} />}\n                <Recommender\n                  courseId={courseId}\n                  lessonId={currentEditMode.value.lesson_id}\n                  recommenderType={\n                    currentEditMode.value.isNew ? RecommenderType.Info : RecommenderType.Exercise\n                  }\n                />\n                <RecommenderTopicSelector\n                  onSelected={(topic_type) => onTopicCreate(item.data.lesson_id, topic_type)}\n                  positionsToHide={getHiddenNewTopicOptions(depth + 1)}\n                />\n              </>\n            )}\n        </>\n      );\n    },\n    [courseId, currentEditMode],\n  );\n\n  const onExpand = useCallback(\n    (itemId: string | number) =>\n      setTreeData((prev) => mutateTree(prev, itemId, { isExpanded: true })),\n    [],\n  );\n\n  const onCollapse = useCallback(\n    (itemId: string | number) =>\n      setTreeData((prev) => mutateTree(prev, itemId, { isExpanded: false })),\n    [],\n  );\n\n  const onDragEnd = useCallback(\n    async (source: TreeSourcePosition, destination?: TreeDestinationPosition) => {\n      if (!destination || !courseId) return;\n      const sourceChildren = treeData.items[source.parentId].children;\n      const movedFullId = sourceChildren[source.index].toString();\n      const [movedType, movedId] = movedFullId.split('-');\n      const destinationChildren = treeData.items[destination.parentId].children;\n\n      const maxLessonsNestingInProgram = nestingSettings?.lesson;\n      const minTopicNestingInProgram = nestingSettings?.topic;\n\n      // Moving new lesson\n      if (movedType === MovedType.New) {\n        message.warning(intl.formatMessage({ id: 'new_lessons_cant_be_moved' }));\n        return;\n      }\n\n      // Nest lesson/topic into topic case\n      if (destination.parentId.toString().includes('topic')) {\n        const topicsIds = sourceChildren.filter((id) => id.toString().includes('topic'));\n        const destinationLesson = findParentByChildrenId(treeData, destination.parentId);\n        const destinationDepth =\n          Number((destinationLesson?.id ?? '').toString().split('-')?.[2] ?? -2) + 1;\n\n        if (\n          movedType === MovedType.Lesson &&\n          maxLessonsNestingInProgram !== undefined &&\n          destinationDepth > maxLessonsNestingInProgram\n        ) {\n          message.warning(\n            intl.formatMessage({ id: 'max_lesson_nesting' }, { max: maxLessonsNestingInProgram }),\n          );\n          return;\n        }\n\n        if (\n          movedType === MovedType.Topic &&\n          minTopicNestingInProgram !== undefined &&\n          destinationDepth < minTopicNestingInProgram\n        ) {\n          message.warning(\n            intl.formatMessage({ id: 'min_topic_nesting' }, { min: minTopicNestingInProgram }),\n          );\n          return;\n        }\n\n        // Change order in one lesson\n        if (destinationLesson?.id !== undefined && source.parentId === destinationLesson.id) {\n          if (movedType === MovedType.Lesson) {\n            message.warning(intl.formatMessage({ id: 'lessons_and_topics_cant_be_mixed' }));\n            return;\n          }\n\n          if (movedType === MovedType.Topic) {\n            const destinationTopicPos = findChildrenIndexPosition(\n              treeData,\n              destinationLesson.id,\n              destination.parentId,\n            );\n\n            if (destinationTopicPos < 0) {\n              return;\n            }\n\n            const reorderedArr = reorderIdArr(topicsIds, source.index, destinationTopicPos);\n            const orders = getOrdersFromReorderedArr(reorderedArr);\n\n            await optimisticMoveThroughTree(\n              setTreeData,\n              [source, { parentId: destinationLesson.id, index: destinationTopicPos }],\n              () => sort({ class: 'Topic', orders, course_id: courseId }),\n            );\n            getLessons?.();\n            return;\n          }\n        }\n\n        // traverse lesson/topic through the tree\n        if (destinationLesson?.id !== undefined && source.parentId !== destinationLesson.id) {\n          const destinationLessonsIds = destinationLesson.children.filter((id) =>\n            id.toString().includes('lesson'),\n          );\n          const destinationTopicsIds = destinationLesson.children.filter((id) =>\n            id.toString().includes('topic'),\n          );\n\n          if (movedType === MovedType.Lesson) {\n            const maxLessonPos = destinationLessonsIds.length;\n\n            const [, destinationStrId] = destinationLesson.id.toString().split('-');\n            const prevLessonState: API.Lesson = treeData.items[movedFullId].data;\n            const updatingValues = {\n              parent_lesson_id: destinationLesson.id === 'root' ? '' : +destinationStrId,\n              course_id: courseId,\n              title: prevLessonState.title,\n              order: maxLessonPos,\n            };\n\n            const formData = getFormData(updatingValues);\n\n            const reorderedArr = insertToIndexIdArr(\n              destinationLessonsIds,\n              maxLessonPos,\n              movedFullId,\n            );\n            const destinationOrders = getOrdersFromReorderedArr(reorderedArr);\n\n            await optimisticMoveThroughTree(\n              setTreeData,\n              [source, { ...destination, index: maxLessonPos }],\n              () =>\n                apiUpdateLesson(+movedId, formData).then(() =>\n                  sort({ class: 'Lesson', orders: destinationOrders, course_id: courseId }),\n                ),\n            );\n            getLessons?.();\n            return;\n          }\n\n          if (movedType === MovedType.Topic) {\n            const destinationTopicPos =\n              findChildrenIndexPosition(treeData, destinationLesson.id, destination.parentId) + 1;\n\n            if (destinationTopicPos < 1) {\n              return;\n            }\n\n            const [, destinationStrId] = destinationLesson.id.toString().split('-');\n            const updatingValues: Partial<API.Topic> = {\n              lesson_id: +destinationStrId,\n              order: destinationTopicPos,\n            };\n\n            const reorderedArr = insertToIndexIdArr(\n              destinationTopicsIds,\n              destinationTopicPos - destinationLessonsIds.length,\n              movedFullId,\n            );\n            const destinationOrders = getOrdersFromReorderedArr(reorderedArr);\n\n            const formData = getFormData(updatingValues);\n\n            await optimisticMoveThroughTree(\n              setTreeData,\n              [source, { parentId: destinationLesson.id, index: destinationTopicPos }],\n              () =>\n                apiUpdateTopic(+movedId, formData).then(() =>\n                  sort({ class: 'Topic', orders: destinationOrders, course_id: courseId }),\n                ),\n            );\n            getLessons?.();\n          }\n        }\n        return;\n      }\n\n      // Topics to root case\n      if (destination.parentId === 'root' && movedType === MovedType.Topic) {\n        message.warning(intl.formatMessage({ id: 'topic_cant_be_in_root' }));\n        return;\n      }\n\n      // Change order in one lesson\n      if (source.parentId === destination.parentId && destination.index !== undefined) {\n        const lessonsIds = sourceChildren.filter((id) => id.toString().includes('lesson'));\n        const topicsIds = sourceChildren.filter((id) => id.toString().includes('topic'));\n\n        // move lessons only around 0 and x index\n        if (movedType === MovedType.Lesson) {\n          const minLessonPos = 0;\n          const maxLessonPos = lessonsIds.length - 1;\n\n          if (destination.index < minLessonPos || destination.index > maxLessonPos) {\n            message.warning(intl.formatMessage({ id: 'lessons_and_topics_cant_be_mixed' }));\n            return;\n          }\n\n          const reorderedArr = reorderIdArr(lessonsIds, source.index, destination.index);\n          const orders = getOrdersFromReorderedArr(reorderedArr);\n\n          await optimisticMoveThroughTree(setTreeData, [source, destination], () =>\n            sort({ class: 'Lesson', orders, course_id: courseId }),\n          );\n          getLessons?.();\n          return;\n        }\n\n        // move topics only around lessons length index and last children index\n        if (movedType === MovedType.Topic) {\n          const minTopicPos = lessonsIds.length;\n          const maxTopicPos = sourceChildren.length - 1;\n\n          if (destination.index < minTopicPos || destination.index > maxTopicPos) {\n            message.warning(intl.formatMessage({ id: 'lessons_and_topics_cant_be_mixed' }));\n            return;\n          }\n\n          const reorderedArr = reorderIdArr(topicsIds, source.index, destination.index);\n          const orders = getOrdersFromReorderedArr(reorderedArr);\n\n          await optimisticMoveThroughTree(setTreeData, [source, destination], () =>\n            sort({ class: 'Topic', orders, course_id: courseId }),\n          );\n          getLessons?.();\n          return;\n        }\n      }\n\n      // traverse lesson/topic through the tree\n      if (source.parentId !== destination.parentId) {\n        const destinationLessonsIds = destinationChildren.filter((id) =>\n          id.toString().includes('lesson'),\n        );\n        const destinationTopicsIds = destinationChildren.filter((id) =>\n          id.toString().includes('topic'),\n        );\n        const destinationDepth = Number(destination.parentId.toString().split('-')?.[2] ?? -2) + 1;\n\n        if (\n          movedType === MovedType.Lesson &&\n          maxLessonsNestingInProgram !== undefined &&\n          destinationDepth > maxLessonsNestingInProgram\n        ) {\n          message.warning(\n            intl.formatMessage({ id: 'max_lesson_nesting' }, { max: maxLessonsNestingInProgram }),\n          );\n          return;\n        }\n\n        if (\n          movedType === MovedType.Topic &&\n          minTopicNestingInProgram !== undefined &&\n          destinationDepth < minTopicNestingInProgram\n        ) {\n          message.warning(\n            intl.formatMessage({ id: 'min_topic_nesting' }, { min: minTopicNestingInProgram }),\n          );\n          return;\n        }\n\n        if (movedType === MovedType.Lesson) {\n          const minLessonPos = 0;\n          const maxLessonPos = destinationLessonsIds.length;\n          const destIndex = destination.index ?? maxLessonPos;\n\n          if (\n            (maxLessonPos !== 0 && destIndex < minLessonPos) ||\n            (maxLessonPos !== 0 && destIndex > maxLessonPos)\n          ) {\n            message.warning(intl.formatMessage({ id: 'lessons_and_topics_cant_be_mixed' }));\n            return;\n          }\n\n          const [, destinationStrId] = destination.parentId.toString().split('-');\n          const prevLessonState: API.Lesson = treeData.items[movedFullId].data;\n          const updatingValues = {\n            parent_lesson_id: destination.parentId === 'root' ? '' : +destinationStrId,\n            course_id: courseId,\n            title: prevLessonState.title,\n            order: destIndex,\n          };\n\n          const formData = getFormData(updatingValues);\n\n          const reorderedArr = insertToIndexIdArr(destinationLessonsIds, destIndex, movedFullId);\n          const destinationOrders = getOrdersFromReorderedArr(reorderedArr);\n\n          await optimisticMoveThroughTree(\n            setTreeData,\n            [source, { ...destination, index: destIndex }],\n            () =>\n              apiUpdateLesson(+movedId, formData).then(() =>\n                sort({ class: 'Lesson', orders: destinationOrders, course_id: courseId }),\n              ),\n          );\n          getLessons?.();\n          return;\n        }\n\n        if (movedType === MovedType.Topic) {\n          const minTopicPos = destinationLessonsIds.length;\n          const maxTopicPos = destinationChildren.length;\n          const destIndex = destination.index ?? maxTopicPos;\n\n          if (\n            (minTopicPos !== 0 && maxTopicPos !== 0 && destIndex < minTopicPos) ||\n            (minTopicPos !== 0 && maxTopicPos !== 0 && destIndex > maxTopicPos)\n          ) {\n            message.warning(intl.formatMessage({ id: 'lessons_and_topics_cant_be_mixed' }));\n            return;\n          }\n\n          const [, destinationStrId] = destination.parentId.toString().split('-');\n          const updatingValues: Partial<API.Topic> = {\n            lesson_id: +destinationStrId,\n            order: destIndex,\n          };\n\n          const reorderedArr = insertToIndexIdArr(\n            destinationTopicsIds,\n            destIndex - destinationLessonsIds.length,\n            movedFullId,\n          );\n          const destinationOrders = getOrdersFromReorderedArr(reorderedArr);\n\n          const formData = getFormData(updatingValues);\n\n          await optimisticMoveThroughTree(\n            setTreeData,\n            [source, { ...destination, index: destIndex }],\n            () =>\n              apiUpdateTopic(+movedId, formData).then(() =>\n                sort({ class: 'Topic', orders: destinationOrders, course_id: courseId }),\n              ),\n          );\n          getLessons?.();\n        }\n      }\n    },\n    [intl, treeData, courseId, nestingSettings],\n  );\n\n  return (\n    <div style={{ height: '100%' }}>\n      <Tree\n        offsetPerLevel={9}\n        tree={treeData}\n        onExpand={onExpand}\n        onCollapse={onCollapse}\n        onDragEnd={onDragEnd}\n        renderItem={renderItem}\n        isDragEnabled\n        isNestingEnabled\n      />\n      <Button\n        onClick={onNewLesson}\n        type=\"primary\"\n        className=\"program-sidebar__add-btn\"\n        icon={<PlusOutlined />}\n      >\n        <span>\n          <FormattedMessage id=\"add_lesson\" />\n        </span>\n      </Button>\n    </div>\n  );\n};\n","import { Spin } from 'antd';\nimport { useCallback, useContext } from 'react';\nimport { history } from 'umi';\n\nimport { Context } from '@/components/ProgramForm/Context';\nimport { LessonList } from './LessonList';\nimport './index.css';\n\nexport const CurriculumList = () => {\n  const { state, addNewLesson } = useContext(Context);\n\n  // TODO, #1019 there should be clone lesson button\n\n  const onNew = useCallback(() => {\n    if (addNewLesson && state) {\n      const newLesson = addNewLesson();\n      history.push(`/courses/list/${state.id}/program/?lesson=${newLesson.id}`);\n    }\n  }, [addNewLesson, state]);\n\n  if (state && state.lessons) {\n    return (\n      <aside\n        className={`program-sidebar program-sidebar--left ${\n          state.lessons.length > 0 ? '' : 'program-sidebar--empty'\n        }`}\n      >\n        <LessonList onNewLesson={onNew} />\n      </aside>\n    );\n  }\n\n  return (\n    <div>\n      <Spin />\n    </div>\n  );\n};\n\nexport default CurriculumList;\n","import { Col, Row, Spin, Typography } from 'antd';\nimport { useContext } from 'react';\n\nimport { Context } from '@/components/ProgramForm/Context';\n\nimport { FormattedMessage } from 'react-intl';\nimport LessonForm from './LessonForm/index';\nimport List from './List/index';\nimport TopicForm from './TopicForm/index';\n\nexport const Curriculum = () => {\n  const { state /*, sortLesson */, currentEditMode } = useContext(Context);\n\n  const { Title } = Typography;\n\n  /*\n  const onSort = useCallback(\n    (lesson: API.Lesson, up: boolean) => {\n      return lesson.id && sortLesson && sortLesson(lesson.id, up);\n    },\n    [sortLesson],\n  );\n  */\n\n  if (state && state.lessons) {\n    return (\n      <div className=\"course-block\">\n        <Row gutter={16}>\n          <Col span={4}>\n            <List />\n          </Col>\n          <Col span={24 - 4}>\n            {currentEditMode && currentEditMode.mode === 'lesson' && currentEditMode.value && (\n              <LessonForm key={currentEditMode.id} />\n            )}\n            {currentEditMode && currentEditMode.mode === 'topic' && currentEditMode.value && (\n              <TopicForm key={currentEditMode.id} />\n            )}\n            {currentEditMode && currentEditMode.mode === 'init' && (\n              <Row\n                style={{\n                  height: '100%',\n                }}\n              >\n                <Col span={16}>\n                  <div className={'program__empty-message'}>\n                    {state.lessons.length > 0 ? (\n                      <Title level={4}>\n                        <FormattedMessage id=\"program_form_not_selected_list_message\" />\n                      </Title>\n                    ) : (\n                      <Title level={4}>\n                        <FormattedMessage id=\"program_form_empty_list_message\" />\n                      </Title>\n                    )}\n                  </div>\n                </Col>\n                <Col span={8}>\n                  <aside className=\"program-sidebar program-sidebar--right\" />\n                </Col>\n              </Row>\n            )}\n          </Col>\n        </Row>\n        <div className=\"curriculum-lessons-wrapper\" />\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <Spin />\n    </div>\n  );\n};\n\nexport default Curriculum;\n","import React from 'react';\n\nimport { AppContext } from '@/components/ProgramForm/Context';\nimport ThreeColProgram from '@/components/ProgramForm/ThreeColProgram';\n\nexport const ProgramForm: React.FC<{\n  id: number | string;\n}> = ({ id }) => {\n  return (\n    <AppContext id={Number(id)}>\n      <ThreeColProgram />{' '}\n    </AppContext>\n  );\n};\n\nexport default ProgramForm;\n","import type { AxiosRequestConfig } from '@umijs/max';\n\nimport { request } from 'umi';\n\nexport async function projectSolutions(\n  params: API.ProjectSolutionListParams,\n  options?: AxiosRequestConfig,\n) {\n  return request<API.ProjectSolutionList>('/api/admin/topic-project-solutions', {\n    params: {\n      ...params,\n      per_page: params.pageSize,\n      page: params.current,\n    },\n    method: 'GET',\n    /* useCache: true */ useCache: false,\n    ...(options || {}),\n  });\n}\n\nexport async function deleteProjectSolution(id: number, options?: AxiosRequestConfig) {\n  return request<API.DefaultResponse<API.ProjectSolution>>(\n    `/api/admin/topic-project-solutions/${id}`,\n    {\n      method: 'DELETE',\n      ...(options || {}),\n    },\n  );\n}\n","import { DeleteOutlined } from '@ant-design/icons';\nimport ProTable, { type ProColumns } from '@ant-design/pro-table';\nimport { Button, Popconfirm, Tooltip, message } from 'antd';\nimport { format } from 'date-fns';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { FormattedMessage, Link, useIntl } from 'umi';\n\nimport TypeButtonDrawer from '@/components/TypeButtonDrawer';\nimport UserSelect from '@/components/UserSelect';\nimport { DATETIME_FORMAT } from '@/consts/dates';\nimport { program } from '@/services/escola-lms/course';\nimport { TopicType } from '@/services/escola-lms/enums';\nimport { deleteProjectSolution, projectSolutions } from '@/services/escola-lms/projects';\n\nconst handleRemove = async (id: number) => {\n  const res = await deleteProjectSolution(id);\n  if (res.success) {\n    message.success(res.message);\n  }\n  return true;\n};\n\nconst getFlatTopics = (lessons: API.Lesson[]): API.Topic[] =>\n  lessons.reduce<API.Topic[]>(\n    (acc, l) => [...acc, ...(l.lessons ? getFlatTopics(l.lessons) : []), ...(l.topics ?? [])],\n    [],\n  );\n\ninterface Props {\n  courseId?: number;\n}\n\nexport const ProjectsList: React.FC<Props> = ({ courseId }) => {\n  const intl = useIntl();\n\n  const [projectTopics, setProjectTopics] = useState<API.TopicProject[]>([]);\n\n  const enumsProjectTopics = useMemo(\n    () =>\n      projectTopics.reduce<Record<string, { text: string; status: string }>>(\n        (acc, curr) => ({\n          ...acc,\n          [curr.id ?? -1]: {\n            text: curr.title ?? '',\n            status: curr.id ?? -1,\n          },\n        }),\n        {},\n      ),\n    [projectTopics],\n  );\n\n  const columns: ProColumns[] = useMemo(\n    () => [\n      {\n        title: <FormattedMessage id=\"ID\" defaultMessage=\"ID\" />,\n        dataIndex: 'id',\n        hideInSearch: true,\n        sorter: true,\n        width: '80px',\n      },\n      {\n        title: <FormattedMessage id=\"topic\" defaultMessage=\"topic\" />,\n        dataIndex: 'topic_id',\n        hideInSearch: false,\n        sorter: true,\n        valueEnum: enumsProjectTopics,\n        render: (_, record) => (\n          <Link to={`/courses/list/${courseId}/program/?topic=${record.topic_id}`}>\n            {enumsProjectTopics?.[record.topic_id]?.text ?? record.topic_id}\n          </Link>\n        ),\n      },\n      {\n        sorter: true,\n        title: <FormattedMessage id=\"user\" defaultMessage=\"user\" />,\n        dataIndex: 'user_id',\n        renderFormItem: (item, { type, defaultRender, ...rest }, form) => {\n          if (type === 'form') return null;\n\n          const stateType = form.getFieldValue('state');\n          return (\n            <UserSelect\n              {...rest}\n              state={{\n                type: stateType,\n              }}\n            />\n          );\n        },\n        render: (_, record) =>\n          record.user_id && (\n            <TypeButtonDrawer\n              key={'user'}\n              type=\"EscolaLms\\Core\\Models\\User\"\n              type_id={record.user_id}\n            />\n          ),\n      },\n      {\n        sorter: true,\n        title: <FormattedMessage id=\"created_at\" defaultMessage=\"Created at\" />,\n        dataIndex: 'created_at',\n        hideInSearch: true,\n        render: (_, record) =>\n          record.created_at && format(new Date(record.created_at), DATETIME_FORMAT),\n      },\n      {\n        title: <FormattedMessage id=\"download\" defaultMessage=\"Download\" />,\n        dataIndex: 'file_url',\n        hideInSearch: true,\n        render: (_, record) => (\n          <Button type=\"primary\" target=\"_blank\" size=\"small\" href={record.file_url}>\n            <FormattedMessage id=\"download\" defaultMessage=\"Download\" />\n          </Button>\n        ),\n      },\n      {\n        hideInSearch: true,\n        title: <FormattedMessage id=\"pages.searchTable.titleOption\" defaultMessage=\"option\" />,\n        dataIndex: 'option',\n        valueType: 'option',\n        render: (_d, record, _i, action) => [\n          <Popconfirm\n            key=\"delete\"\n            title={\n              <FormattedMessage\n                id=\"deleteQuestion\"\n                defaultMessage=\"Are you sure to delete this record?\"\n              />\n            }\n            onConfirm={async () => {\n              const success = await handleRemove(record.id);\n              if (!success) return;\n\n              action?.reload();\n            }}\n            okText={<FormattedMessage id=\"yes\" />}\n            cancelText={<FormattedMessage id=\"no\" />}\n          >\n            <Tooltip title={<FormattedMessage id=\"delete\" defaultMessage=\"delete\" />}>\n              <Button type=\"primary\" icon={<DeleteOutlined />} danger />\n            </Tooltip>\n          </Popconfirm>,\n        ],\n      },\n    ],\n    [enumsProjectTopics],\n  );\n\n  useEffect(() => {\n    if (!courseId) return;\n\n    program(courseId).then((res) => {\n      if (!res.success) return;\n\n      const flatProjectTopics = getFlatTopics(res.data.lessons).filter(\n        (t): t is API.TopicProject => t.topicable_type === TopicType.Project,\n      );\n      setProjectTopics(flatProjectTopics);\n    });\n  }, [courseId]);\n\n  return (\n    <ProTable\n      headerTitle={intl.formatMessage({\n        id: 'project_solutions',\n        defaultMessage: 'Project Uploaded Solutions',\n      })}\n      search={{\n        layout: 'vertical',\n      }}\n      rowKey=\"id\"\n      request={async ({ pageSize, current, user_id, topic_id }, sort) => {\n        const sortArr = sort && Object.entries(sort)[0];\n        const order_by = sortArr && (sortArr[0] as API.ProjectSolutionListParams['order_by']);\n        const res = await projectSolutions({\n          pageSize,\n          current,\n          course_id: courseId,\n          user_id,\n          topic_id,\n          order_by,\n          order: sortArr ? (sortArr[1] === 'ascend' ? 'ASC' : 'DESC') : undefined,\n        });\n        if (!res.success) return { data: [], total: 0, success: false };\n\n        return {\n          data: res.data,\n          total: res.meta.total,\n          success: true,\n        };\n      }}\n      columns={columns}\n    />\n  );\n};\n\nexport default ProjectsList;\n","import { FormattedMessage } from '@@/plugin-locale/localeExports';\nimport { Button, Modal } from 'antd';\nimport React from 'react';\n\ninterface CourseSuccessModalProps {\n  visible: boolean;\n  handleOk: () => void;\n  handleCancel: () => void;\n}\n\nexport const CourseSuccessModal: React.FC<CourseSuccessModalProps> = (props) => {\n  const { visible = false, handleOk, handleCancel } = props;\n\n  return (\n    <Modal\n      title={\n        <FormattedMessage\n          id=\"course_success_modal_title\"\n          defaultMessage=\"course_success_modal_title\"\n        />\n      }\n      visible={visible}\n      onOk={handleOk}\n      onCancel={handleCancel}\n      footer={[\n        <Button key=\"link\" onClick={handleCancel}>\n          <FormattedMessage\n            id=\"course_success_modal_button_cancel\"\n            defaultMessage=\"course_success_modal_button_cancel\"\n          />\n        </Button>,\n        <Button key=\"link\" type=\"primary\" onClick={handleOk}>\n          <FormattedMessage\n            id=\"course_success_modal_button_ok\"\n            defaultMessage=\"course_success_modal_button_ok\"\n          />\n        </Button>,\n      ]}\n    >\n      <p>\n        <FormattedMessage\n          id=\"course_success_modal_content\"\n          defaultMessage=\"course_success_modal_content\"\n        />\n      </p>\n    </Modal>\n  );\n};\n","import React from 'react';\n\nimport UserGroupSelect from '@/components/UserGroupSelect';\nimport UserSelect from '@/components/UserSelect';\nimport { access as fetchAccess, setAccess as postSetAccess } from '@/services/escola-lms/course';\nimport ProForm from '@ant-design/pro-form';\nimport { message } from 'antd';\nimport { FormattedMessage } from 'umi';\n\nexport const CourseAccessForm: React.FC<{\n  id: number | string;\n}> = ({ id }) => {\n  return (\n    <ProForm\n      onFinish={async (values: API.CourseAccess) => {\n        postSetAccess(Number(id), values).then((response) => {\n          if (response.success) {\n            message.success(response.message);\n          }\n        });\n      }}\n      request={() => {\n        return fetchAccess(Number(id)).then((response) => {\n          if (response.success) {\n            return {\n              users: response.data.users.map((user) => (typeof user === 'object' ? user.id : user)),\n              groups: response.data.groups.map((group) =>\n                typeof group === 'object' ? group.id : group,\n              ),\n            };\n          }\n          return {\n            users: [],\n            groups: [],\n          };\n        });\n      }}\n    >\n      <ProForm.Item\n        valuePropName=\"value\"\n        name=\"users\"\n        label={<FormattedMessage id=\"users\" defaultMessage=\"Users\" />}\n      >\n        <UserSelect multiple />\n      </ProForm.Item>\n      <ProForm.Item\n        valuePropName=\"value\"\n        name=\"groups\"\n        label={<FormattedMessage id=\"groups\" defaultMessage=\"Groups\" />}\n      >\n        <UserGroupSelect multiple />\n      </ProForm.Item>\n    </ProForm>\n  );\n};\n\nexport default CourseAccessForm;\n","import type { AxiosRequestConfig } from '@umijs/max';\nimport { request } from 'umi';\n\n/**  GET /api/admin/templates/assignable */\nexport async function assignable(\n  params?: EscolaLms.Templates.Http.Requests.TemplateListAssignableRequest,\n  options?: AxiosRequestConfig,\n) {\n  return request<API.DefaultMetaResponse<API.Certificate>>('/api/admin/templates/assignable', {\n    method: 'GET',\n    /* useCache: true */ useCache: false,\n    params,\n    ...(options || {}),\n  });\n}\n\nexport async function assign(\n  id: number,\n  body: { assignable_id: number },\n  options?: AxiosRequestConfig,\n) {\n  return request<API.CourseAccessList>(`/api/admin/templates/${id}/assign`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    data: body,\n    ...(options || {}),\n  });\n}\n\nexport async function unassign(\n  id: number,\n  body: { assignable_id: number },\n  options?: AxiosRequestConfig,\n) {\n  return request<API.CourseAccessList>(`/api/admin/templates/${id}/unassign`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    data: body,\n    ...(options || {}),\n  });\n}\n\n/**  GET /api/admin/templates/assigned */\nexport async function assigned(params: API.TemplateItem, options?: AxiosRequestConfig) {\n  return request<API.DefaultResponse<API.Certificate[]>>(`/api/admin/templates/assigned`, {\n    params,\n    method: 'GET',\n    /* useCache: true */ useCache: false,\n    ...(options || {}),\n  });\n}\n","import { Select, Spin } from 'antd';\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport {\n  assignable as fetchGetAssignables,\n  assigned as fetchGetAssigned,\n  assign as postAssign,\n  unassign as postUnassign,\n} from '@/services/escola-lms/certificate';\nimport { message } from 'antd';\nimport { useCallback } from 'react';\nimport { FormattedMessage } from 'umi';\n\nexport const AssignTemplateSelect: React.FC<{\n  state?: {\n    type: number;\n  };\n  assignable_class: string;\n  assignable_id: string | number;\n  multiple?: boolean;\n  onAssign?: (assignIds: number[]) => void;\n  onUnassign?: (assignIds: number[]) => void;\n  onChange?: (value: number[]) => void;\n  onTemplates?: (templates: API.Certificate[]) => void;\n}> = ({\n  onChange,\n  multiple = false,\n  assignable_class,\n  assignable_id,\n  onAssign,\n  onUnassign,\n  onTemplates,\n}) => {\n  const [templates, setTemplates] = useState<API.Certificate[]>([]);\n  const [currentTemplates, setCurrentTemplates] = useState<number[]>([]);\n\n  const [fetching, setFetching] = useState(false);\n\n  const abortController = useRef<AbortController>();\n\n  const setTemplatesFromResponse = useCallback(\n    (responseTemplates: API.Certificate[]) => {\n      setTemplates(responseTemplates);\n      if (onTemplates) {\n        onTemplates(responseTemplates);\n      }\n    },\n    [onTemplates],\n  );\n\n  const fetchAssiged = useCallback(() => {\n    fetchGetAssigned({\n      assignable_class,\n      assignable_id: Number(assignable_id),\n    }).then((response) => {\n      if (response.success) {\n        setCurrentTemplates(response.data.map((item) => item.id));\n      }\n    });\n  }, [assignable_class, assignable_id]);\n\n  const fetchAssignales = useCallback(() => {\n    setFetching(true);\n    if (abortController.current) {\n      abortController.current.abort();\n    }\n\n    abortController.current = new AbortController();\n    fetchGetAssignables(\n      {\n        assignable_class,\n      },\n      { signal: abortController.current.signal },\n    )\n      .then((response) => {\n        if (response && response.success) {\n          setTemplatesFromResponse(response.data);\n        }\n        setFetching(false);\n      })\n      .catch(() => setFetching(false));\n\n    return () => {\n      if (abortController.current) {\n        abortController.current.abort();\n      }\n    };\n  }, [assignable_class, assignable_id]);\n\n  const removeIdFromCurrentTemplates = useCallback((id: number) => {\n    setCurrentTemplates((prevTemplates) => prevTemplates.filter((item) => item != id));\n  }, []);\n\n  const addIdFromCurrentTemplates = useCallback((id: number) => {\n    setCurrentTemplates((prevTemplates) =>\n      prevTemplates.includes(id) ? prevTemplates : [...prevTemplates, id],\n    );\n  }, []);\n\n  const handleChange = useCallback(\n    (value: number | number[]) => {\n      const values = Array.isArray(value) ? value : [value];\n      const valuesToAssign = values.filter((item) => !currentTemplates.includes(item));\n      const valuesToUnassign = currentTemplates.filter((item) => !values.includes(item));\n\n      valuesToAssign.forEach((item) => {\n        postAssign(item, {\n          assignable_id: Number(assignable_id),\n        })\n          .then((response) => {\n            if (response.success) {\n              message.success(response.message);\n              // TODO: #1007 there can be only one chanel:event assign to model, so if event for this channel is in currentTemplates it replace it so should be removed from list\n            }\n            if (!response.success) {\n              message.error(response.message);\n              removeIdFromCurrentTemplates(item);\n            }\n          })\n          .catch((err) => {\n            message.error(err.toString());\n            removeIdFromCurrentTemplates(item);\n          });\n      });\n\n      valuesToUnassign.forEach((item) => {\n        postUnassign(item, {\n          assignable_id: Number(assignable_id),\n        })\n          .then((response) => {\n            if (response.success) {\n              message.success(response.message);\n            }\n            if (!response.success) {\n              message.error(response.message);\n              addIdFromCurrentTemplates(item);\n            }\n          })\n          .catch((err) => {\n            message.error(err.toString());\n            addIdFromCurrentTemplates(item);\n          });\n      });\n\n      if (valuesToAssign.length != 0 && onAssign) {\n        onAssign(valuesToAssign);\n      }\n      if (valuesToUnassign.length != 0 && onUnassign) {\n        onUnassign(valuesToUnassign);\n      }\n\n      setCurrentTemplates(values);\n    },\n    [currentTemplates, assignable_id, onAssign, onUnassign],\n  );\n\n  useEffect(() => {\n    fetchAssignales();\n    fetchAssiged();\n  }, [assignable_class, assignable_id]);\n\n  useEffect(() => {\n    if (onChange) {\n      onChange(currentTemplates);\n    }\n  }, [currentTemplates, onChange]);\n\n  return (\n    <Select\n      style={{ width: '100%' }}\n      value={currentTemplates}\n      onChange={handleChange}\n      mode={multiple ? 'multiple' : undefined}\n      showSearch\n      placeholder={<FormattedMessage id=\"select_templates\" defaultMessage=\"Select a templates\" />}\n      optionFilterProp=\"children\"\n      filterOption={(input, option) => {\n        if (option && option.children) {\n          return option?.children?.toString().toLowerCase().indexOf(input.toLowerCase()) >= 0;\n        }\n        return true;\n      }}\n      notFoundContent={fetching ? <Spin size=\"small\" /> : null}\n    >\n      {templates.map((template) => (\n        <Select.Option key={template.id} value={template.id}>\n          {template.name}{' '}\n          <small>\n            <FormattedMessage id={template.channel.split('\\\\').pop()} />:\n            <FormattedMessage id={template.event.split('\\\\').pop()} />\n          </small>{' '}\n        </Select.Option>\n      ))}\n    </Select>\n  );\n};\n\nexport default AssignTemplateSelect;\n","import React, { useMemo, useState } from 'react';\n\nimport CertificateSelector from '@/components/Certificate';\nimport { Col, Row, Typography } from 'antd';\nimport { FormattedMessage } from 'umi';\n\nimport PdfList from '@/components/Pdf/list';\n\nexport const CourseCertificateForm: React.FC<{\n  id: number | string;\n}> = ({ id }) => {\n  const { Text } = Typography;\n  const [templates, setTemplates] = useState<API.Certificate[]>([]);\n  const [currTemplates, setCurrTemplates] = useState<number[]>([]);\n\n  const pdfTemplates = useMemo(() => {\n    return currTemplates\n      .map((tplId) => templates.find((tpl) => tpl.id === tplId))\n      .filter((tpl) => tpl !== undefined)\n      .filter((tpl) => tpl && tpl.channel === 'EscolaLms\\\\TemplatesPdf\\\\Core\\\\PdfChannel');\n  }, [templates, currTemplates]);\n\n  return (\n    <div>\n      <Row align=\"middle\">\n        <Col span={3}>\n          <Text>\n            <FormattedMessage id=\"CertificateTemplates\" defaultMessage=\"Users\" />\n          </Text>\n        </Col>\n        <Col span={12}>\n          <CertificateSelector\n            onTemplates={(responseTemplates) => setTemplates(responseTemplates)}\n            assignable_class=\"EscolaLms\\Courses\\Models\\Course\"\n            assignable_id={Number(id)}\n            multiple\n            onChange={(values) => setCurrTemplates(values)}\n          />\n        </Col>\n      </Row>\n\n      {pdfTemplates.map(\n        (tpl) => tpl && <PdfList key={tpl.id} template_id={tpl.id} title={tpl.name} />,\n      )}\n    </div>\n  );\n};\n\nexport default CourseCertificateForm;\n","import AssignQuestionnary, { ModelTypes } from '@/components/AssignQuestionnary';\nimport CategoryCheckboxTree from '@/components/CategoryCheckboxTree';\nimport ConfirmModal from '@/components/ConfirmModal';\nimport CourseStatistics from '@/components/CourseStatistics';\nimport EditValidateModal from '@/components/EditValidateModal';\nimport JsonEditor from '@/components/JsonEditor';\nimport ProFormImageUpload from '@/components/ProFormImageUpload';\nimport ProFormVideoUpload from '@/components/ProFormVideoUpload';\nimport ProductWidget from '@/components/ProductWidget';\nimport ProgramForm from '@/components/ProgramForm/';\nimport { ProjectsList } from '@/components/ProjectsList';\nimport ScormSelector from '@/components/Scorm';\nimport TagsInput from '@/components/TagsInput';\nimport UserSelect from '@/components/UserSelect';\nimport UserSubmissions from '@/components/UsersSubmissions';\nimport WysiwygMarkdown from '@/components/WysiwygMarkdown';\nimport useValidateFormEdit from '@/hooks/useValidateFormEdit';\nimport { CourseSuccessModal } from '@/pages/Courses/components/CourseSuccessModal';\nimport { createCourse, getCourse, updateCourse } from '@/services/escola-lms/course';\nimport { categoriesArrToIds, splitImagePath, tagsArrToIds } from '@/utils/utils';\nimport ProCard from '@ant-design/pro-card';\nimport ProForm, {\n  ProFormDatePicker,\n  ProFormDigit,\n  ProFormSelect,\n  ProFormSwitch,\n  ProFormText,\n} from '@ant-design/pro-form';\nimport { PageContainer } from '@ant-design/pro-layout';\nimport { Alert, Button, Col, Row, Spin, message } from 'antd';\nimport { isAfter, isBefore } from 'date-fns';\nimport { useEffect, useMemo, useState } from 'react';\nimport {\n  FormattedMessage,\n  getAllLocales,\n  getLocale,\n  history,\n  useAccess,\n  useIntl,\n  useModel,\n  useParams,\n} from 'umi';\nimport CourseAccess from './components/CourseAccess';\nimport CourseCertificateForm from './components/CourseCertificateForm';\n\nenum TabNames {\n  ATTRIBUTES = 'attributes',\n  PRODUCT = 'product',\n  MEDIA = 'media',\n  USER_SUBMISSION = 'user_submission',\n  CATEGORIES = 'categories',\n  PROGRAM = 'program',\n  SCORM = 'scorm',\n  ACCESS = 'access',\n  CERTIFICATES = 'certificates',\n  QUESTIONNAIRES = 'questionnaires',\n  STATISTICS = 'statistics',\n  USER_PROJECTS = 'user_projects',\n}\n\nexport default () => {\n  const params = useParams<{ course?: string; tab?: string }>();\n  const intl = useIntl();\n  const { course, tab = TabNames.ATTRIBUTES } = params;\n  const isNew = course === 'new';\n  const access = useAccess();\n  const [data, setData] = useState<Partial<API.Course>>();\n  const { manageCourseEdit, setManageCourseEdit, validateCourseEdit } = useValidateFormEdit();\n  const [fromDateValidation, setFromDateValidation] = useState<Date | undefined | null>(null);\n  const [toDateValidation, setToDateValidation] = useState<Date | undefined | null>(null);\n  const [manageSuccessModal, setManageSuccessModal] = useState({\n    showModal: false,\n    courseId: 0,\n  });\n  const [isFirstTimeEdit, setIsFirstTimeEdit] = useState(true);\n\n  const locales: string[] = getAllLocales() || [];\n\n  const { setInitialState, initialState } = useModel('@@initialState');\n  const [form] = ProForm.useForm();\n\n  const showPublicSwitch =\n    initialState?.config?.find((item) => item.key === 'showInCourseAdditionalSettings-public')\n      ?.data ?? false;\n\n  const tabsToHide: Record<string, boolean> =\n    initialState?.config\n      ?.filter((item) => item.key.includes('hideInCourseTabs'))\n      ?.reduce((acc: Record<string, boolean>, { key, data: settingValue }) => {\n        acc[key.split('-')[1]] = settingValue;\n        return acc;\n      }, {}) ?? {};\n\n  useEffect(() => {\n    if (tab === TabNames.ATTRIBUTES && data && isFirstTimeEdit) {\n      validateCourseEdit(data);\n      setIsFirstTimeEdit(false);\n    }\n  }, [data, tab, isFirstTimeEdit]);\n\n  useEffect(() => {\n    if (course === 'new') {\n      setData({\n        title: 'new',\n      });\n      return;\n    }\n\n    const fetch = async () => {\n      const response = await getCourse(Number(course));\n\n      if (response.success) {\n        setData({\n          ...response.data,\n          categories: response.data.categories?.map(categoriesArrToIds),\n          tags: response.data.tags?.map(tagsArrToIds),\n          summary: response.data.summary || '',\n        });\n\n        setFromDateValidation(response.data.active_from);\n        setToDateValidation(response.data.active_to);\n      }\n    };\n    fetch();\n  }, [course]);\n\n  const formProps = useMemo(\n    () => ({\n      onValuesChange: (values: API.Course) => {\n        setManageCourseEdit({\n          ...manageCourseEdit,\n          valuesChanged: true,\n        });\n        if (values.active_from) {\n          setFromDateValidation(values.active_from);\n        }\n\n        if (values.active_to) {\n          setToDateValidation(values.active_to);\n        }\n        return values.title && setData({ title: values.title });\n      },\n      onFinish: async (values: API.Course) => {\n        if (manageCourseEdit.disableEdit) {\n          setManageCourseEdit({\n            showModal: true,\n            disableEdit: true,\n            clicked: false,\n          });\n          return;\n        }\n\n        const postData = {\n          ...values,\n          active_from: values.active_from || data?.active_from || null,\n          active_to: values.active_to || data?.active_to || null,\n          authors:\n            values.authors &&\n            values.authors.map((author) => (typeof author === 'object' ? author.id : author)),\n          scorm_sco_id: values.scorm_sco_id ? values.scorm_sco_id : null,\n          image_url: data && data.image_url,\n          image_path: data && data.image_url && splitImagePath(data.image_url),\n          video_url: data && data.video_url,\n          video_path: data && data.video_url && splitImagePath(data.video_url),\n          poster_url: data && data.poster_url,\n          poster_path: data && data.poster_url && splitImagePath(data.poster_url),\n          hours_to_complete: values.hours_to_complete || null,\n        };\n\n        let response: API.DefaultResponse<API.Course>;\n        if (course === 'new') {\n          response = await createCourse(postData);\n          if (response.success && response.data.id) {\n            setManageSuccessModal({\n              showModal: true,\n              courseId: response.data.id,\n            });\n          }\n        } else {\n          response = await updateCourse(Number(course), postData);\n        }\n        message.success(intl.formatMessage({ id: response.message }));\n        setManageCourseEdit({\n          ...manageCourseEdit,\n          showConfirmModal: false,\n          loading: false,\n          valuesChanged: false,\n        });\n      },\n      initialValues: data,\n      form,\n    }),\n    [course, data, manageCourseEdit, form],\n  );\n\n  if (!data) {\n    return <Spin />;\n  }\n\n  return (\n    <PageContainer\n      title={\n        <>\n          <FormattedMessage id={data.title ? 'course' : 'new_course'} />\n          {', '}\n          <FormattedMessage id={tab} />\n        </>\n      }\n      header={{\n        breadcrumb: {\n          routes: [\n            {\n              path: 'courses/list',\n              breadcrumbName: intl.formatMessage({\n                id: 'menu.Courses',\n              }),\n            },\n            {\n              path: String(course),\n              breadcrumbName: intl.formatMessage({\n                id: 'form',\n              }),\n            },\n            {\n              path: '/',\n              breadcrumbName: String(data.title),\n            },\n            {\n              path: String(tab),\n              breadcrumbName: intl.formatMessage({ id: tab, defaultMessage: String(tab) }),\n            },\n          ],\n        },\n      }}\n    >\n      <ProCard\n        bodyStyle={{ padding: '24px' }}\n        tabs={{\n          type: 'card',\n          activeKey: tab,\n          onChange: (key) => {\n            setInitialState({\n              ...initialState,\n              collapsed: key === 'program',\n            });\n            if (key !== TabNames.ATTRIBUTES && manageCourseEdit.valuesChanged) {\n              setManageCourseEdit({\n                ...manageCourseEdit,\n                showConfirmModal: true,\n              });\n            } else {\n              history.push(`/courses/list/${course}/${key}`);\n            }\n          },\n        }}\n      >\n        <ProCard.TabPane key={TabNames.ATTRIBUTES} tab={<FormattedMessage id=\"attributes\" />}>\n          {manageCourseEdit.disableEdit && (\n            <Alert\n              closable\n              style={{ marginBottom: '20px' }}\n              type=\"warning\"\n              message={\n                <FormattedMessage\n                  id=\"course_edit_warning_message\"\n                  defaultMessage=\"course_edit_warning_message\"\n                />\n              }\n              action={\n                <Button\n                  onClick={() =>\n                    setManageCourseEdit({\n                      showModal: true,\n                      disableEdit: true,\n                      clicked: true,\n                    })\n                  }\n                  type=\"primary\"\n                >\n                  <FormattedMessage\n                    id=\"questionnaire.submit\"\n                    defaultMessage=\"questionnaire.submit\"\n                  />\n                </Button>\n              }\n            />\n          )}\n          <EditValidateModal visible={manageCourseEdit.showModal} setManage={setManageCourseEdit} />\n          <CourseSuccessModal\n            visible={manageSuccessModal.showModal}\n            handleOk={() => {\n              history.push(`/courses/list/${manageSuccessModal.courseId}/program`);\n            }}\n            handleCancel={() =>\n              history.push(`/courses/list/${manageSuccessModal.courseId}/attributes`)\n            }\n          />\n          <ProForm {...formProps}>\n            <ProForm.Group label={<FormattedMessage id=\"description\" />}>\n              <ProFormText\n                width=\"xl\"\n                name=\"title\"\n                label={<FormattedMessage id=\"title\" />}\n                tooltip={<FormattedMessage id=\"courses.tooltips.title\" />}\n                placeholder={intl.formatMessage({\n                  id: 'title',\n                  defaultMessage: 'title',\n                })}\n                required\n                disabled={manageCourseEdit.disableEdit}\n              />\n              <ProFormText\n                width=\"xl\"\n                name=\"subtitle\"\n                label={<FormattedMessage id=\"subtitle\" />}\n                tooltip={<FormattedMessage id=\"courses.tooltips.subtitle\" />}\n                placeholder={intl.formatMessage({\n                  id: 'subtitle',\n                  defaultMessage: 'subtitle',\n                })}\n                disabled={manageCourseEdit.disableEdit}\n              />\n              <ProForm.Item\n                name=\"summary\"\n                label={<FormattedMessage id=\"summary\" />}\n                tooltip={<FormattedMessage id=\"courses.tooltips.summary\" />}\n                valuePropName=\"value\"\n                style={{\n                  width: 697,\n                }}\n              >\n                <WysiwygMarkdown directory={`course/${course}/wysiwyg`} />\n              </ProForm.Item>\n              <ProForm.Item\n                name=\"description\"\n                label={<FormattedMessage id=\"description\" />}\n                tooltip={<FormattedMessage id=\"courses.tooltips.description\" />}\n                valuePropName=\"value\"\n                style={{\n                  width: 697,\n                }}\n              >\n                <WysiwygMarkdown directory={`course/${course}/wysiwyg`} />\n              </ProForm.Item>\n            </ProForm.Group>\n            <ProForm.Group label={<FormattedMessage id=\"duration\" />}>\n              <ProFormDatePicker\n                width=\"md\"\n                name=\"active_from\"\n                label={<FormattedMessage id=\"active_from\" />}\n                tooltip={<FormattedMessage id=\"courses.tooltips.active_from\" />}\n                placeholder={intl.formatMessage({\n                  id: 'active_from',\n                  defaultMessage: 'active_from',\n                })}\n                rules={[\n                  {\n                    validator: (_, value) => {\n                      if (\n                        value &&\n                        toDateValidation &&\n                        isAfter(new Date(value), new Date(toDateValidation))\n                      ) {\n                        return Promise.reject(new Error(intl.formatMessage({ id: 'invalidDate' })));\n                      }\n\n                      return Promise.resolve();\n                    },\n                  },\n                ]}\n                disabled={manageCourseEdit.disableEdit}\n              />\n              <ProFormDatePicker\n                width=\"md\"\n                name=\"active_to\"\n                label={<FormattedMessage id=\"active_to\" />}\n                tooltip={<FormattedMessage id=\"courses.tooltips.active_to\" />}\n                placeholder={intl.formatMessage({\n                  id: 'active_to',\n                  defaultMessage: 'active_to',\n                })}\n                disabled={manageCourseEdit.disableEdit || !fromDateValidation}\n                rules={[\n                  {\n                    validator(_, value) {\n                      if (\n                        value &&\n                        fromDateValidation &&\n                        isBefore(new Date(value), new Date(fromDateValidation))\n                      ) {\n                        return Promise.reject(new Error(intl.formatMessage({ id: 'invalidDate' })));\n                      }\n\n                      return Promise.resolve();\n                    },\n                  },\n                ]}\n              />\n              <ProFormText\n                width=\"md\"\n                name=\"duration\"\n                label={<FormattedMessage id=\"duration\" />}\n                tooltip={<FormattedMessage id=\"courses.tooltips.duration\" />}\n                placeholder={intl.formatMessage({\n                  id: 'duration',\n                  defaultMessage: 'duration',\n                })}\n                disabled={manageCourseEdit.disableEdit}\n              />\n\n              <ProFormDigit\n                width=\"md\"\n                name=\"hours_to_complete\"\n                label={<FormattedMessage id=\"hours_to_complete\" />}\n                tooltip={<FormattedMessage id=\"hours_to_complete\" />}\n                placeholder={intl.formatMessage({\n                  id: 'hours_to_complete',\n                  defaultMessage: 'hours_to_complete',\n                })}\n                disabled={manageCourseEdit.disableEdit}\n              />\n            </ProForm.Group>\n            <ProForm.Group label={<FormattedMessage id=\"additional\" />}>\n              {showPublicSwitch && (\n                <ProFormSwitch\n                  width=\"xs\"\n                  name=\"public\"\n                  label={<FormattedMessage id=\"public_label\" />}\n                  tooltip={<FormattedMessage id=\"public_tooltip\" />}\n                  placeholder={intl.formatMessage({\n                    id: 'public',\n                    defaultMessage: 'public',\n                  })}\n                />\n              )}\n              <ProFormText\n                width=\"xs\"\n                name=\"level\"\n                label={<FormattedMessage id=\"level\" />}\n                tooltip={<FormattedMessage id=\"courses.tooltips.level\" />}\n                placeholder={intl.formatMessage({\n                  id: 'level',\n                  defaultMessage: 'level',\n                })}\n              />\n\n              <ProFormSelect\n                name=\"language\"\n                width=\"xs\"\n                label={<FormattedMessage id=\"language\" />}\n                placeholder={intl.formatMessage({\n                  id: 'language',\n                  defaultMessage: 'language',\n                })}\n                valueEnum={locales\n                  .map((locale) => locale.split('-')[0])\n                  .reduce((a, v) => ({ ...a, [v]: v }), {})}\n                initialValue={getLocale().split('-')[0]}\n                disabled={manageCourseEdit.disableEdit}\n              />\n\n              <ProFormSelect\n                name=\"status\"\n                width=\"md\"\n                label={<FormattedMessage id=\"status\" />}\n                valueEnum={{\n                  draft: intl.formatMessage({\n                    id: 'draft',\n                    defaultMessage: 'draft',\n                  }),\n                  published: intl.formatMessage({\n                    id: 'published',\n                    defaultMessage: 'published',\n                  }),\n                  archived: intl.formatMessage({\n                    id: 'archived',\n                    defaultMessage: 'archived',\n                  }),\n                  published_unactivated: intl.formatMessage({\n                    id: 'published_unactivated',\n                    defaultMessage: 'published_unactivated',\n                  }),\n                }}\n                initialValue={{\n                  draft: intl.formatMessage({\n                    id: 'draft',\n                    defaultMessage: 'draft',\n                  }),\n                }}\n                placeholder={intl.formatMessage({\n                  id: 'status',\n                })}\n                disabled={manageCourseEdit.disableEdit}\n                rules={[{ required: true, message: <FormattedMessage id=\"select\" /> }]}\n              />\n              <ProFormText\n                width=\"sm\"\n                name=\"target_group\"\n                label={<FormattedMessage id=\"target_group\" />}\n                tooltip={<FormattedMessage id=\"courses.tooltips.target_group\" />}\n                placeholder={intl.formatMessage({\n                  id: 'target_group',\n                  defaultMessage: 'target_group',\n                })}\n                disabled={manageCourseEdit.disableEdit}\n              />\n              <ProForm.Item\n                name=\"authors\"\n                label={<FormattedMessage id=\"author_tutor\" />}\n                valuePropName=\"value\"\n              >\n                <UserSelect multiple />\n              </ProForm.Item>\n              {/* TODO: #1032 remove it if you are sure it is not needed on the backend */}\n              {/* <ProFormCheckbox\n                width=\"sm\"\n                name=\"purchasable\"\n                label={<FormattedMessage id=\"purchasable\" />}\n                tooltip={<FormattedMessage id=\"purchasable\" />}\n                placeholder={intl.formatMessage({\n                  id: 'purchasable',\n                  defaultMessage: 'purchasable',\n                })}\n                disabled={manageCourseEdit.disableEdit}\n              /> */}\n              {/* TODO: #1033 remove it if you are sure it is not needed on the backend */}\n              {/* <ProFormCheckbox\n                width=\"sm\"\n                name=\"findable\"\n                label={<FormattedMessage id=\"findable\" />}\n                tooltip={<FormattedMessage id=\"findable\" />}\n                placeholder={intl.formatMessage({\n                  id: 'findable',\n                  defaultMessage: 'findable',\n                })}\n                disabled={manageCourseEdit.disableEdit}\n              /> */}\n            </ProForm.Group>\n            <ProForm.Item\n              name=\"fields\"\n              label={<FormattedMessage id=\"course_fields\" />}\n              valuePropName=\"value\"\n            >\n              <JsonEditor />\n            </ProForm.Item>\n          </ProForm>\n        </ProCard.TabPane>\n        {!isNew && access.salesPermission && (\n          <ProCard.TabPane\n            key={TabNames.PRODUCT}\n            tab={<FormattedMessage id=\"product\" />}\n            disabled={manageCourseEdit.disableEdit}\n          >\n            {course && (\n              <ProductWidget\n                productable={{\n                  class_type: 'App\\\\Models\\\\Course',\n                  class_id: course,\n                  name: String(data.title),\n                  quantity: 1,\n                }}\n              />\n            )}\n          </ProCard.TabPane>\n        )}\n        {!isNew && (\n          <ProCard.TabPane\n            key={TabNames.MEDIA}\n            tab={<FormattedMessage id=\"media\" />}\n            disabled={manageCourseEdit.disableEdit}\n          >\n            <ProForm {...formProps} layout=\"horizontal\">\n              <Row>\n                <Col span={24}>\n                  <ProFormImageUpload\n                    folder={`course/${course}`}\n                    title=\"image\"\n                    action={`/api/admin/courses/${course}`}\n                    src_name=\"image_url\"\n                    form_name=\"image\"\n                    getUploadedSrcField={(info) => info.file.response.data.image_url}\n                    setPath={(removedPath) =>\n                      setData((prevState) => ({\n                        ...prevState,\n                        ...removedPath,\n                      }))\n                    }\n                    hideLabel\n                  />\n                </Col>\n                <Col span={24}>\n                  <ProFormVideoUpload\n                    folder={`course/${course}`}\n                    action={`/api/admin/courses/${course}`}\n                    src_name=\"video_url\"\n                    form_name=\"video\"\n                    getUploadedSrcField={(info) => info.file.response.data.video_url}\n                    setPath={(removedPath) =>\n                      setData((prevState) => ({\n                        ...prevState,\n                        ...removedPath,\n                      }))\n                    }\n                    hideLabel\n                  />\n                </Col>\n                <Col span={24}>\n                  <ProFormImageUpload\n                    folder={`course/${course}`}\n                    title=\"poster\"\n                    action={`/api/admin/courses/${course}`}\n                    src_name=\"poster_url\"\n                    form_name=\"poster\"\n                    getUploadedSrcField={(info) => info.file.response.data.poster_url}\n                    setPath={(removedPath) =>\n                      setData((prevState) => ({\n                        ...prevState,\n                        ...removedPath,\n                      }))\n                    }\n                    hideLabel\n                  />\n                </Col>\n              </Row>\n            </ProForm>\n          </ProCard.TabPane>\n        )}\n        {!isNew && (\n          <ProCard.TabPane\n            key={TabNames.CATEGORIES}\n            tab={<FormattedMessage id=\"categories_tags\" />}\n            disabled={manageCourseEdit.disableEdit}\n          >\n            <ProForm {...formProps}>\n              <Row>\n                <Col span={12}>\n                  <ProForm.Item\n                    label={<FormattedMessage id=\"categories\" />}\n                    name=\"categories\"\n                    valuePropName=\"value\"\n                  >\n                    <CategoryCheckboxTree />\n                  </ProForm.Item>\n                </Col>\n                <Col span={12}>\n                  <ProForm.Item\n                    label={<FormattedMessage id=\"tags\" />}\n                    name=\"tags\"\n                    valuePropName=\"value\"\n                  >\n                    <TagsInput />\n                  </ProForm.Item>\n                </Col>\n              </Row>\n            </ProForm>\n          </ProCard.TabPane>\n        )}\n        {!isNew && (\n          <ProCard.TabPane\n            className=\"program\"\n            key={TabNames.PROGRAM}\n            tab={<FormattedMessage id=\"program\" />}\n            disabled={manageCourseEdit.disableEdit}\n            cardProps={{\n              bodyStyle: {\n                padding: 0,\n              },\n            }}\n          >\n            {course && <ProgramForm id={course} />}\n          </ProCard.TabPane>\n        )}\n        {!isNew && access.scormListPermission && (\n          <ProCard.TabPane\n            key={TabNames.SCORM}\n            tab={<FormattedMessage id=\"scorm\" />}\n            disabled={manageCourseEdit.disableEdit}\n          >\n            <ProForm {...formProps}>\n              <ProForm.Item label=\"Scorm\" name=\"scorm_sco_id\" valuePropName=\"value\">\n                <ScormSelector />\n              </ProForm.Item>\n            </ProForm>\n          </ProCard.TabPane>\n        )}\n        {!isNew && (\n          <ProCard.TabPane\n            key={TabNames.ACCESS}\n            tab={<FormattedMessage id=\"access\" />}\n            disabled={manageCourseEdit.disableEdit}\n          >\n            {course && <CourseAccess id={course} />}\n          </ProCard.TabPane>\n        )}\n        {!isNew && access.certificatesPermission && (\n          <ProCard.TabPane\n            key={TabNames.CERTIFICATES}\n            tab={<FormattedMessage id=\"certificates\" />}\n            disabled={manageCourseEdit.disableEdit}\n          >\n            {course && <CourseCertificateForm id={course} />}\n          </ProCard.TabPane>\n        )}\n\n        {!isNew && access.questionnaireListPermission && (\n          <ProCard.TabPane\n            key={TabNames.QUESTIONNAIRES}\n            tab={<FormattedMessage id=\"questionnaires\" />}\n            disabled={manageCourseEdit.disableEdit}\n          >\n            {course && <AssignQuestionnary modelType={ModelTypes.COURSE} id={Number(course)} />}\n          </ProCard.TabPane>\n        )}\n\n        {!isNew && !tabsToHide.statistics && (\n          <ProCard.TabPane\n            key={TabNames.STATISTICS}\n            tab={<FormattedMessage id=\"statistics\" />}\n            disabled={manageCourseEdit.disableEdit}\n          >\n            {course && <CourseStatistics courseId={course} />}\n          </ProCard.TabPane>\n        )}\n        {!isNew && !tabsToHide.user_submission && (\n          <ProCard.TabPane\n            key={TabNames.USER_SUBMISSION}\n            tab={<FormattedMessage id=\"user_submission\" />}\n            disabled={manageCourseEdit.disableEdit}\n          >\n            {course && <UserSubmissions id={Number(course)} type=\"App\\Models\\Course\" />}\n          </ProCard.TabPane>\n        )}\n\n        {!isNew && !tabsToHide.user_projects && (\n          <ProCard.TabPane\n            key={TabNames.USER_PROJECTS}\n            tab={<FormattedMessage id=\"user_projects\" />}\n          >\n            <ProjectsList courseId={Number(course)} />\n          </ProCard.TabPane>\n        )}\n      </ProCard>\n      {/* CONFIRM MODAL COMPONENT */}\n      <ConfirmModal\n        open={!!manageCourseEdit.showConfirmModal}\n        onOk={() => {\n          setManageCourseEdit({\n            ...manageCourseEdit,\n            loading: true,\n          });\n          form.submit();\n        }}\n        onCancel={() => {\n          setManageCourseEdit({\n            ...manageCourseEdit,\n            showConfirmModal: false,\n          });\n        }}\n        loading={!!manageCourseEdit.loading}\n      />\n    </PageContainer>\n  );\n};\n","import ProForm, {\n  ModalForm,\n  ProFormCheckbox,\n  ProFormDigit,\n  ProFormRadio,\n  ProFormSwitch,\n  ProFormText,\n  ProFormTextArea,\n} from '@ant-design/pro-form';\nimport { AutoComplete, Button, Form, Input } from 'antd';\nimport React, { useCallback, useEffect, useState } from 'react';\n\nimport { setting } from '@/services/escola-lms/settings';\nimport { FormattedMessage, useIntl } from 'umi';\n\nimport FilesBrowser from '@/components/FilesBrowser';\nimport WysiwygMarkdown from '@/components/WysiwygMarkdown';\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\nimport ReactJson from 'react-json-view';\n\nexport const FilesSelector: React.FC<{\n  value?: string;\n  onChange?: (value: string) => void;\n  type?: 'file' | 'image';\n}> = ({ value, onChange, type = 'file' }) => {\n  const [showBrowser, setShowBrowser] = useState<boolean>(false);\n\n  return (\n    <React.Fragment>\n      <ProForm.Group>\n        <Input value={value} readOnly />\n        <Button size=\"small\" type=\"primary\" onClick={() => setShowBrowser(!showBrowser)}>\n          toggle {type} browser\n        </Button>\n      </ProForm.Group>\n      {showBrowser && (\n        <FilesBrowser onFile={(file, dir) => onChange && onChange(`${dir}/${file.name}`)} />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport const SettingsModalForm: React.FC<{\n  id?: number | Partial<API.Setting> | false;\n  visible: number | boolean | Partial<API.Setting>;\n  onVisibleChange: (visible: boolean) => void;\n  onFinish: (formData: API.Setting) => Promise<boolean | void>;\n  groups: string[];\n  initialData?: Partial<API.Setting>;\n}> = (props) => {\n  const intl = useIntl();\n\n  const { visible, onVisibleChange, onFinish, id, initialData, groups } = props;\n\n  const [form] = Form.useForm();\n\n  const isNew = !id || id === -1;\n\n  const [type, setType] = useState<API.SettingType>('text');\n\n  const isGlobalGroup = useCallback(() => {\n    return !!(form.getFieldValue('group') === 'global' || initialData);\n  }, [form, initialData]);\n\n  const [selectedGroup, setSelectedGroup] = useState<string>('');\n\n  useEffect(() => {\n    // if id id && id !== -1\n\n    if (typeof id === 'object') {\n      form.setFieldsValue(id);\n      setType(id.type ?? 'text');\n    } else if (id && id !== -1) {\n      setting(Number(id)).then((response) => {\n        if (response.success) {\n          form.setFieldsValue(response.data);\n          setType(response.data.type);\n          setSelectedGroup(response.data.group);\n        }\n      });\n    } else {\n      form.resetFields();\n      setType('text');\n    }\n  }, [id, form, initialData]);\n\n  const onValuesChange = useCallback(\n    (values: API.Setting) => {\n      if (values.type && values.type !== type) {\n        setType(values.type);\n      }\n    },\n    [type],\n  );\n\n  return (\n    <ModalForm\n      form={form}\n      title={intl.formatMessage({\n        id: id ? 'editSetting' : 'newSetting',\n        defaultMessage: id ? 'editSetting' : 'newSetting',\n      })}\n      width=\"60vw\"\n      visible={!!visible}\n      onVisibleChange={onVisibleChange}\n      onFinish={onFinish}\n      onValuesChange={onValuesChange}\n    >\n      <ProForm.Group>\n        {initialData ? (\n          <ProFormText\n            label={<FormattedMessage id=\"group\" defaultMessage=\"group\" />}\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n            width=\"md\"\n            name=\"group\"\n            disabled={isGlobalGroup()}\n          />\n        ) : (\n          <ProForm.Item label={<FormattedMessage id=\"group\" defaultMessage=\"group\" />} name=\"group\">\n            <AutoComplete\n              style={{\n                width: '300px',\n              }}\n              autoFocus={true}\n              value={selectedGroup}\n              onChange={(value) => setSelectedGroup(value)}\n              filterOption={(inputValue, option) =>\n                option?.children?.toString().toLowerCase().indexOf(inputValue.toLowerCase()) !== -1\n              }\n            >\n              {groups.map((group) => (\n                <AutoComplete.Option key={group} value={group}>\n                  {group}\n                </AutoComplete.Option>\n              ))}\n            </AutoComplete>\n          </ProForm.Item>\n        )}\n        <ProFormText\n          label={<FormattedMessage id=\"key\" defaultMessage=\"key\" />}\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n          width=\"md\"\n          name=\"key\"\n          disabled={isGlobalGroup()}\n        />\n      </ProForm.Group>\n      <ProForm.Group>\n        <ProFormSwitch\n          name=\"enumerable\"\n          disabled={isGlobalGroup()}\n          label={<FormattedMessage id=\"enumerable\" defaultMessage=\"enumerable\" />}\n        />\n        <ProFormSwitch\n          name=\"public\"\n          disabled={isGlobalGroup()}\n          label={<FormattedMessage id=\"public\" defaultMessage=\"public\" />}\n        />\n      </ProForm.Group>\n      <ProForm.Group>\n        <ProFormRadio.Group\n          disabled={!!(!isNew || initialData)}\n          name=\"type\"\n          label={<FormattedMessage id=\"type\" />}\n          options={[\n            {\n              label: 'text',\n              value: 'text',\n            },\n            {\n              label: 'markdown',\n              value: 'markdown',\n            },\n            {\n              label: 'json',\n              value: 'json',\n            },\n            {\n              label: 'file',\n              value: 'file',\n            },\n            {\n              label: 'image',\n              value: 'image',\n            },\n            {\n              label: 'boolean',\n              value: 'boolean',\n            },\n            {\n              label: 'number',\n              value: 'number',\n            },\n            {\n              label: 'array',\n              value: 'array',\n            },\n          ]}\n        />\n      </ProForm.Group>\n      <div>\n        {type === 'text' && (\n          <ProFormText width=\"lg\" name=\"value\" label={<FormattedMessage id=\"value\" />} />\n        )}\n        {type === 'json' && (\n          <>\n            <ProFormTextArea\n              width=\"lg\"\n              name=\"value\"\n              label={<FormattedMessage id=\"value\" />}\n              tooltip={`${intl.formatMessage({\n                id: 'example_json',\n              })}: {\"name\":\"John\", \"age\":30, \"city\":[\"New York\",\"Warsaw\"]}`}\n            />\n            <ProForm.Item noStyle shouldUpdate>\n              {() => {\n                try {\n                  return <ReactJson src={JSON.parse(form.getFieldValue('value'))} />;\n                } catch {\n                  return <ReactJson src={JSON.parse(`{ \"error\": \"cannot parse this json\" }`)} />;\n                }\n              }}\n            </ProForm.Item>\n          </>\n        )}\n\n        {(type === 'file' || type === 'image') && (\n          <ProForm.Item\n            name=\"value\"\n            label=\"value\"\n            tooltip=\"select file from current repository or upload new one\"\n            valuePropName=\"value\"\n          >\n            <FilesSelector type={type} />\n          </ProForm.Item>\n        )}\n\n        {type === 'markdown' && (\n          <ProForm.Item\n            name=\"value\"\n            label=\"value\"\n            tooltip=\"The editor is WYSIWYG and includes formatting tools whilst retaining the ability to write markdown shortcuts inline and output plain Markdown.\"\n            valuePropName=\"value\"\n          >\n            <WysiwygMarkdown directory={`settings/wysiwyg`} />\n          </ProForm.Item>\n        )}\n\n        {type === 'boolean' ? (\n          <ProFormSwitch\n            name=\"value\"\n            label={<FormattedMessage id=\"value\" />}\n            checkedChildren={<CheckOutlined />}\n            unCheckedChildren={<CloseOutlined />}\n          />\n        ) : (\n          <ProForm.Item noStyle hidden>\n            <ProFormCheckbox name=\"data\" valuePropName=\"data\" />\n          </ProForm.Item>\n        )}\n\n        {type === 'number' && <ProFormDigit name=\"data\" label={<FormattedMessage id=\"value\" />} />}\n\n        {type === 'array' && (\n          <>\n            <ProFormTextArea\n              width=\"lg\"\n              name=\"value\"\n              label={<FormattedMessage id=\"value\" />}\n              tooltip={`${intl.formatMessage({\n                id: 'example_json',\n              })}: ['tutor', 'student']`}\n            />\n            <ProForm.Item noStyle shouldUpdate>\n              {() => {\n                try {\n                  return <ReactJson src={JSON.parse(form.getFieldValue('value'))} />;\n                } catch {\n                  return <ReactJson src={JSON.parse(`{ \"error\": \"cannot parse this json\" }`)} />;\n                }\n              }}\n            </ProForm.Item>\n          </>\n        )}\n      </div>\n    </ModalForm>\n  );\n};\n\nexport default SettingsModalForm;\n","import { TopicType } from '@/services/escola-lms/enums';\nimport { PlusOutlined } from '@ant-design/icons';\nimport type { ActionType, ProColumns } from '@ant-design/pro-table';\nimport ProTable from '@ant-design/pro-table';\nimport { Button, Popconfirm, Tooltip, message } from 'antd';\nimport React, { Fragment, useEffect, useRef, useState } from 'react';\nimport type { IntlShape } from 'react-intl';\nimport { FormattedMessage, useIntl, useModel } from 'umi';\n\nimport {\n  createSettings,\n  deleteSettings,\n  settings,\n  updateSettings,\n} from '@/services/escola-lms/settings';\n\nimport { DeleteOutlined, EditOutlined, InfoCircleOutlined } from '@ant-design/icons';\nimport SettingsModalForm from './components/ModalForm';\n\nimport { getRoutes } from '@@/core/route';\n\nconst handleUpdate = async (intl: IntlShape, fields: API.Setting, id?: number) => {\n  const hide = message.loading(\n    intl.formatMessage({\n      id: 'loading',\n    }),\n  );\n  try {\n    const updatedSettings = await (id && id !== -1\n      ? updateSettings(id, { ...fields })\n      : createSettings({ ...fields }));\n\n    hide();\n    message.success(\n      intl.formatMessage({\n        id: 'success',\n      }),\n    );\n\n    return {\n      success: true,\n      updatedSettings,\n    };\n  } catch (error) {\n    hide();\n    message.error(\n      intl.formatMessage({\n        id: 'error',\n      }),\n    );\n    return { success: false, updateSettings: null };\n  }\n};\n\nconst handleRemove = async (intl: IntlShape, id: number) => {\n  const hide = message.loading(\n    intl.formatMessage({\n      id: 'loading',\n    }),\n  );\n  try {\n    await deleteSettings(id);\n    hide();\n    message.success(\n      intl.formatMessage({\n        id: 'success',\n      }),\n    );\n    return true;\n  } catch (error) {\n    hide();\n    message.error(\n      intl.formatMessage({\n        id: 'error',\n      }),\n    );\n    return false;\n  }\n};\n\ntype InitialDataRecords = Record<\n  'logo' | 'frontURL' | 'maxLessonsNestingInProgram' | 'minTopicNestingInProgram' | string,\n  API.Setting\n>;\n\ntype Route = {\n  path: string;\n  layout: boolean;\n  hideInMenu: boolean;\n  routes: Route[];\n} & any;\n\nconst snakeToCamel = (str: string) =>\n  str.toLowerCase().replace(/(_\\w)/g, (m) => m.toUpperCase().substr(1));\n\n// const flatRoutes = (routes: Route[]): Route[] => {\n//   return (\n//     routes.reduce((acc, curr) => {\n//       return [...acc, ...(curr.routes ? flatRoutes(curr.routes) : []), curr];\n//     }, [] as Route[]) as Route[]\n//   ).filter((route) => route.layout !== false && route.hideInMenu !== true);\n// };\n\nconst courseEditTabsKeys = ['statistics', 'user_submission', 'user_projects'];\nconst courseEditAdditionalSettingsKeys = ['public'];\nconst templateTabsKeys = ['email', 'sms'];\n\nexport const pathToSettingName = (path: string) =>\n  `hideInMenu-${snakeToCamel(path.split('/').join('_'))}`;\n\nexport const topicTypeToSettingName = (type: string) => `disableTopicType-${type}`;\n\nconst booleanSettings = (\n  [\n    ...Object.keys(TopicType).map((type) => ({\n      key: topicTypeToSettingName(type),\n      group: 'global',\n      value: 'false',\n      public: true,\n      enumerable: true,\n      sort: 1,\n      type: 'boolean',\n      data: false,\n    })),\n    /*\n  ...flatRoutes(getRoutes())\n    .filter((route) => route.path && route.path !== '/')\n    .map((route) => ({\n      path: route.path,\n      key: pathToSettingName(route.path),\n      group: 'global',\n      value: 'false',\n      public: true,\n      enumerable: true,\n      sort: 1,\n      type: 'boolean',\n      data: false,\n    })),\n    */\n    ...['ECommerce', 'Certificates'].map((feature) => ({\n      key: `disable-${feature}`,\n      group: 'global',\n      value: 'false',\n      public: true,\n      enumerable: true,\n      sort: 1,\n      type: 'boolean',\n      data: false,\n    })),\n    ...courseEditAdditionalSettingsKeys.map((key) => ({\n      key: `showInCourseAdditionalSettings-${key}`,\n      group: 'global',\n      value: 'false',\n      public: true,\n      enumerable: true,\n      sort: 1,\n      type: 'boolean',\n      data: false,\n    })),\n    ...courseEditTabsKeys.map((key) => ({\n      key: `hideInCourseTabs-${key}`,\n      group: 'global',\n      value: 'false',\n      public: true,\n      enumerable: true,\n      sort: 1,\n      type: 'boolean',\n      data: false,\n    })),\n    ...templateTabsKeys.map((key) => ({\n      key: `hideTemplateTab-${key}`,\n      group: 'global',\n      value: 'false',\n      public: true,\n      enumerable: true,\n      sort: 1,\n      type: 'boolean',\n      data: false,\n    })),\n  ] as API.Setting[]\n).reduce((acc, curr, index) => {\n  acc[curr.key as string] = { ...curr, id: -100 * index };\n  return acc;\n}, {} as InitialDataRecords);\n\nconst preInitialData: InitialDataRecords = {\n  logo: {\n    id: -1,\n    key: 'logo',\n    group: 'global',\n    value: '',\n    public: true,\n    enumerable: true,\n    sort: 0,\n    type: 'image',\n    data: 'EscolaLMS',\n  },\n  frontURL: {\n    id: -2,\n    key: 'frontURL',\n    group: 'global',\n    value: '',\n    public: true,\n    enumerable: true,\n    sort: 0,\n    type: 'text',\n    data: 'EscolaLMS',\n  },\n\n  maxLessonsNestingInProgram: {\n    id: -4,\n    key: 'maxLessonsNestingInProgram',\n    group: 'global',\n    value: '0',\n    public: true,\n    enumerable: true,\n    sort: 1,\n    type: 'number',\n    data: 0,\n  },\n\n  minTopicNestingInProgram: {\n    id: -5,\n    key: 'minTopicNestingInProgram',\n    group: 'global',\n    value: '0',\n    public: true,\n    enumerable: true,\n    sort: 1,\n    type: 'number',\n    data: 0,\n  },\n\n  companyName: {\n    id: -6,\n    key: 'companyName',\n    group: 'global',\n    value: 'Wellms',\n    public: true,\n    enumerable: true,\n    sort: 0,\n    type: 'text',\n    data: 'Wellms',\n  },\n  companyURL: {\n    id: -7,\n    key: 'companyURL',\n    group: 'global',\n    value: 'https://www.wellms.io/',\n    public: true,\n    enumerable: true,\n    sort: 0,\n    type: 'text',\n    data: 'https://www.wellms.io/',\n  },\n\n  logoLogin: {\n    id: -8,\n    key: 'logoLogin',\n    group: 'global',\n    value: '',\n    public: true,\n    enumerable: true,\n    sort: 0,\n    type: 'image',\n    data: 'EscolaLMS',\n  },\n  logoFooter: {\n    id: -9,\n    key: 'logoFooter',\n    group: 'global',\n    value: '',\n    public: true,\n    enumerable: true,\n    sort: 0,\n    type: 'image',\n    data: 'EscolaLMS',\n  },\n  footerFontColor: {\n    id: -10,\n    key: 'footerFontColor',\n    group: 'global',\n    value: '#00000072',\n    public: true,\n    enumerable: true,\n    sort: 0,\n    type: 'text',\n    data: 'EscolaLMS',\n  },\n  showLoginBackgroundImage: {\n    id: -11,\n    key: 'showLoginBackgroundImage',\n    group: 'global',\n    value: 'true',\n    public: true,\n    enumerable: true,\n    sort: 0,\n    type: 'boolean',\n    data: 'EscolaLMS',\n  },\n  loginHeaderBackgroundColor: {\n    id: -12,\n    key: 'loginHeaderBackgroundColor',\n    group: 'global',\n    value: '#f0f2f5',\n    public: true,\n    enumerable: true,\n    sort: 0,\n    type: 'text',\n    data: 'EscolaLMS',\n  },\n  loginHeaderFontColor: {\n    id: -13,\n    key: 'loginHeaderFontColor',\n    group: 'global',\n    value: '#000000D8',\n    public: true,\n    enumerable: true,\n    sort: 0,\n    type: 'text',\n    data: 'EscolaLMS',\n  },\n  loginFormBackgroundColor: {\n    id: -14,\n    key: 'loginFormBackgroundColor',\n    group: 'global',\n    value: '#f0f2f5',\n    public: true,\n    enumerable: true,\n    sort: 0,\n    type: 'text',\n    data: 'EscolaLMS',\n  },\n  contentBackgroundColor: {\n    id: -15,\n    key: 'contentBackgroundColor',\n    group: 'global',\n    value: '#f0f2f5',\n    public: true,\n    enumerable: true,\n    sort: 0,\n    type: 'text',\n    data: 'EscolaLMS',\n  },\n  technicalMaintenance: {\n    id: -16,\n    key: 'technicalMaintenance',\n    group: 'global',\n    value: 'false',\n    public: true,\n    enumerable: true,\n    sort: 0,\n    type: 'boolean',\n    data: 'EscolaLMS',\n  },\n  technicalMaintenanceText: {\n    id: -17,\n    key: 'technicalMaintenanceText',\n    group: 'global',\n    value: '',\n    public: true,\n    enumerable: true,\n    sort: 0,\n    type: 'text',\n    data: 'EscolaLMS',\n  },\n  ...booleanSettings,\n};\n\nconst isRoute = (route: any): route is Route => typeof route.path === 'string';\n\nconst TableList: React.FC = () => {\n  const [modalVisible, setModalVisible] = useState<number | Partial<API.Setting> | false>(false);\n  const actionRef = useRef<ActionType>();\n  const intl = useIntl();\n\n  const [initialData, setInitialData] = useState<InitialDataRecords>(preInitialData);\n\n  const { setInitialState, initialState } = useModel('@@initialState');\n\n  useEffect(() => {\n    getRoutes().then((routes) => {\n      //@ts-ignore\n      const hideInDataRecords: InitialDataRecords = Object.values(routes.routes)\n        .filter(isRoute)\n        .filter((route) => route.path && route.path !== '/' && route.layout !== false)\n        .map((route) => ({\n          path: route.path,\n          //@ts-ignore\n          key: pathToSettingName(route.path),\n          group: 'global',\n          value: 'false',\n          public: true,\n          enumerable: true,\n          sort: 1,\n          type: 'boolean',\n          data: false,\n        }));\n      setInitialData((prevInitialData) => ({\n        ...prevInitialData,\n        ...hideInDataRecords,\n      }));\n    });\n  }, []);\n\n  useEffect(() => {\n    if (actionRef.current) {\n      actionRef.current.reload();\n    }\n  }, [initialData]);\n\n  const columns: ProColumns<API.Setting>[] = [\n    {\n      title: <FormattedMessage id=\"key\" defaultMessage=\"key\" />,\n      dataIndex: 'key',\n      hideInSearch: true,\n      render: (_, record) => (\n        <Fragment>\n          <Tooltip title={<FormattedMessage id={`Settings.tooltip.${record.key}`} />}>\n            {record.key} <InfoCircleOutlined />\n          </Tooltip>\n        </Fragment>\n      ),\n    },\n    {\n      title: <FormattedMessage id=\"type\" defaultMessage=\"type\" />,\n      dataIndex: 'type',\n      hideInSearch: true,\n    },\n\n    {\n      title: <FormattedMessage id=\"value\" defaultMessage=\"value\" />,\n      dataIndex: 'value',\n      hideInForm: true,\n      hideInSearch: true,\n      render: (_, record) => record.value,\n    },\n    {\n      hideInSearch: true,\n      title: <FormattedMessage id=\"pages.searchTable.titleOption\" defaultMessage=\"操作\" />,\n      dataIndex: 'option',\n      valueType: 'option',\n      render: (_, record) => [\n        record.id > 0 ? (\n          <Tooltip key=\"edit\" title={<FormattedMessage id=\"edit\" defaultMessage=\"edit\" />}>\n            <Button\n              type=\"primary\"\n              icon={<EditOutlined />}\n              onClick={() => setModalVisible(record.id)}\n            />\n          </Tooltip>\n        ) : (\n          <Tooltip key=\"create\" title={<FormattedMessage id=\"create\" defaultMessage=\"create\" />}>\n            <Button\n              type=\"primary\"\n              icon={<PlusOutlined />}\n              onClick={() => {\n                setModalVisible(initialData[record.key] || -1);\n              }}\n            />\n          </Tooltip>\n        ),\n\n        <Popconfirm\n          key=\"delete\"\n          title={\n            <FormattedMessage\n              id=\"deleteQuestion\"\n              defaultMessage=\"Are you sure to delete this record?\"\n            />\n          }\n          onConfirm={async () => {\n            const success = await handleRemove(intl, record.id);\n            if (success) {\n              setModalVisible(false);\n              if (actionRef.current) {\n                actionRef.current.reload();\n              }\n            }\n          }}\n          okText={<FormattedMessage id=\"yes\" defaultMessage=\"Yes\" />}\n          cancelText={<FormattedMessage id=\"no\" defaultMessage=\"No\" />}\n        >\n          {record.id > 0 ? (\n            <Tooltip title={<FormattedMessage id=\"delete\" defaultMessage=\"delete\" />}>\n              <Button type=\"primary\" icon={<DeleteOutlined />} danger />\n            </Tooltip>\n          ) : null}\n        </Popconfirm>,\n      ],\n    },\n  ];\n\n  const updateConfigDynamically = (value: API.Setting) => {\n    if (!value) return;\n    if (!initialState?.config?.length && value) {\n      setInitialState({ ...initialState, config: [value] });\n    }\n    if (!initialState?.config) return;\n    const config = initialState?.config.map((setting) => {\n      if (setting.key === value.key) {\n        return {\n          ...setting,\n          ...value,\n        };\n      }\n      return setting;\n    });\n    setInitialState({ ...initialState, config });\n  };\n\n  return (\n    <React.Fragment>\n      <ProTable<API.Setting, API.PageParams & { group: string }>\n        headerTitle={intl.formatMessage({\n          id: 'menu.settings',\n        })}\n        search={false}\n        toolBarRender={false}\n        actionRef={actionRef}\n        rowKey=\"id\"\n        request={({ pageSize, current }) => {\n          return settings({\n            per_page: pageSize,\n            current,\n            group: 'global',\n          }).then((response) => {\n            if (response.success) {\n              const rows: API.Setting[] = [\n                ...Object.keys(initialData).map(\n                  (key) => response.data.find((item) => item.key === key) || initialData[key],\n                ),\n                ...response.data.filter((item) => !Object.keys(initialData).includes(item.key)),\n              ];\n\n              return {\n                data: rows,\n                total: rows.length,\n                success: true,\n              };\n            }\n            return [];\n          });\n        }}\n        columns={columns}\n      />\n\n      <SettingsModalForm\n        groups={[]}\n        id={modalVisible}\n        visible={modalVisible}\n        initialData={initialData}\n        onVisibleChange={(value) => {\n          return !value && setModalVisible(false);\n        }}\n        onFinish={async (value) => {\n          let fields = value as API.Setting;\n\n          if (fields.type === 'number') {\n            fields = { ...fields, value: String(fields.data) };\n          }\n\n          if (fields.type === 'boolean') {\n            fields = { ...fields, value: fields.data };\n          }\n\n          if (fields.type === 'array') {\n            fields = { ...fields, value: JSON.parse(fields.value) };\n          }\n\n          const { success, updatedSettings } = await handleUpdate(\n            intl,\n            fields,\n            Number(modalVisible),\n          );\n          if (success) {\n            if (updatedSettings?.success) updateConfigDynamically(updatedSettings.data);\n            setModalVisible(false);\n            if (actionRef.current) {\n              actionRef.current.reload();\n            }\n          }\n        }}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default TableList;\n","import type { AxiosRequestConfig } from '@umijs/max';\nimport { request } from 'umi';\n\ndeclare const REACT_APP_API_URL: string;\n\n/**  GET /api/currentUser */\nexport async function files(\n  params: API.CourseParams & {\n    // query\n    directory: string;\n    page?: number;\n  },\n  options?: AxiosRequestConfig,\n) {\n  return request<API.FileList>('/api/admin/file/list', {\n    method: 'GET',\n    params,\n    ...(options || {}),\n  });\n}\n\nexport async function findFile(\n  params: API.CourseParams & {\n    directory: string;\n    name: string;\n    page?: number;\n  },\n  options?: AxiosRequestConfig,\n) {\n  return request<API.FileList>(`/api/admin/file/find`, {\n    method: 'GET',\n    params,\n    ...(options || {}),\n  });\n}\n\n/**  GET /api/currentUser */\nexport async function upload(file: File, directory: string, options?: AxiosRequestConfig) {\n  const formData = new FormData();\n  formData.append('file[]', file);\n  formData.append('target', directory);\n\n  return request<API.FileUpload>('/api/admin/file/upload', {\n    method: 'POST',\n    data: formData,\n    ...(options || {}),\n  });\n}\n\nexport const resizedImage = (path: string, width = 1000) =>\n  `${window.REACT_APP_API_URL || REACT_APP_API_URL}/api/images/img?path=${path}&w=${width}`;\n\n/**  GET /api/currentUser */\nexport async function remove(url: string, options?: AxiosRequestConfig) {\n  return request<API.FileList>('/api/admin/file/delete', {\n    method: 'DELETE',\n    data: {\n      url,\n    },\n    ...(options || {}),\n  });\n}\n","import type { AxiosRequestConfig } from '@umijs/max';\nimport { request } from 'umi';\n\nexport async function h5p(params: API.H5PListParams, options?: AxiosRequestConfig) {\n  return request<API.DefaultMetaResponse<API.H5PContentListItem>>(`/api/admin/hh5p/content`, {\n    method: 'GET',\n    params,\n    ...(options || {}),\n  });\n}\n\nexport async function getH5p(id: number, options?: AxiosRequestConfig) {\n  return request<API.DefaultResponse<API.H5PObject>>(`/api/admin/hh5p/content/${id}`, {\n    method: 'GET',\n    ...(options || {}),\n  });\n}\n\nexport const editorSettings = (\n  id?: string | number,\n  lang: string = 'en',\n  options?: AxiosRequestConfig,\n) => {\n  let url: string = id ? `/api/admin/hh5p/editor/${id}` : `/api/admin/hh5p/editor`;\n  url = lang ? `${url}?lang=${lang}` : url;\n  return request<API.DefaultResponse<API.H5PObject>>(url, {\n    method: 'GET',\n    ...(options || {}),\n  });\n};\n\nexport const contentSettings = (\n  id?: string | number,\n  lang: string = 'en',\n  options?: AxiosRequestConfig,\n) => {\n  let url: string = `/api/admin/hh5p/content/${id}`;\n  url = lang ? `${url}?lang=${lang}` : url;\n  return request<API.DefaultResponse<API.H5PObject>>(url, {\n    method: 'GET',\n    ...(options || {}),\n  });\n};\n\nexport async function updateContent(\n  body: any,\n  id?: number | string | undefined,\n  options?: AxiosRequestConfig,\n) {\n  return request<API.DefaultResponse<{ id: number }>>(\n    id ? `/api/admin/hh5p/content/${id}` : `/api/admin/hh5p/content`,\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      data: body,\n      ...(options || {}),\n    },\n  );\n}\n\nexport async function removeH5P(id: number) {\n  return request<API.DefaultResponse<unknown>>(`/api/admin/hh5p/content/${id}`, {\n    method: 'DELETE',\n  });\n}\n\nexport async function allContent(options?: AxiosRequestConfig) {\n  return request<API.DefaultMetaResponse<API.H5PContentListItem>>(\n    '/api/admin/hh5p/content?per_page=0',\n    {\n      method: 'GET',\n      ...(options || {}),\n    },\n  );\n}\n","import type { AxiosRequestConfig } from '@umijs/max';\nimport { request } from 'umi';\n\nexport async function reports(\n  params: {\n    // query\n    metric: API.ReportType;\n    date?: string;\n    limit?: number;\n  },\n  options?: AxiosRequestConfig,\n) {\n  return request<API.ReportList>('/api/admin/reports/report', {\n    params,\n    method: 'GET',\n    /* useCache: true */ useCache: false,\n    ...(options || {}),\n  });\n}\n\n/* GET /api/admin/stats/course/:course_id/export */\nexport async function exportStatForCourse(\n  course_id: number,\n  params: API.ExportStatForCourseParams,\n  options?: AxiosRequestConfig,\n) {\n  return request<Blob | API.DefaultResponseError>(`/api/admin/stats/course/${course_id}/export`, {\n    params,\n    method: 'GET',\n    /* useCache: true */ useCache: false,\n    responseType: 'blob',\n    headers: {\n      accept: 'application/vnd.ms-excel',\n    },\n    ...(options || {}),\n  });\n}\n\n/* GET /api/admin/stats/topic/:topic_id/export */\nexport async function exportStatForTopic(\n  topic_id: number,\n  stat: API.TopicStatsKey,\n  options?: AxiosRequestConfig,\n) {\n  return request<Blob | API.DefaultResponseError>(`/api/admin/stats/topic/${topic_id}/export`, {\n    method: 'GET',\n    /* useCache: true */ useCache: false,\n    params: { stat },\n    responseType: 'blob',\n    headers: {\n      accept: 'application/vnd.ms-excel',\n    },\n    ...(options || {}),\n  });\n}\n","import type { AxiosRequestConfig } from '@umijs/max';\nimport { request } from 'umi';\n\n/**  GET /api/admin/users */\nexport async function scorms(\n  params: API.PageParams &\n    API.PaginationParams & {\n      search?: string;\n    },\n  options?: AxiosRequestConfig,\n) {\n  return request<API.ScormList>('/api/admin/scorm', {\n    params,\n    method: 'GET',\n    /* useCache: true */ useCache: false,\n    ...(options || {}),\n  });\n}\n\n/**  GET /api/scorm/scos */\nexport async function scormssco(\n  params: {\n    // query\n    current?: number;\n    pageSize?: number;\n    search?: string;\n  },\n  options?: AxiosRequestConfig,\n) {\n  return request<API.ScormScosList>('/api/admin/scorm/scos', {\n    params: {\n      ...params,\n      per_page: params.pageSize,\n      page: params.current,\n    },\n    method: 'GET',\n    /* useCache: true */ useCache: false,\n    ...(options || {}),\n  });\n}\n\nexport async function deleteScorm(id: number, options?: AxiosRequestConfig) {\n  return request<API.SCORM>(`/api/admin/scorm/${id}`, {\n    method: 'DELETE',\n    ...(options || {}),\n  });\n}\n"],"names":["ExportStatsButton","_ref","course_id","_ref$stat","stat","_useState","useState","_useState2","_slicedToArray","loading","setLoading","onClickFactory","useCallback","courseId","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","downloadLink","wrap","_context","prev","next","exportStatForCourse","sent","Blob","document","createElement","href","window","URL","createObjectURL","download","concat","body","appendChild","click","removeChild","t0","console","error","finish","stop","_jsxs","Button","type","onClick","children","_jsx","ExportOutlined","FormattedMessage","id","findH5PType","topic","topicable","content","contents","Object","values","library","UserProgress","topics","stats","showSeconds","setShowSeconds","columns","useMemo","title","dataIndex","render","TypeButtonDrawer","type_id","_toConsumableArray","map","_topic$topicable_type","topicable_type","split","pop","row","result","started_at","finished_at","Space","Tag","color","seconds","timeDisplay","React","dataSource","userStat","reduce","acc","find","userStatTopic","_objectSpread","_defineProperty","Number","email","Table","Row","justify","align","defaultMessage","Switch","checked","onChange","v","size","scroll","x","components","table","props","ScrollContainer","horizontal","style","maxWidth","hideScrollbars","UserCourseFinish","_ref2","attempts","text","format","Date","DATETIME_FORMAT","_ref3","courseAttempts","attempt","attemptCount","Array","isArray","length","UserCourseAttempts","_ref4","_useState3","_useState4","choosenUserEmail","setChoosenUserEmail","_useState5","_useState6","choosenAttempt","setChoosenAttempt","intl","useIntl","flatMap","userStats","_ref5","dates","datesValue","_ref6","date","seconds_total","config","xField","yField","seriesField","isStack","xAxis","label","autoHide","autoRotate","slider","start","end","position","layout","ProCard","Select","showSearch","value","newValue","placeholder","_ref7","Option","disabled","Set","filter","_ref8","_ref9","colSpan","overflow","minHeight","width","Column","tooltip","formatMessage","formatter","datum","minutes","Math","floor","name","data","_ref10","_ref11","isInteger","FilesBrowserActions","directory","onUploaded","Typography","Text","code","SecureUpload","url","target","onUpload","success","FilesBrowser","_ref2$defaultDirector","defaultDirectory","onFile","_ref2$hideDeleteBtn","hideDeleteBtn","_ref2$forceLoading","forceLoading","_ref2$hideAddBtn","hideAddBtn","current_page","undefined","per_page","last_page","total","state","setState","controllerRef","useRef","prevState","handleSuccessResponse","dir","slice","join","created_at","mime","file","fetchFiles","_controllerRef$curren","page","arguments","abort","current","AbortController","files","signal","then","useEffect","onRemove","remove","findByInputValue","input","_controllerRef$curren2","findFile","className","Input","e","List","itemLayout","header","footer","renderItem","item","Item","actions","danger","icon","DeleteOutlined","Meta","avatar","FolderOutlined","rel","DownloadOutlined","description","Pagination","pageSizeOptions","pageSize","useTokenChangeListener","onTokenChange","onTokenChangeRef","eventHandler","token","localStorage","getItem","addEventListener","removeEventListener","H5P_EDITOR_IFRAME_ID","EditorMessage","sendNewTokenToIFrame","newToken","_iframe$contentWindow","iframe","getElementById","contentWindow","postMessage","TokenChanged","Editor","onSubmitted","onLoaded","settings","setEditorSettings","setError","lang","locale","editorSettings","message","err","toString","onSubmit","updateContent","responseData","Alert","ContextlessEditor","onError","allowSameOrigin","iframeId","Col","Spin","Card","_ref$defaultCard","defaultCard","tabs","defaultActiveKey","TabPane","tab","Player","Title","onXAPI","XAPIEvents","setXAPIEvents","_useState7","_useState8","contentSettings","ContextlessPlayer","contentId","event","Divider","maxHeight","level","ReactJson","src","UploadH5P","onSuccess","hideLabel","accept","info","status","PdfZipList","pdfIds","onProgress","onFinished","_ref$filename","filename","blobs","setBlobs","onFinishedLocal","allBlobs","zip","JSZip","forEach","blob","i","generateAsync","saveAs","pdfId","fetch","REACT_APP_API_URL","headers","Authorization","pdfBlob","prevBlobs","progress","pdfs","_x","_x2","_pdfs","apply","params","options","abrupt","request","method","pdf","_x3","_x4","_pdf","_callee2","_context2","generatedPdf","_x5","_x6","_generatedPdf","_callee3","_context3","PdfList","user_id","template_id","previewState","setPreviewState","generateAll","setGenerateAll","abortController","list","getPdf","Fragment","strong","AuthenticatedLinkButton","Context","getRandomId","round","random","getFlatLessons","lessons","curr","getFlatTopics","_curr$topics","recursiveAddTopicToLessons","lessonId","lesson","_lesson$topics","_lesson$topics2","recursiveAddLessonToLessons","newLesson","recursiveEditLesson","updatedLesson","appendParentIdToLessons","lessonParentId","parent_id","recursiveDeleteLesson","recursiveDeleteTopic","topicId","recursiveTopicUploaded","prevTopicId","lesson_id","_lesson$topics3","AppContext","flatTopics","flatLessons","h5ps","setH5ps","isAssistant","setIsAssistant","l","useLocation","urlParams","URLSearchParams","search","get","getAssistantId","res","foundAssistantId","fields","class_type","getLessons","program","getLessonIdByTopicId","topic_id","lesson_item","_lesson_item$topics","currentEditMode","mode","t","addNewLesson","parentId","isNew","order","active","_prevState$lessons","updateLesson","formData","apiCreateLesson","apiUpdateLesson","_prevState$lessons2","deleteLesson","_prevState$lessons3","apiRemoveLesson","_prevState$lessons4","updateTopic","_lesson$topics4","topic_item","apiCreateTopic","apiUpdateTopic","history","push","TopicType","Video","setTimeout","deleteTopic","_prevState$lessons5","apiRemoveTopic","_prevState$lessons6","addNewTopic","newTopic","_prevState$lessons7","onTopicUploaded","cloneTopic","apiCloneTopic","_prevState$lessons8","cloneLesson","apiCloneLesson","Provider","ScormPreview","uuid","border","background","height","post","fixDirName","inputDir","fixFileName","getPath","fixedDir","fixedName","includes","getUploadChangeSuccessParam","uid","fileList","SecureUploadBrowser","folder","onResponse","_objectWithoutProperties","_excluded","showBrowser","setShowBrowser","closeModal","handleFile","_response","_Fragment","FolderOpenOutlined","Modal","open","onCancel","onOk","closeIcon","marginTop","extra","_ref$wrapInForm","wrapInForm","formProps","maxFiles","clearListAfterUpload","showUploadList","infoState","setInfoState","ConditionalWrap","condition","Form","ProFormUploadButton","max","fieldProps","action","ModelNames","ModelTypes","TableColumns","hideInSearch","sorter","_","record","AssignQuestionnary","modelType","actionRef","handleChange","qId","hide","_actionRef$current","assignQuestionnaire","unassignQuestionnaire","reload","t1","ProTable","headerTitle","rowKey","sort","_objectDestructuringEmpty","sortArr","entries","questionnaire","order_by","valueType","_record$models","defaultChecked","models","m","model_id","ExportTopicStatsButton","exportStatForTopic","staticColumns","fixed","_n","attempt_date","attempt_time","summary","toFixed","getQuestionColumns","giftQuizTopicStat","keys","k","key","GiftQuizStatistics","_quizTopics$","quizTopics","selectedTopicId","setSelectedTopicId","dynamicColumns","setDynamicColumns","topicOptions","_topicOptions$","hideInTable","defaultValue","allowClear","handleRequest","_response$data","_ref3$topic_id","responseColumns","getTopicStats","TopicStatsKey","QuizSummary","_toArray","onReset","_quizTopics$2","toolBarRender","CourseTopicsStatistics","topicsGroupedByType","_flatTopics$reduce","RichText","OEmbed","Audio","H5P","Image","PDF","SCORM","Project","GiftQuiz","Unselected","Chart","valueLabel","onTitle","_title","_value$find","onTooltip","headerBordered","isRange","interactions","enable","columnBackground","fill","CourseStatistics","_state$value$find","_state$value$find2","_state$value$find3","_state$value$find4","setTopics","Promise","all","fetchProgram","getCourseStats","programResponse","statsResponse","element","_element$","average_time","ProFormVideoUpload","form_name","src_name","getUploadedSrcField","setPath","ProForm","shouldUpdate","form","_info$file$response","setFieldsValue","formSrcName","getFieldValue","ReactPlayer","controls","getFormData","FormData","append","_iterator","_createForOfIteratorHelper","_step","s","n","done","f","set","traverse","disabledLessonId","disableNested","_lesson$lessons","ParentLesson","currentLessonId","_useContext","useContext","treeData","_state$lessons","ProFormTreeSelect","treeDefaultExpandAll","treeLine","LessonForm","onFinish","onValuesChange","onDelete","onClone","initialValues","_ref$loading","_ProForm$useForm","useForm","_ProForm$useForm2","activeFrom","useWatch","activeTo","submitter","gutter","span","Affix","offsetBottom","_props$form","submit","submitButtonProps","Popconfirm","onConfirm","okText","cancelText","ProFormText","required","labelCol","valuePropName","WysiwygMarkdown","ProFormSwitch","ProFormDatePicker","rules","validator","isAfter","reject","Error","resolve","isBefore","getStateLesson","_lesson$parent_id","Lesson","setTopicList","useParams","handleSave","course","parent_lesson_id","handleDelete","handleClone","changedValues","DescriptionModal","handleOk","isModalVisible","visible","wrapperCol","TopicForm","_React$useState","_React$useState2","visibleModal","setVisibleModal","JsonEditor","getTypeName","types","H5PContentSelect","_ref$multiple","multiple","setContents","allContent","optionFilterProp","filterOption","option","_option$children","h5pTitle","searchSubstring","H5PForm","editId","setEditId","H5PCard","h5pId","String","log","PROVIDERS","provider_name","provider_url","endpoints","schemes","discovery","Embed","providers","Oembed","currentValue","setCurrentValue","previewValue","setPreviewValue","MediaText","_ref$directory","FormWysiwygProps","pdfjs","GlobalWorkerOptions","workerSrc","version","CONFIG","acceptedTypes","audio","video","prepareObject","_typeof","JSON","stringify","PDFPreview","nPages","setNumPages","pageNumber","setPageNumber","margin","defaultPageSize","simple","Document","onLoadSuccess","numPages","Page","VideoProgress","_topic$json2","_topic$json","json","ffmpeg","clearTimeout","_topic$json3","Progress","percent","percentage","MediaUploadPreview","_topic$topicable","_topic$topicable2","_topic$topicable3","_topic$topicable4","preload","MediaUploadForm","onUpdate","_ref5$disabled","currentState","onInfoChange","preview","can_skip","introduction","UploadOutlined","padding","Resources","resources","setResources","controller","fetchResources","fetchResponse","resId","deleteResource","_response$file$respon","ScormSelect","scorms","setScorms","fetching","setFetching","currSco","setCurrSco","previewUuid","setPreviewUuid","fetchScorms","onSearch","scorm","scos","sco","flat","bodyStyle","minWidth","changeValue","toLowerCase","indexOf","notFoundContent","OptGroup","ScormSelector","SelectScorm","onAdded","onRemoved","onEdited","max_attempts","max_execution_time","min_pass_score","ProFormGroup","ProFormDigit","questions","quizId","_topicable$notify_use","notify_users","UserSelect","getTypeIcon","FundOutlined","FilePdfOutlined","AudioOutlined","FileImageOutlined","YoutubeOutlined","InteractionOutlined","VideoCameraAddOutlined","FileTextOutlined","CarryOutOutlined","PercentageOutlined","ExclamationCircleOutlined","topicCanHaveEmptyValue","Topic","_currentTopic$json3","saveIsDisabled","setSaveIsDisabled","sortOrder","_useState9","_useState10","currentTopic","setCurrentTopic","_currentTopic$json","_currentTopic$json2","fetchData","getTopic","interval","setInterval","clearInterval","updateValue","updateValues","onFormSubmit","marginBottom","RichTextEditor","MediaUpload","_info$file","_info$file$response$d","_info$file2","_info$file3","courseLessons","NewLessonListItem","ref","initialValue","onCreate","draggableProps","setValue","Tooltip","placement","RecommenderSvg","xmlns","viewBox","transform","d","stroke","strokeLinecap","strokeWidth","RecommenderIcon","Icon","component","getCourseRecommender","_getCourseRecommender","useCache","getExerciseRecommender","_getExerciseRecommender","useCourseRecommender","setCourse","useExerciseRecommender","exercise","setExercise","getTopicType","createText","formatRecommenderProbability","probability","min","ceil","abs","ExerciseRecommender","recommendedData","createTopic","Paragraph","topic_type","InfoRecommender","RecommenderPopoverContent","RecommenderPopoverInfo","Popover","trigger","showArrow","InfoCircleOutlined","Recommender","_ref$recommenderType","recommenderType","RecommenderType","Exercise","onTopicCreate","getRecommender","Info","isLoading","CourseRecommender","topicTypes","RecommenderTopicSelector","onSelected","positionsToHide","setOpen","_useModel","useModel","initialState","setSelected","havePackageInstalled","createHavePackageInstalled","packages","topicTypeIsDisabled","_initialState$config","topicTypeToSettingName","PACKAGES","TopicTypeGift","Scorm","TopicTypeProject","TopicTypes","MinusOutlined","PlusOutlined","block","TopicTypesSelector","onNewLesson","_ref$depth","depth","_initialState$package","_initialState$package2","_initialState$package3","_initialState$package4","messages","PicCenterOutlined","MovedType","mutateTopicsId","mutateLessonsId","getLessonDeeplyStringifyId","_l$lessons","_l$topics","getFlatLessonDeeplyStringifyId","_l$lessons2","getFlatTopicsStringifyId","_l$lessons3","_l$topics2","getRootLessons","hasChildren","isExpanded","getTreeDataItemsFromFlatLessonsAndTopics","items","_prevState$isExpanded","_prevState","_item$lessons","_item$topics","reorderIdArr","idArr","sourceIndex","destinationIndex","arrCopy","arrCopyContextSourceIndex","arrCopyContextDestinationIndex","_arrCopy$splice","splice","_arrCopy$splice2","removed","insertToIndexIdArr","getOrdersFromReorderedArr","index","_id$toString$split","_id$toString$split2","strId","optimisticMoveThroughTree","moveItemOnTreeParams","promise","moveItemOnTree","findParentByChildrenId","childrenId","findChildrenIndexPosition","_treeData$items$paren","_treeData$items","LessonList","rootLessons","flatLessonsAndTopics","_state$lessons2","_state$lessons3","rootId","setTreeData","root","nestingSettings","setting","getHiddenNewTopicOptions","_nestingSettings$less","_nestingSettings$topi","hiddenOptions","maxLessonsNestingInProgram","minTopicNestingInProgram","topicType","_currentEditMode$valu","_currentEditMode$valu2","provided","onExpand","onCollapse","_item$id$toString$spl","_item$id$toString$spl2","checkLastTopic","currentTopicId","_lessonTopics$topics","lessonTopics","lastTopic","dragHandleProps","innerRef","NavLink","to","itemId","mutateTree","onDragEnd","source","destination","sourceChildren","movedFullId","_movedFullId$split","_movedFullId$split2","movedType","movedId","destinationChildren","_toString$split$","_toString$split","_destinationLesson$id","topicsIds","destinationLesson","destinationDepth","destinationTopicPos","reorderedArr","orders","destinationLessonsIds","destinationTopicsIds","maxLessonPos","_destinationLesson$id2","_destinationLesson$id3","destinationStrId","prevLessonState","updatingValues","_reorderedArr","destinationOrders","_destinationTopicPos","_destinationLesson$id4","_destinationLesson$id5","_destinationStrId","_updatingValues","_reorderedArr2","_destinationOrders","_formData","lessonsIds","_topicsIds","minLessonPos","_maxLessonPos","_reorderedArr3","_orders","minTopicPos","maxTopicPos","_reorderedArr4","_orders2","_destination$parentId","_destination$parentId2","_destinationLessonsIds","_destinationTopicsIds","_destinationDepth","_destination$index","_minLessonPos","_maxLessonPos2","destIndex","_destination$parentId3","_destination$parentId4","_destinationStrId2","_prevLessonState","_updatingValues2","_formData2","_reorderedArr5","_destinationOrders2","_destination$index2","_minTopicPos","_maxTopicPos","_destIndex","_destination$parentId5","_destination$parentId6","_destinationStrId3","_updatingValues3","_reorderedArr6","_destinationOrders3","_formData3","New","warning","Tree","offsetPerLevel","tree","isDragEnabled","isNestingEnabled","CurriculumList","onNew","Curriculum","ProgramForm","ThreeColProgram","projectSolutions","_projectSolutions","deleteProjectSolution","_deleteProjectSolution","handleRemove","ProjectsList","projectTopics","setProjectTopics","enumsProjectTopics","_curr$id","_curr$title","_curr$id2","valueEnum","_enumsProjectTopics$r","_enumsProjectTopics$r2","Link","renderFormItem","defaultRender","rest","stateType","file_url","_d","_i","flatProjectTopics","meta","CourseSuccessModal","_props$visible","handleCancel","CourseAccessForm","postSetAccess","fetchAccess","users","user","groups","group","UserGroupSelect","assignable","_assignable","assign","_assign","unassign","_x7","_x8","_unassign","assigned","_x9","_x10","_assigned","_callee4","_context4","AssignTemplateSelect","assignable_class","assignable_id","onAssign","onUnassign","onTemplates","templates","setTemplates","currentTemplates","setCurrentTemplates","setTemplatesFromResponse","responseTemplates","fetchAssiged","fetchGetAssigned","fetchAssignales","fetchGetAssignables","removeIdFromCurrentTemplates","prevTemplates","addIdFromCurrentTemplates","valuesToAssign","valuesToUnassign","postAssign","postUnassign","template","channel","CourseCertificateForm","currTemplates","setCurrTemplates","pdfTemplates","tplId","tpl","CertificateSelector","TabNames","_initialState$config$","_initialState$config$2","_initialState$config2","_params$tab","ATTRIBUTES","access","useAccess","setData","_useValidateFormEdit","useValidateFormEdit","manageCourseEdit","setManageCourseEdit","validateCourseEdit","fromDateValidation","setFromDateValidation","toDateValidation","setToDateValidation","showModal","manageSuccessModal","setManageSuccessModal","isFirstTimeEdit","setIsFirstTimeEdit","locales","getAllLocales","setInitialState","showPublicSwitch","tabsToHide","settingValue","_response$data$catego","_response$data$tags","getCourse","categories","categoriesArrToIds","tags","tagsArrToIds","active_from","active_to","valuesChanged","_onFinish","postData","disableEdit","clicked","authors","author","scorm_sco_id","image_url","image_path","splitImagePath","video_url","video_path","poster_url","poster_path","hours_to_complete","createCourse","updateCourse","showConfirmModal","PageContainer","breadcrumb","routes","path","breadcrumbName","activeKey","collapsed","closable","EditValidateModal","setManage","ProFormSelect","a","getLocale","draft","published","archived","published_unactivated","salesPermission","ProductWidget","productable","class_id","quantity","PRODUCT","ProFormImageUpload","removedPath","MEDIA","CategoryCheckboxTree","TagsInput","CATEGORIES","cardProps","PROGRAM","scormListPermission","CourseAccess","ACCESS","certificatesPermission","CERTIFICATES","questionnaireListPermission","COURSE","QUESTIONNAIRES","statistics","STATISTICS","user_submission","UserSubmissions","USER_SUBMISSION","user_projects","USER_PROJECTS","ConfirmModal","FilesSelector","_ref$type","readOnly","SettingsModalForm","onVisibleChange","initialData","_Form$useForm","_Form$useForm2","setType","isGlobalGroup","selectedGroup","setSelectedGroup","_id$type","resetFields","ModalForm","AutoComplete","autoFocus","inputValue","ProFormRadio","Group","ProFormTextArea","noStyle","parse","_unused","checkedChildren","CheckOutlined","unCheckedChildren","CloseOutlined","hidden","ProFormCheckbox","_unused2","handleUpdate","updatedSettings","updateSettings","createSettings","deleteSettings","snakeToCamel","str","replace","toUpperCase","substr","courseEditTabsKeys","courseEditAdditionalSettingsKeys","templateTabsKeys","pathToSettingName","booleanSettings","enumerable","feature","preInitialData","logo","frontURL","companyName","companyURL","logoLogin","logoFooter","footerFontColor","showLoginBackgroundImage","loginHeaderBackgroundColor","loginHeaderFontColor","loginFormBackgroundColor","contentBackgroundColor","technicalMaintenance","technicalMaintenanceText","isRoute","route","TableList","modalVisible","setModalVisible","setInitialData","getRoutes","hideInDataRecords","prevInitialData","hideInForm","EditOutlined","updateConfigDynamically","rows","_yield$handleUpdate","_files","_findFile","upload","_upload","resizedImage","_remove","h5p","_h5p","getH5p","_getH5p","_updateContent","removeH5P","_removeH5P","_allContent","_callee5","_context5","reports","_reports","_exportStatForCourse","responseType","_exportStatForTopic","_scorms","scormssco","_scormssco","deleteScorm","_deleteScorm"],"sourceRoot":""}