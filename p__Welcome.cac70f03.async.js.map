{"version":3,"sources":["webpack:///./src/components/PieChart/PieChart.tsx","webpack:///./src/components/ResponsiveImage/index.tsx","webpack:///./src/components/Dashboard/Add/index.tsx","webpack:///./src/components/Columns/index.tsx","webpack:///./src/components/Dashboard/CurrentUsers/index.tsx","webpack:///./src/components/Dashboard/Customers/index.tsx","webpack:///./src/components/Statistics/index.tsx","webpack:///./src/components/Dashboard/HallOfFame/index.tsx","webpack:///./src/components/Dashboard/Ratings/index.tsx","webpack:///./src/components/Dashboard/Sales/index.tsx","webpack:///./src/components/Dashboard/Tutorial/index.tsx","webpack:///./src/components/Dashboard/YourCourses/index.tsx","webpack:///./src/components/Dashboard/PieChart/index.tsx","webpack:///./src/components/Dashboard/index.tsx","webpack:///./src/pages/Welcome.tsx","webpack:///./src/services/escola-lms/reports.ts"],"names":["columns","title","dataIndex","key","PieChart","metric","header","asDonut","customLabelTitle","customLabelContent","useState","mode","state","setState","intl","useIntl","config","appendPadding","angleField","colorField","radius","label","type","offset","content","_ref","percent","concat","toFixed","style","fontSize","textAlign","interactions","legend","itemValue","alignRight","formatter","text","item","value","find","name","donutConfig","innerRadius","itemWidth","undefined","itemName","offsetX","_","completeConfig","useEffect","reports","then","response","success","data","error","message","catch","err","toString","onDownload","useCallback","options","filename","split","join","fieldSeparator","quoteStrings","decimalSeparator","showLabels","showTitle","formatMessage","id","pop","useTextFile","useBom","useKeysAsHeaders","csvExporter","ExportToCsv","generateCsv","ResponsiveImage","path","size","srcSizes","alt","props","src","window","REACT_APP_API_URL","srcSet","map","srcSize","Add","onAddButtonClick","keys","justifyContent","isGroup","xField","yField","seriesField","Columns","dataRangeStats","Object","entries","reduce","acc","ActiveUsers","val","date","NewUsers","DashdoardComponent","Statistics","bestRatedRequest","bestRated","bestSellingRequest","bestSelling","Promise","all","length","slice","idx","color","Text","Title","list","setList","loading","setLoading","useModel","initialState","courseId","setCourseId","ratings","setRatings","fetchCourses","course","authors","currentUser","request","fetchQuestionnaireStars","questionnaireStars","Number","listOptions","ratingsPercentage","rates","sort","rate","sum_rates","values","courses","marginTop","count_answers","marginBottom","marginRight","avg_rate","roundPercentageList","index","reverse","background","borderRadius","truncate","str","n","substring","order","order_by","position","left","zIndex","image_path","summary","ResponsiveGridLayout","WidthProvider","Responsive","COLS","ROW_HEIGHT","wrap","component","components","CurrentUsers","w","h","maxH","customers","Customers","HallOfFame","Ratings","sales","Sales","tutorial","Tutorial","YourCourses","add","defaultStageComponents","Dashboard","stageComponents","setStageComponents","keysToAdd","useMemo","filter","includes","onAdd","prevStageComponents","onRemove","k","layouts","x","y","localStorage","layoutFromLS","getItem","layout","JSON","parse","l","currItem","i","lg","md","sm","xs","setItem","stringify","onLayoutChange","changedLayouts","xxs","saveToLS","Component","baseUrl","token","url","params","method","useCache","course_id","responseType","headers","accept","topic_id","stat"],"mappings":"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","file":"p__Welcome.cac70f03.async.js","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport type { PieConfig } from '@ant-design/plots';\nimport { Pie } from '@ant-design/plots';\nimport { reports } from '@/services/escola-lms/reports';\nimport { Spin, Alert, Button, Table } from 'antd';\nimport { FormattedMessage, useIntl } from 'umi';\nimport ProCard from '@ant-design/pro-card';\nimport { FileExcelOutlined } from '@ant-design/icons';\nimport { ExportToCsv } from 'export-to-csv';\n\nconst columns = [\n  {\n    title: <FormattedMessage id=\"label\" defaultMessage=\"label\" />,\n    dataIndex: 'label',\n    key: 'label',\n  },\n  {\n    title: <FormattedMessage id=\"value\" defaultMessage=\"value\" />,\n    dataIndex: 'value',\n    key: 'value',\n  },\n];\n\ntype State =\n  | {\n      mode: 'init';\n    }\n  | {\n      mode: 'loading';\n    }\n  | {\n      mode: 'error';\n      error: string;\n    }\n  | {\n      mode: 'loaded';\n      value: API.Report;\n    };\n\nconst PieChart: React.FC<{\n  metric: API.ReportType;\n  header?: boolean;\n  asDonut?: boolean;\n  customLabelTitle?: (text: string) => string;\n  customLabelContent?: (value: API.ReportItem) => string;\n}> = ({ metric, header = true, asDonut = false, customLabelTitle, customLabelContent }) => {\n  const [state, setState] = useState<State>({ mode: 'init' });\n  const intl = useIntl();\n\n  const config: Omit<PieConfig, 'data'> = {\n    appendPadding: 10,\n    angleField: 'value',\n    colorField: 'label',\n    radius: 0.9,\n    label: {\n      type: 'inner',\n      offset: '-30%',\n\n      content: function content(_ref: Record<string, any>) {\n        const percent = _ref.percent as number;\n        return percent >= 0.01 ? ''.concat((percent * 100).toFixed(0), '%') : '';\n      },\n      style: {\n        fontSize: 14,\n        textAlign: 'center',\n      },\n    },\n    interactions: [{ type: 'element-active' }],\n    legend: {\n      itemValue: {\n        alignRight: true,\n        formatter: (text, item) => {\n          if (customLabelContent && 'value' in state) {\n            const value = state.value.find(({ label }) => label === item.name);\n            return value ? customLabelContent(value) : text;\n          }\n          return text;\n        },\n      },\n    },\n  };\n\n  const donutConfig: Pick<PieConfig, 'innerRadius' | 'label' | 'appendPadding' | 'legend'> = {\n    appendPadding: 20,\n    innerRadius: 0.6,\n    label: {\n      ...config.label,\n      offset: '-50%',\n    },\n    legend: {\n      itemWidth: undefined,\n      itemName: {\n        formatter: (text) => (customLabelTitle ? customLabelTitle(text) : text),\n      },\n      offsetX: -24,\n      itemValue: {\n        formatter: (_, item) => {\n          if (customLabelContent && 'value' in state) {\n            const value = state.value.find(({ label }) => label === item.value);\n            return value ? customLabelContent(value) : undefined;\n          }\n          return undefined;\n        },\n      },\n    },\n  };\n\n  const completeConfig: Omit<PieConfig, 'data'> = {\n    ...config,\n    ...(asDonut ? donutConfig : {}),\n  };\n\n  useEffect(() => {\n    setState({ mode: 'loading' });\n\n    reports({ metric })\n      .then((response) => {\n        if (response.success) {\n          setState({ mode: 'loaded', value: response.data });\n        } else {\n          setState({ mode: 'error', error: response.message });\n        }\n      })\n      .catch((err) => setState({ mode: 'error', error: err.toString() }));\n  }, [metric]);\n\n  const onDownload = useCallback(() => {\n    if (state.mode === 'loaded') {\n      const options = {\n        filename: metric.split('\\\\').join('-'),\n        fieldSeparator: ',',\n        quoteStrings: '\"',\n        decimalSeparator: '.',\n        showLabels: true,\n        showTitle: true,\n        title: intl.formatMessage({ id: metric.split('\\\\').pop() }),\n        useTextFile: false,\n        useBom: true,\n        useKeysAsHeaders: true,\n        // headers: ['Column 1', 'Column 2', etc...] <-- Won't work with useKeysAsHeaders present!\n      };\n\n      const csvExporter = new ExportToCsv(options);\n\n      csvExporter.generateCsv(state.value);\n    }\n  }, [state]);\n\n  return (\n    <ProCard\n      title={\n        header && (\n          <FormattedMessage\n            id={metric.split('\\\\').pop()}\n            defaultMessage={metric.split('\\\\').pop()}\n          />\n        )\n      }\n      extra={\n        header && (\n          <Button icon={<FileExcelOutlined />} size=\"small\" onClick={() => onDownload()}>\n            {' '}\n            <FormattedMessage id={'download'} />\n            {'\\u00A0'}CSV\n          </Button>\n        )\n      }\n      headerBordered\n    >\n      {state.mode === 'loading' && <Spin />}\n      {state.mode === 'loaded' && (\n        <div>\n          <Pie {...completeConfig} data={state.value} />\n          {header && (\n            <Table pagination={false} size=\"small\" dataSource={state.value} columns={columns} />\n          )}\n        </div>\n      )}\n      {state.mode === 'error' && <Alert message={state.error} type=\"error\" />}\n    </ProCard>\n  );\n};\n\nexport default PieChart;\n","import React from 'react';\nimport { Image } from 'antd';\nimport type { ImageProps } from 'antd';\ndeclare const REACT_APP_API_URL: string;\n\ninterface ResponsiveImageProps extends ImageProps {\n  path: string;\n  size?: number;\n  srcSizes?: number[];\n  alt?: string;\n}\n\nconst ResponsiveImage: React.FC<ResponsiveImageProps> = ({\n  path,\n  size,\n  srcSizes,\n  alt = 'LMS Image',\n  ...props\n}) => {\n  const src = `${window.REACT_APP_API_URL || REACT_APP_API_URL}/api/images/img?path=${path}&w=${\n    srcSizes ? srcSizes[0] : size\n  }`;\n  const srcSet =\n    srcSizes &&\n    srcSizes.map(\n      (srcSize) =>\n        `${\n          window.REACT_APP_API_URL || REACT_APP_API_URL\n        }/api/images/img?path=${path}&w=${srcSize} ${srcSize}w`,\n    );\n\n  return (\n    <div className=\"escolalms-image\">\n      <Image src={src} srcSet={srcSet && srcSet.join(',')} alt={alt} {...props} />\n    </div>\n  );\n};\n\nexport default ResponsiveImage;\n","import React from 'react';\nimport { FormattedMessage } from 'umi';\nimport { Button, Row, Space, Typography } from 'antd';\nimport { PlusSquareOutlined } from '@ant-design/icons';\n\ninterface Props {\n  onAddButtonClick: (key: string) => void;\n  keys: string[];\n}\n\nconst Add: React.FC<Props> = ({ onAddButtonClick, keys }) => (\n  <div className=\"dashboard-draggable__component\">\n    <article className=\"dashboard-draggable__add\">\n      <Row align=\"middle\" justify=\"center\">\n        <Typography.Title level={3}>\n          <FormattedMessage id=\"add_new_component\" />\n        </Typography.Title>\n      </Row>\n      <Row align=\"middle\" justify=\"center\">\n        <Space wrap style={{ justifyContent: 'center' }}>\n          {keys.map((key) => (\n            <Button\n              icon={<PlusSquareOutlined />}\n              size=\"small\"\n              type=\"primary\"\n              key={key}\n              onClick={() => onAddButtonClick(key)}\n            >\n              {' '}\n              <FormattedMessage id={key} />\n            </Button>\n          ))}\n        </Space>\n      </Row>\n    </article>\n  </div>\n);\n\nexport default Add;\n","import React, { useState, useEffect } from 'react';\nimport { Column } from '@ant-design/plots';\nimport ProCard from '@ant-design/pro-card';\nimport { useIntl } from 'umi';\nimport { Alert, Spin } from 'antd';\nimport { dataRangeStats } from '@/services/escola-lms/user';\n\nconst config = {\n  isGroup: true,\n  xField: 'date',\n  yField: 'value',\n  seriesField: 'name',\n};\n\ntype State =\n  | {\n      mode: 'init';\n    }\n  | {\n      mode: 'loading';\n    }\n  | {\n      mode: 'error';\n      error: string;\n    }\n  | {\n      mode: 'loaded';\n      value: Record<string, any>;\n    };\n\nconst Columns: React.FC<{ metric: API.ReportType }> = ({ metric }) => {\n  const [state, setState] = useState<State>({ mode: 'init' });\n  const intl = useIntl();\n\n  useEffect(() => {\n    setState({ mode: 'loading' });\n\n    dataRangeStats()\n      .then((response) => {\n        if (response.success) {\n          setState({\n            mode: 'loaded',\n            value: Object.entries(response.data).reduce(\n              (acc, value) => ({\n                ...acc,\n                [intl.formatMessage({\n                  id: value[0].split('\\\\').pop(),\n                })]: value[1],\n              }),\n              {},\n            ),\n          });\n        } else {\n          setState({ mode: 'error', error: response.message });\n        }\n      })\n      .catch((err) => setState({ mode: 'error', error: err.toString() }));\n  }, [metric]);\n\n  return (\n    <ProCard headerBordered>\n      {state.mode === 'loading' && <Spin />}\n      {state.mode === 'loaded' && (\n        <div>\n          <Column\n            {...config}\n            data={[\n              ...Object.entries({ ...state.value.ActiveUsers }).map(([key, val]) => ({\n                date: key,\n                name: 'Active users',\n                value: val,\n              })),\n              ...Object.entries({ ...state.value.NewUsers }).map(([key, val]) => ({\n                date: key,\n                name: 'New users',\n                value: val,\n              })),\n            ]}\n          />\n        </div>\n      )}\n      {state.mode === 'error' && <Alert message={state.error} type=\"error\" />}\n    </ProCard>\n  );\n};\n\nexport default Columns;\n","import Columns from '@/components/Columns';\nimport { FormattedMessage } from 'umi';\n\nexport const DashdoardComponent: React.FC<{ metric: API.ReportType }> = ({ metric }) => {\n  return (\n    <div className=\"dashboard-draggable__component\">\n      <h3>\n        <FormattedMessage id=\"current_user_status\" defaultMessage=\"Current User Status\" />\n      </h3>\n      <article>\n        <Columns metric={metric} />\n      </article>\n    </div>\n  );\n};\n\nexport default DashdoardComponent;\n","import { FormattedMessage } from 'umi';\n\nexport const DashdoardComponent: React.FC = () => {\n  return (\n    <div className=\"dashboard-draggable__component\">\n      <h3>\n        <FormattedMessage id=\"customers\" />\n      </h3>\n      <article>\n        <div>This Dashboard component is not yet implemented. Sorry</div>\n      </article>\n    </div>\n  );\n};\n\nexport default DashdoardComponent;\n","import React, { useState, useEffect } from 'react';\nimport { Alert, Spin, Statistic } from 'antd';\nimport { reports } from '@/services/escola-lms/reports';\nimport { TrophyOutlined } from '@ant-design/icons';\nimport './index.less';\n\ninterface LoadedValue {\n  bestRated: API.Report;\n  bestSelling: API.Report;\n}\n\ntype State =\n  | {\n      mode: 'init';\n    }\n  | {\n      mode: 'loading';\n    }\n  | {\n      mode: 'error';\n      error: string;\n    }\n  | {\n      mode: 'loaded';\n      value: LoadedValue;\n    };\n\nconst Statistics: React.FC<{\n  metric: Record<'bestRated' | 'bestSelling', API.ReportType>;\n}> = ({ metric }) => {\n  const [state, setState] = useState<State>({ mode: 'init' });\n\n  useEffect(() => {\n    setState({ mode: 'loading' });\n\n    const bestRatedRequest = reports({ metric: metric.bestRated });\n    const bestSellingRequest = reports({ metric: metric.bestSelling });\n\n    Promise.all([bestRatedRequest, bestSellingRequest])\n      .then((response) => {\n        if (response.length) {\n          const [bestRated, bestSelling] = response;\n\n          if (bestRated.success && bestSelling.success) {\n            setState({\n              mode: 'loaded',\n              value: {\n                bestRated: bestRated.data,\n                bestSelling: bestSelling.data,\n              },\n            });\n          } else {\n            setState({ mode: 'error', error: bestRated.message ?? bestSelling.message });\n          }\n        }\n      })\n      .catch((err) => setState({ mode: 'error', error: err.toString() }));\n  }, [metric]);\n\n  return (\n    <>\n      {state.mode === 'loading' && <Spin />}\n      {state.mode === 'loaded' && (\n        <div className=\"statistics\">\n          {state.value.bestSelling.slice(0, 2).map(({ label }, idx) => (\n            <Statistic\n              key={label}\n              title={`${idx > 0 ? 'Top' : 'Best'} selling course`}\n              prefix={<TrophyOutlined style={{ fontSize: '45px', color: '#FAD337' }} />}\n              value={label}\n            />\n          ))}\n          {state.value.bestRated.length > 0 && (\n            <Statistic\n              title={`Best rated course`}\n              prefix={<TrophyOutlined style={{ fontSize: '45px', color: '#FAD337' }} />}\n              value={state.value.bestRated[0].label}\n            />\n          )}\n        </div>\n      )}\n      {state.mode === 'error' && <Alert message={state.error} type=\"error\" />}\n    </>\n  );\n};\n\nexport default Statistics;\n","import Statistics from '@/components/Statistics';\nimport { FormattedMessage } from 'umi';\n\nexport const DashdoardComponent: React.FC<{\n  metric: Record<string, API.ReportType>;\n}> = ({ metric }) => {\n  return (\n    <div className=\"dashboard-draggable__component\">\n      <h3>\n        <FormattedMessage id=\"hall_of_fame\" defaultMessage=\"Hall of fame\" />\n      </h3>\n      <article>\n        <div>\n          <Statistics metric={metric} />\n        </div>\n      </article>\n    </div>\n  );\n};\n\nexport default DashdoardComponent;\n","import { FormattedMessage } from 'umi';\nimport { Empty, Rate, Row, Spin, Typography } from 'antd';\nimport ProForm, { ProFormSelect } from '@ant-design/pro-form';\nimport { course } from '@/services/escola-lms/course';\nimport { questionnaireStars } from '@/services/escola-lms/questionnaire';\nimport React, { useEffect, useState } from 'react';\nimport { useModel } from '@@/plugin-model/useModel';\nimport './index.less';\nimport { roundPercentageList } from '@/utils/utils';\n\ninterface Rates {\n  1: number;\n  2: number;\n  3: number;\n  4: number;\n  5: number;\n}\n\nexport const DashdoardComponent: React.FC = () => {\n  const { Text, Title } = Typography;\n  const [list, setList] = useState<API.Course[]>([]);\n  const [loading, setLoading] = useState(true);\n  const { initialState } = useModel('@@initialState');\n  const [courseId, setCourseId] = useState<number | undefined>(undefined);\n  const [ratings, setRatings] = useState<undefined | API.QuestionnaireStars>(undefined);\n\n  useEffect(() => {\n    const fetchCourses = async () => {\n      const request = await course({\n        authors: initialState?.currentUser?.id,\n      });\n\n      if (request.success) {\n        setList(request.data);\n        setLoading(false);\n      }\n    };\n\n    fetchCourses();\n  }, []);\n\n  useEffect(() => {\n    setLoading(true);\n    const fetchQuestionnaireStars = async () => {\n      const request = await questionnaireStars('Course', Number(courseId));\n\n      if (request.success) {\n        setRatings(request.data);\n      }\n      setLoading(false);\n    };\n\n    if (courseId) {\n      fetchQuestionnaireStars();\n    }\n  }, [courseId]);\n\n  const listOptions = list.map((item) => ({\n    label: item.title,\n    value: item.id,\n  }));\n\n  const ratingsPercentage = Object.keys(ratings?.rates || {})\n    .sort()\n    .map((key) => {\n      const rate = ratings?.rates[key as unknown as keyof Rates];\n      if (rate === 0) {\n        return 0;\n      }\n      return (rate / (ratings?.sum_rates as number)) * 100;\n    });\n\n  return (\n    <div className=\"dashboard-draggable__component\">\n      <h3>\n        <FormattedMessage id=\"ratings\" />\n      </h3>\n      <article>\n        <Text>\n          <FormattedMessage id=\"ratings_description\" />\n        </Text>\n\n        <ProForm\n          name={'ratings'}\n          onValuesChange={(_, values) => {\n            setCourseId(values.courses);\n          }}\n          style={{ marginTop: '32px' }}\n          submitter={false}\n        >\n          <React.Fragment>\n            <ProFormSelect name=\"courses\" options={listOptions} fieldProps={{ loading }} />\n            {loading && <Spin />}\n            {!loading &&\n              courseId &&\n              (ratings?.count_answers && ratings?.count_answers > 0 ? (\n                <>\n                  <Row align={'middle'}>\n                    <Title\n                      level={2}\n                      style={{\n                        marginBottom: 0,\n                        marginRight: '12px',\n                      }}\n                    >\n                      {Number(ratings.avg_rate).toFixed(2)}\n                    </Title>\n                    <Rate disabled defaultValue={Number(ratings.avg_rate)} />\n                  </Row>\n                  <ul className={'dashboard-ratings-list'}>\n                    {roundPercentageList(ratingsPercentage)\n                      .map((rate, index) => {\n                        return (\n                          <li key={rate} className={'dashboard-ratings-list-item'}>\n                            <Title level={5}>{index + 1}</Title>\n                            <Rate disabled defaultValue={Number(index + 1)} />\n                            <Title level={5} className={'dashboard-ratings-list-key'}>\n                              {ratings.rates[index + 1]}\n                            </Title>\n                            <Title level={5} className={'dashboard-ratings-list-percentage'}>\n                              {rate}%\n                            </Title>\n                          </li>\n                        );\n                      })\n                      .reverse()}\n                  </ul>\n                </>\n              ) : (\n                <ul className={'dashboard-ratings-list dashboard-ratings-list--empty'}>\n                  <Empty />\n                </ul>\n              ))}\n          </React.Fragment>\n        </ProForm>\n      </article>\n    </div>\n  );\n};\n\nexport default DashdoardComponent;\n","import { FormattedMessage } from 'umi';\n\nexport const DashdoardComponent: React.FC = () => {\n  return (\n    <div className=\"dashboard-draggable__component\">\n      <h3>\n        <FormattedMessage id=\"sales\" />\n      </h3>\n      <article>\n        <div>This Dashboard component is not yet implemented. Sorry</div>\n      </article>\n    </div>\n  );\n};\n\nexport default DashdoardComponent;\n","import { FormattedMessage } from 'umi';\nimport { Button, Col, Row, Typography } from 'antd';\nimport ProCard from '@ant-design/pro-card';\n\nexport const DashdoardComponent: React.FC = () => {\n  const { Title, Text } = Typography;\n\n  return (\n    <div className=\"dashboard-draggable__component\">\n      <h3>\n        <FormattedMessage id=\"tutorial\" />\n      </h3>\n      <article>\n        <Row align={'top'} gutter={[8, 0]} wrap={true}>\n          <Col span={12}>\n            <ProCard>\n              <Title level={5}>\n                <FormattedMessage id=\"tutorial_card_left_title\" />\n              </Title>\n              <Text>\n                <FormattedMessage id=\"tutorial_card_left_description\" />\n              </Text>\n            </ProCard>\n          </Col>\n          <Col span={12}>\n            <ProCard\n              bodyStyle={{\n                background: '#FFED8E',\n                borderRadius: '8px',\n              }}\n            >\n              <Row align={'middle'} justify={'space-evenly'}>\n                <div>\n                  <Title level={5}>\n                    <FormattedMessage id=\"tutorial_card_right_title\" />\n                  </Title>\n                  <Text>\n                    <FormattedMessage id=\"tutorial_card_right_description\" />\n                  </Text>\n                </div>\n                <div style={{ marginTop: '0.5em' }}>\n                  <Button\n                    type=\"primary\"\n                    href={'https://docs.wellms.io/app-guide/'}\n                    target={'_blank'}\n                  >\n                    <FormattedMessage id=\"learn_more\" />\n                  </Button>\n                </div>\n              </Row>\n            </ProCard>\n          </Col>\n        </Row>\n      </article>\n    </div>\n  );\n};\n\nexport default DashdoardComponent;\n","import { FormattedMessage, Link } from 'umi';\nimport ProCard from '@ant-design/pro-card';\nimport { Button, Spin, Typography, Image } from 'antd';\nimport './index.less';\nimport { useEffect, useState } from 'react';\nimport { course } from '@/services/escola-lms/course';\nimport { PlusCircleFilled } from '@ant-design/icons';\nimport { useModel } from '@@/plugin-model/useModel';\nimport ResponsiveImage from '@/components/ResponsiveImage';\n\nconst truncate = (str: string, n: number) => {\n  return str.length > n ? str.substring(0, n - 1) + '...' : str;\n};\n\nexport const DashdoardComponent: React.FC = () => {\n  const [list, setList] = useState<API.Course[]>([]);\n  const { initialState } = useModel('@@initialState');\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchCourses = async () => {\n      const request = await course({\n        authors: initialState?.currentUser?.id,\n        // Default get courses by latest\n        order: 'DESC',\n        order_by: 'created_at',\n      });\n\n      if (request.success) {\n        setList(request.data);\n        setLoading(false);\n      }\n    };\n\n    fetchCourses();\n  }, []);\n\n  const { Text, Title } = Typography;\n\n  if (loading) {\n    return <Spin />;\n  }\n\n  return (\n    <div className=\"dashboard-draggable__component\">\n      <h3>\n        <FormattedMessage id=\"your_courses\" />\n      </h3>\n      <div className={'dashboard__card-group'}>\n        <div\n          className={'dashboard__card'}\n          style={{\n            position: 'sticky',\n            left: 0,\n            zIndex: 1,\n          }}\n        >\n          <ProCard layout=\"center\">\n            <Link to={`/courses/list/new`} key={'new_course'}>\n              <PlusCircleFilled\n                style={{\n                  fontSize: '52px',\n                  marginBottom: '36px',\n                }}\n              />\n              <Title level={5}>\n                <FormattedMessage id=\"new_course\" />\n              </Title>\n            </Link>\n          </ProCard>\n        </div>\n        {list.map((item) => (\n          <div className={'dashboard__card'} key={item.id}>\n            {item.image_path ? (\n              <ResponsiveImage\n                path={item.image_path}\n                size={240}\n                width={240}\n                alt={item.title}\n                className={'dashboard__card-img'}\n              />\n            ) : (\n              <div className=\"dashboard__card-img-placeholder\">\n                <Image width={240} src={'image_placeholder.svg'} preview={false} alt=\"LMS Image\" />\n              </div>\n            )}\n            <ProCard\n              actions={[\n                <Link to={`/courses/list/${item.id}`} key={item.id}>\n                  <Button>\n                    <FormattedMessage id=\"manage_course\" />\n                  </Button>\n                </Link>,\n              ]}\n            >\n              {item.title && <Title level={5}>{truncate(item.title, 40)}</Title>}\n              {item.summary && <Text>{truncate(item.summary, 60)}</Text>}\n            </ProCard>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default DashdoardComponent;\n","import { FormattedMessage } from 'umi';\n\nimport PieChart from '@/components/PieChart/PieChart';\nexport const DashdoardComponent: React.FC<{\n  metric: API.ReportType;\n  asDonut?: boolean;\n  customLabelTitle?: (value: string) => string;\n  customLabelContent?: (value: API.ReportItem) => string;\n}> = ({ metric, asDonut = false, customLabelTitle, customLabelContent }) => {\n  return (\n    <div className=\"dashboard-draggable__component\">\n      <h3>\n        <FormattedMessage id={metric.split('\\\\').pop()} defaultMessage={metric.split('\\\\').pop()} />\n      </h3>\n\n      <article>\n        <PieChart\n          metric={metric}\n          header={false}\n          asDonut={asDonut}\n          customLabelTitle={customLabelTitle}\n          customLabelContent={customLabelContent}\n        />\n      </article>\n    </div>\n  );\n};\n\nexport default DashdoardComponent;\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { WidthProvider, Responsive, type Layout } from 'react-grid-layout';\nimport { Button } from 'antd';\nimport { CloseSquareOutlined } from '@ant-design/icons';\n\nimport '../../../node_modules/react-grid-layout/css/styles.css';\nimport '../../../node_modules/react-resizable/css/styles.css';\nimport './index.css';\nimport Add from './Add';\nimport CurrentUsers from './CurrentUsers';\nimport Customers from './Customers';\nimport HallOfFame from './HallOfFame';\nimport Ratings from './Ratings';\nimport Sales from './Sales';\nimport Tutorial from './Tutorial';\nimport YourCourses from './YourCourses';\nimport PieChart from './PieChart';\n\nconst ResponsiveGridLayout = WidthProvider(Responsive);\n\nconst COLS = 2;\nconst ROW_HEIGHT = 150;\n\ntype Props = Record<string, any>;\ntype Component<P extends Props> = (props: P) => React.ReactElement | null;\ntype DashboardComponent<P extends Props> = {\n  component: Component<P>;\n  props?: P;\n  [key: string]: any;\n};\ntype DashboardData = Record<string, DashboardComponent<any>>;\n\nconst wrap = <P extends Props>(component: DashboardComponent<P>) => {\n  return component;\n};\n\nconst components: DashboardData = {\n  'current-users': wrap({\n    component: CurrentUsers,\n    w: 1,\n    h: 4,\n    maxH: 4,\n    props: {\n      metric: 'EscolaLms\\\\Reports\\\\Metrics\\\\CoursesMoneySpentMetric',\n    },\n  }),\n  customers: wrap({ component: Customers, w: 1, h: 1, maxH: 1 }),\n  'hall-of-fame': wrap({\n    component: HallOfFame,\n    w: 1,\n    h: 3,\n    maxH: 3,\n    props: {\n      metric: {\n        bestSelling: 'EscolaLms\\\\Reports\\\\Metrics\\\\CoursesTopSellingMetric',\n        bestRated: 'EscolaLms\\\\Reports\\\\Metrics\\\\CoursesBestRatedMetric',\n      },\n    },\n  }),\n  ratings: wrap({ component: Ratings, w: 1, h: 4, maxH: 4, props: {} }),\n  sales: wrap({ component: Sales, w: 1, h: 1, maxH: 1 }),\n  tutorial: wrap({ component: Tutorial, w: 2, h: 2, maxH: 2 }),\n  'your-courses': wrap({ component: YourCourses, w: 2, h: 3, maxH: 3, props: {} }),\n  'pie-chart-CoursesMoneySpentMetric': wrap({\n    w: 1,\n    h: 4,\n    maxH: 4,\n    component: PieChart,\n    props: {\n      metric: 'EscolaLms\\\\Reports\\\\Metrics\\\\CoursesMoneySpentMetric',\n      asDonut: true,\n      customLabelTitle: (text: string) => text.slice(0, 8) + (text.length > 8 ? '...' : ''),\n      customLabelContent: (item: API.ReportItem) => {\n        return `PLN ${item.value}`;\n      },\n    },\n  }),\n  'pie-chart-CoursesPopularityMetric': wrap({\n    w: 1,\n    h: 4,\n    maxH: 4,\n    component: PieChart,\n    props: {\n      metric: 'EscolaLms\\\\Reports\\\\Metrics\\\\CoursesPopularityMetric',\n    },\n  }),\n  'pie-chart-CoursesSecondsSpentMetric': wrap({\n    w: 1,\n    h: 4,\n    maxH: 4,\n    component: PieChart,\n    props: {\n      metric: 'EscolaLms\\\\Reports\\\\Metrics\\\\CoursesSecondsSpentMetric',\n      asDonut: true,\n    },\n  }),\n  'pie-chart-TutorsPopularityMetric': wrap({\n    w: 1,\n    h: 4,\n    maxH: 4,\n    component: PieChart,\n    props: { metric: 'EscolaLms\\\\Reports\\\\Metrics\\\\TutorsPopularityMetric' },\n  }),\n  add: wrap({\n    w: 1,\n    h: 1,\n    maxH: 3,\n    component: PieChart,\n  }),\n};\n\ntype ComponentsKeys = keyof typeof components;\n\nconst defaultStageComponents: ComponentsKeys[] = [\n  'tutorial',\n  'hall-of-fame',\n  'ratings',\n  'current-users',\n  'your-courses',\n  'pie-chart-CoursesMoneySpentMetric',\n  'pie-chart-CoursesPopularityMetric',\n  'pie-chart-CoursesSecondsSpentMetric',\n  'pie-chart-TutorsPopularityMetric',\n  'add',\n];\n\ninterface LayoutConfig {\n  i: string;\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n  maxH: number | undefined;\n}\n\ninterface LayoutConfigObject {\n  lg: LayoutConfig[];\n  md: LayoutConfig[];\n  sm: LayoutConfig[];\n  xs: LayoutConfig[];\n  xxs: LayoutConfig[];\n}\n\nexport const Dashboard: React.FC = () => {\n  const [stageComponents, setStageComponents] = useState<ComponentsKeys[]>(defaultStageComponents);\n\n  const keysToAdd = useMemo(() => {\n    return Object.keys(components).filter((key) => !stageComponents.includes(key) && key !== 'add');\n  }, [stageComponents]);\n\n  const onAdd = useCallback((key: ComponentsKeys) => {\n    setStageComponents((prevStageComponents) => [...prevStageComponents, key]);\n  }, []);\n\n  const onRemove = useCallback((key: ComponentsKeys) => {\n    setStageComponents((prevStageComponents) => {\n      return prevStageComponents.filter((k) => k !== key);\n    });\n  }, []);\n\n  const layouts = useMemo(() => {\n    let x = 1;\n    let y = 0;\n\n    if ('layout' in localStorage) {\n      const layoutFromLS = localStorage.getItem('layout');\n\n      if (layoutFromLS) {\n        const layout = JSON.parse(layoutFromLS);\n        return layout.value;\n      }\n    }\n\n    const l = stageComponents.map((key) => {\n      // const prevItem = i > 0 ? components[arr[i - 1]] : null;\n      const currItem = components[key];\n      x = (x + currItem.w) % COLS;\n      return {\n        i: key,\n        x: x,\n        y: y++,\n        w: currItem.w,\n        h: currItem.h,\n        maxH: currItem.maxH,\n      };\n    });\n\n    return { lg: l, md: l, sm: l, xs: l };\n  }, [stageComponents]);\n\n  function saveToLS(key: string, value: any) {\n    if (localStorage) {\n      localStorage.setItem(\n        key,\n        JSON.stringify({\n          value,\n        }),\n      );\n    }\n  }\n\n  const onLayoutChange = (layout: Layout[]) => {\n    const data = layout.map<LayoutConfig>(({ i, x, y, w, h, maxH }) => ({\n      i,\n      x,\n      y,\n      w,\n      h,\n      maxH,\n    }));\n    const changedLayouts: LayoutConfigObject = {\n      lg: data,\n      md: data,\n      sm: data,\n      xs: data,\n      xxs: data,\n    };\n    saveToLS('layout', changedLayouts);\n  };\n\n  return (\n    <main>\n      <ResponsiveGridLayout\n        rowHeight={ROW_HEIGHT}\n        autoSize={true}\n        cols={{ lg: 2, md: 2, sm: 2, xs: 1, xxs: 1 }}\n        className=\"layout dashboard-draggable\"\n        layouts={layouts}\n        onLayoutChange={onLayoutChange}\n      >\n        {stageComponents\n          .filter((key) => key !== 'add')\n          .map((key) => {\n            const Component = components[key].component;\n            return (\n              <div key={key}>\n                <Component {...components[key].props} />\n                <Button\n                  size=\"small\"\n                  type=\"default\"\n                  icon={<CloseSquareOutlined />}\n                  className=\"dashboard-draggable__remove_btn\"\n                  onClick={() => onRemove(key)}\n                />\n              </div>\n            );\n          })}\n        {keysToAdd.length > 0 && (\n          <div key=\"add\">\n            <Add onAddButtonClick={onAdd} keys={keysToAdd} />\n          </div>\n        )}\n      </ResponsiveGridLayout>\n    </main>\n  );\n};\n","import React from 'react';\nimport { PageContainer } from '@ant-design/pro-layout';\nimport { Dashboard } from '@/components/Dashboard';\nimport { Button } from 'antd';\nimport { useModel } from '@@/plugin-model/useModel';\nimport { FormattedMessage } from '@@/plugin-locale/localeExports';\n\nexport default (): React.ReactNode => {\n  const { initialState } = useModel('@@initialState');\n\n  const baseUrl = initialState?.config?.filter((item) => item.key === 'frontURL')[0]?.data;\n  const token = localStorage.getItem('TOKEN');\n  const url = `${baseUrl}#/login${token ? `?token=${token}` : ''}`;\n\n  return (\n    <PageContainer\n      extra={\n        baseUrl && (\n          <Button type=\"primary\" href={url} target=\"_blank\">\n            <FormattedMessage id=\"go_to_platform\" />\n          </Button>\n        )\n      }\n    >\n      <Dashboard />\n    </PageContainer>\n  );\n};\n","import { request } from 'umi';\nimport type { RequestOptionsInit } from 'umi-request';\n\nexport async function reports(\n  params: {\n    // query\n    metric: API.ReportType;\n    date?: string;\n    limit?: number;\n  },\n  options?: RequestOptionsInit,\n) {\n  return request<API.ReportList>('/api/admin/reports/report', {\n    params,\n    method: 'GET',\n    /* useCache: true */ useCache: false,\n    ...(options || {}),\n  });\n}\n\n/* GET /api/admin/stats/course/:course_id/export */\nexport async function exportStatForCourse(\n  course_id: number,\n  params: API.ExportStatForCourseParams,\n  options?: RequestOptionsInit,\n) {\n  return request<Blob | API.DefaultResponseError>(`/api/admin/stats/course/${course_id}/export`, {\n    params,\n    method: 'GET',\n    /* useCache: true */ useCache: false,\n    responseType: 'blob',\n    headers: {\n      accept: 'application/vnd.ms-excel',\n    },\n    ...(options || {}),\n  });\n}\n\n/* GET /api/admin/stats/topic/:topic_id/export */\nexport async function exportStatForTopic(\n  topic_id: number,\n  stat: API.TopicStatsKey,\n  options?: RequestOptionsInit,\n) {\n  return request<Blob | API.DefaultResponseError>(`/api/admin/stats/topic/${topic_id}/export`, {\n    method: 'GET',\n    /* useCache: true */ useCache: false,\n    params: { stat },\n    responseType: 'blob',\n    headers: {\n      accept: 'application/vnd.ms-excel',\n    },\n    ...(options || {}),\n  });\n}\n"],"sourceRoot":""}