{"version":3,"sources":["webpack:///./src/pages/Pages/index.tsx","webpack:///./src/services/escola-lms/pages.ts"],"names":["handleRemove","id","deletePage","then","response","success","message","TableList","actionRef","useRef","intl","useIntl","columns","title","dataIndex","hideInSearch","sorter","width","render","_","record","author_id","valueType","current","reload","formatMessage","defaultMessage","layout","sort","pageSize","slug","pages","per_page","page","undefined","createTableOrderObject","data","total","meta","params","options","request","method","useCache","body","headers"],"mappings":"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","file":"p__Pages.0a9c9993.async.js","sourcesContent":["import { PlusOutlined, DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport { Button, Tooltip, Popconfirm, message } from 'antd';\nimport React, { useRef } from 'react';\nimport { useIntl, FormattedMessage, Link } from 'umi';\nimport { PageContainer } from '@ant-design/pro-layout';\nimport type { ProColumns, ActionType } from '@ant-design/pro-table';\nimport ProTable from '@ant-design/pro-table';\n\nimport { pages, deletePage } from '@/services/escola-lms/pages';\nimport TypeButtonDrawer from '@/components/TypeButtonDrawer';\nimport { createTableOrderObject } from '@/utils/utils';\n\nconst handleRemove = async (id: number) => {\n  return deletePage(id).then((response) => {\n    if (response.success) {\n      message.success(response.message);\n    }\n    return true;\n  });\n};\n\nconst TableList: React.FC = () => {\n  const actionRef = useRef<ActionType>();\n  const intl = useIntl();\n\n  const columns: ProColumns<API.PageListItem>[] = [\n    {\n      title: <FormattedMessage id=\"ID\" defaultMessage=\"ID\" />,\n      dataIndex: 'id',\n      hideInSearch: true,\n      sorter: true,\n      width: '80px',\n    },\n    {\n      title: <FormattedMessage id=\"title\" defaultMessage=\"title\" />,\n      dataIndex: 'title',\n      hideInSearch: false,\n      sorter: true,\n    },\n    {\n      title: <FormattedMessage id=\"slug\" defaultMessage=\"slug\" />,\n      dataIndex: 'slug',\n      hideInSearch: false,\n      sorter: true,\n    },\n    {\n      title: <FormattedMessage id=\"author\" defaultMessage=\"author\" />,\n      dataIndex: 'author_id',\n      hideInSearch: true,\n      sorter: true,\n      render: (_, record) => (\n        <TypeButtonDrawer\n          key={'user'}\n          type=\"EscolaLms\\Core\\Models\\User\"\n          type_id={record.author_id}\n        />\n      ),\n    },\n    {\n      hideInSearch: true,\n      title: <FormattedMessage id=\"pages.searchTable.titleOption\" defaultMessage=\"option\" />,\n      dataIndex: 'option',\n      valueType: 'option',\n      render: (_, record) => [\n        <Link to={`/other/pages/${record.id}`} key=\"edit\">\n          <Tooltip title={<FormattedMessage id=\"edit\" defaultMessage=\"edit\" />}>\n            <Button type=\"primary\" icon={<EditOutlined />} />\n          </Tooltip>\n        </Link>,\n        <Popconfirm\n          key=\"delete\"\n          title={\n            <FormattedMessage\n              id=\"deleteQuestion\"\n              defaultMessage=\"Are you sure to delete this record?\"\n            />\n          }\n          onConfirm={async () => {\n            const success = await handleRemove(record.id);\n            if (success) {\n              if (actionRef.current) {\n                actionRef.current.reload();\n              }\n            }\n          }}\n          okText={<FormattedMessage id=\"yes\" />}\n          cancelText={<FormattedMessage id=\"no\" />}\n        >\n          <Tooltip title={<FormattedMessage id=\"delete\" defaultMessage=\"delete\" />}>\n            <Button type=\"primary\" icon={<DeleteOutlined />} danger />\n          </Tooltip>\n        </Popconfirm>,\n      ],\n    },\n  ];\n\n  return (\n    <PageContainer>\n      <ProTable<API.PageListItem, API.PageParams>\n        headerTitle={intl.formatMessage({\n          id: 'pages',\n          defaultMessage: 'pages',\n        })}\n        actionRef={actionRef}\n        rowKey=\"id\"\n        search={{\n          layout: 'vertical',\n        }}\n        toolBarRender={() => [\n          <Link to=\"/other/pages/new\" key=\"new\">\n            <Button type=\"primary\" key=\"primary\">\n              <PlusOutlined /> <FormattedMessage id=\"new\" defaultMessage=\"new\" />\n            </Button>\n          </Link>,\n        ]}\n        request={({ pageSize, current, title, slug }, sort) => {\n          return pages({\n            per_page: pageSize,\n            page: current,\n            title: title || undefined,\n            slug: slug || undefined,\n            ...createTableOrderObject(sort, 'created_at'),\n          }).then((response) => {\n            if (response.success) {\n              return {\n                data: response.data,\n                total: response.meta.total,\n                success: true,\n              };\n            }\n            return [];\n          });\n        }}\n        columns={columns}\n      />\n    </PageContainer>\n  );\n};\n\nexport default TableList;\n","import { request } from 'umi';\nimport type { RequestOptionsInit } from 'umi-request';\n\nexport async function pages(\n  params: API.PageParams &\n    API.PaginationParams & {\n      title?: string;\n      slug?: string;\n    },\n  options?: RequestOptionsInit,\n) {\n  return request<API.PageList>(`/api/admin/pages`, {\n    method: 'GET',\n    /* useCache: true */ useCache: false,\n    params,\n    ...(options || {}),\n  });\n}\n\nexport async function page(id: number, options?: RequestOptionsInit) {\n  return request<API.DefaultResponse<API.Page>>(`/api/admin/pages/${id}`, {\n    method: 'GET',\n    ...(options || {}),\n  });\n}\n\nexport async function createPage(body?: Partial<API.Page>, options?: RequestOptionsInit) {\n  return request<API.DefaultResponse<API.Page>>(`/api/admin/pages`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    data: body,\n    ...(options || {}),\n  });\n}\n\nexport async function updatePage(\n  id: number,\n  body?: Partial<API.Page>,\n  options?: RequestOptionsInit,\n) {\n  return request<API.DefaultResponse<API.Page>>(`/api/admin/pages/${id}`, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    data: body,\n    ...(options || {}),\n  });\n}\n\nexport async function deletePage(id: number, options?: RequestOptionsInit) {\n  return request<API.DefaultResponse<API.Page>>(`/api/admin/pages/${id}`, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    ...(options || {}),\n  });\n}\n"],"sourceRoot":""}