{"version":3,"file":"p__Payments__index.e6de9d1c.async.js","mappings":"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","sources":["webpack://ant-design-pro/./src/services/escola-lms/payments.ts","webpack://ant-design-pro/./src/pages/Payments/index.tsx"],"sourcesContent":["import type { AxiosRequestConfig } from '@umijs/max';\nimport { request } from 'umi';\n\n/**  GET /api/admin/users */\nexport async function payments(\n  params: API.PaginationParams & {\n    // query\n    date_from?: string;\n    date_to?: string;\n    status?: API.PaymentStatus;\n    order_id?: string;\n    // user_id?: number;\n    // author_id?: number;\n    // course_id?: number;\n  },\n  options?: AxiosRequestConfig,\n) {\n  return request<API.PaymentList>('/api/admin/payments', {\n    params,\n    method: 'GET',\n    /* useCache: true */ useCache: false,\n    ...(options || {}),\n  });\n}\n","import { PageContainer } from '@ant-design/pro-layout';\nimport type { ActionType, ProColumns } from '@ant-design/pro-table';\nimport ProTable from '@ant-design/pro-table';\nimport React, { useRef } from 'react';\nimport { FormattedMessage, useIntl } from 'umi';\n\nimport { payments } from '@/services/escola-lms/payments';\nimport { format } from 'date-fns';\n\nimport TypeButtonDrawer from '@/components/TypeButtonDrawer';\nimport { DATETIME_FORMAT } from '@/consts/dates';\nimport { createTableOrderObject, roundTo } from '@/utils/utils';\nimport { Tag } from 'antd';\n\nconst TableList: React.FC = () => {\n  const actionRef = useRef<ActionType>();\n  const intl = useIntl();\n\n  const columns: ProColumns<API.PaymentListItem>[] = [\n    {\n      title: <FormattedMessage id=\"ID\" defaultMessage=\"ID\" />,\n      dataIndex: 'id',\n      hideInSearch: true,\n      sorter: true,\n      width: '80px',\n    },\n    {\n      title: <FormattedMessage id=\"dateRange\" defaultMessage=\"Date Range\" />,\n      dataIndex: 'dateRange',\n      hideInSearch: false,\n      hideInForm: true,\n      hideInTable: true,\n      valueType: 'dateRange',\n      fieldProps: {\n        allowEmpty: [true, true],\n      },\n    },\n    {\n      title: <FormattedMessage id=\"created_at\" defaultMessage=\"created_at\" />,\n      dataIndex: 'created_at',\n      hideInSearch: true,\n      sorter: true,\n      render: (_, record) => format(new Date(record.created_at), DATETIME_FORMAT),\n    },\n    {\n      title: <FormattedMessage id=\"updated_at\" defaultMessage=\"updated_at\" />,\n      dataIndex: 'updated_at',\n      hideInSearch: true,\n      sorter: true,\n      render: (_, record) => format(new Date(record.updated_at), DATETIME_FORMAT),\n    },\n    {\n      title: <FormattedMessage id=\"total\" defaultMessage=\"total\" />,\n      dataIndex: 'amount',\n      hideInSearch: true,\n      render: (_, record) => roundTo(record.amount, 2, 100),\n      sorter: true,\n    },\n    {\n      title: <FormattedMessage id=\"currency\" defaultMessage=\"currency\" />,\n      dataIndex: 'currency',\n      hideInSearch: true,\n    },\n    {\n      title: <FormattedMessage id=\"status\" defaultMessage=\"status\" />,\n      dataIndex: 'status',\n      hideInSearch: false,\n      sorter: true,\n      valueType: 'select',\n      valueEnum: {\n        new: (\n          <Tag color=\"processing\">\n            <FormattedMessage id=\"new_payment\" />\n          </Tag>\n        ),\n        paid: (\n          <Tag color=\"success\">\n            <FormattedMessage id=\"paid\" />\n          </Tag>\n        ),\n        cancelled: (\n          <Tag color=\"warning\">\n            <FormattedMessage id=\"cancelled\" />\n          </Tag>\n        ),\n        failed: (\n          <Tag color=\"error\">\n            <FormattedMessage id=\"failed\" />\n          </Tag>\n        ),\n        redirect: (\n          <Tag>\n            <FormattedMessage id=\"redirect\" />\n          </Tag>\n        ),\n      },\n    },\n    // TODO: #1034 Remove this or uncomment if we will have billable_type from BE\n    // {\n    //   title: <FormattedMessage id=\"billable\" defaultMessage=\"Billable to\" />,\n    //   dataIndex: 'billable',\n    //   hideInSearch: false,\n    //   sorter: true,\n    //   render: (_, record) => (\n    //     <TypeButtonDrawer type={record.billable_type} type_id={record.user_id} />\n    //   ),\n    // },\n    {\n      title: <FormattedMessage id=\"payable\" defaultMessage=\"Payable to\" />,\n      dataIndex: 'payable',\n      hideInSearch: true,\n      render: (_, record) => (\n        <TypeButtonDrawer type={record.payable_type} type_id={record.payable_id} />\n      ),\n    },\n  ];\n\n  return (\n    <PageContainer>\n      <ProTable<\n        API.PaymentListItem,\n        API.PageParams & { dateRange: [string, string]; status: API.PaymentStatus }\n      >\n        headerTitle={intl.formatMessage({\n          id: 'menu.Sales.Payments',\n          defaultMessage: 'payments',\n        })}\n        actionRef={actionRef}\n        rowKey=\"id\"\n        search={{\n          layout: 'vertical',\n        }}\n        request={(\n          { pageSize, current, dateRange, status /* , user_id, author_id, course_id */ },\n          sort,\n        ) => {\n          const date_from =\n            dateRange && dateRange[0] ? format(new Date(dateRange[0]), DATETIME_FORMAT) : undefined;\n          const date_to =\n            dateRange && dateRange[1] ? format(new Date(dateRange[1]), DATETIME_FORMAT) : undefined;\n          return payments({\n            per_page: pageSize,\n            page: current,\n            date_from,\n            date_to,\n            status,\n            ...createTableOrderObject(sort, 'created_at'),\n          }).then((response) => {\n            if (response.success) {\n              return {\n                data: response.data,\n                total: response.meta.total,\n                success: true,\n              };\n            }\n            return [];\n          });\n        }}\n        columns={columns}\n      />\n    </PageContainer>\n  );\n};\n\nexport default TableList;\n"],"names":["payments","_x","_x2","_payments","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","options","wrap","_context","prev","next","abrupt","request","_objectSpread","method","useCache","stop","TableList","actionRef","useRef","intl","useIntl","columns","title","_jsx","FormattedMessage","id","defaultMessage","dataIndex","hideInSearch","sorter","width","hideInForm","hideInTable","valueType","fieldProps","allowEmpty","render","_","record","format","Date","created_at","DATETIME_FORMAT","updated_at","roundTo","amount","valueEnum","Tag","color","children","paid","cancelled","failed","redirect","TypeButtonDrawer","type","payable_type","type_id","payable_id","PageContainer","ProTable","headerTitle","formatMessage","rowKey","search","layout","_ref","sort","pageSize","current","dateRange","status","date_from","undefined","date_to","per_page","page","createTableOrderObject","then","response","success","data","total","meta"],"sourceRoot":""}