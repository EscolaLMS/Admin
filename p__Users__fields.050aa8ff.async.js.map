{"version":3,"sources":["webpack:///./node_modules/@ant-design/pro-form/es/components/Radio/index.js","webpack:///./src/components/JsonEditor/index.tsx","webpack:///./src/components/ModelFields/ModalForm.tsx","webpack:///./src/components/ModelFields/index.tsx","webpack:///./src/pages/Users/fields.tsx"],"names":["_excluded","RadioGroup","React","forwardRef","_ref","ref","fieldProps","options","radioType","layout","proFieldProps","valueEnum","rest","_objectWithoutProperties","_jsx","ProField","_objectSpread","valueType","runFunction","undefined","filedConfig","customLightMode","ProFormRadioComponents","_ref2","children","_Radio","ProFormRadio","createField","valuePropName","ignoreWidth","WrappedProFormRadio","Group","Button","displayName","JsonEditor","value","onChange","useState","isModalVisible","setIsModalVisible","hideModal","useCallback","mode","setMode","e","target","ModelFieldType","ModelFieldsModalForm","visible","onVisibleChange","onResponse","class_type","name","fields","intl","useIntl","useForm","form","onFinish","data","createOrUpdateField","rules","JSON","stringify","extra","then","response","success","useEffect","field","find","record","setFieldsValue","resetFields","formatMessage","id","defaultMessage","required","Object","keys","map","key","label","step","validator","_","Math","pow","ceil","log2","Promise","reject","Error","resolve","TableColumns","title","dataIndex","hideInSearch","sorter","ModelFields","actionRef","useRef","loading","setLoading","modalVisible","setModalVisible","setFields","handleRemove","class_type_to_remove","hide","deleteField","message","current","reload","error","sort","pageSize","sortArr","entries","fetchFields","page","per_page","order_by","order","total","length","width","render","UserFields","type","activeKey","history","push"],"mappings":"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","file":"p__Users__fields.050aa8ff.async.js","sourcesContent":["import \"antd/es/radio/style\";\nimport _Radio from \"antd/es/radio\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"fieldProps\", \"options\", \"radioType\", \"layout\", \"proFieldProps\", \"valueEnum\"];\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { runFunction } from '@ant-design/pro-utils';\nimport React from 'react';\nimport { createField } from '../../BaseForm/createField';\nimport ProField from '../Field';\nvar RadioGroup = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var fieldProps = _ref.fieldProps,\n      options = _ref.options,\n      radioType = _ref.radioType,\n      layout = _ref.layout,\n      proFieldProps = _ref.proFieldProps,\n      valueEnum = _ref.valueEnum,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return _jsx(ProField, _objectSpread(_objectSpread({\n    valueType: radioType === 'button' ? 'radioButton' : 'radio',\n    ref: ref,\n    valueEnum: runFunction(valueEnum, undefined)\n  }, rest), {}, {\n    fieldProps: _objectSpread({\n      options: options,\n      layout: layout\n    }, fieldProps),\n    proFieldProps: proFieldProps,\n    filedConfig: {\n      customLightMode: true\n    }\n  }));\n});\n/**\n * Radio\n *\n * @param\n */\n\nvar ProFormRadioComponents = /*#__PURE__*/React.forwardRef(function (_ref2, ref) {\n  var fieldProps = _ref2.fieldProps,\n      children = _ref2.children;\n  return _jsx(_Radio, _objectSpread(_objectSpread({}, fieldProps), {}, {\n    ref: ref,\n    children: children\n  }));\n});\nvar ProFormRadio = createField(ProFormRadioComponents, {\n  valuePropName: 'checked',\n  ignoreWidth: true\n});\nvar WrappedProFormRadio = ProFormRadio;\nWrappedProFormRadio.Group = RadioGroup;\nWrappedProFormRadio.Button = _Radio.Button; // @ts-ignore\n// eslint-disable-next-line no-param-reassign\n\nWrappedProFormRadio.displayName = 'ProFormComponent';\nexport default WrappedProFormRadio;","import React, { useState, useCallback } from 'react';\nimport { Modal, Button, Radio } from 'antd';\nimport { JsonEditor as Editor } from 'jsoneditor-react';\nimport { FormattedMessage } from 'umi';\nimport 'jsoneditor-react/es/editor.min.css';\n\ntype EditorMode = 'tree' | 'view' | 'form' | 'code' | 'text';\n\nexport const JsonEditor: React.FC<{\n  value?: string;\n  onChange?: (value: string) => void;\n}> = ({ value, onChange }) => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const hideModal = useCallback(() => {\n    setIsModalVisible(false);\n  }, []);\n\n  const [mode, setMode] = useState<EditorMode>('code');\n\n  return (\n    <div>\n      <Button type=\"primary\" onClick={() => setIsModalVisible(true)} size=\"small\">\n        <FormattedMessage id=\"json_editor\" />\n      </Button>\n      <Modal\n        title=\"JSON\"\n        open={isModalVisible}\n        onOk={hideModal}\n        onCancel={hideModal}\n        destroyOnClose\n      >\n        <Radio.Group onChange={(e) => setMode(e.target.value)} value={mode}>\n          <Radio value=\"tree\">tree</Radio>\n          <Radio value=\"view\">view</Radio>\n          <Radio value=\"form\">form</Radio>\n          <Radio value=\"code\">code</Radio>\n          <Radio value=\"text\">text</Radio>\n        </Radio.Group>\n        <Editor key={mode} mode={mode} value={value} onChange={onChange} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default JsonEditor;\n","import React, { useCallback, useEffect } from 'react';\nimport { Form } from 'antd';\nimport ProForm, { ProFormText, ModalForm, ProFormRadio, ProFormDigit } from '@ant-design/pro-form';\nimport { useIntl, FormattedMessage } from 'umi';\n\nimport { createOrUpdateField } from '@/services/escola-lms/fields';\nimport JsonEditor from '../JsonEditor';\n\nenum ModelFieldType {\n  BOOLEAN = 'boolean',\n  NUMBER = 'number',\n  VARCHAR = 'varchar',\n  TEXT = 'text',\n  JSON = 'json',\n}\n\nexport const ModelFieldsModalForm: React.FC<{\n  class_type: string;\n  name: string | boolean;\n  visible: boolean;\n  onVisibleChange: (visible: boolean) => void;\n  onResponse: (metaField: EscolaLms.ModelFields.Models.Metadata) => void;\n  fields: EscolaLms.ModelFields.Models.Metadata[];\n}> = ({ visible, onVisibleChange, onResponse, class_type, name = 'new', fields = [] }) => {\n  const intl = useIntl();\n\n  const [form] = Form.useForm();\n\n  const onFinish = useCallback(\n    async (data: EscolaLms.ModelFields.Http.Requests.MetadataCreateOrUpdateRequest) => {\n      await createOrUpdateField({\n        ...data,\n        class_type,\n        rules: JSON.stringify(data.rules),\n        extra: JSON.stringify(data.extra),\n      }).then((response) => {\n        if (response.success) {\n          onResponse(response.data);\n        }\n      });\n      return false;\n    },\n    [form],\n  );\n\n  useEffect(() => {\n    if (name !== 'new') {\n      const field = fields.find((record) => record.name === name);\n      if (field) {\n        form.setFieldsValue(field);\n      }\n    } else {\n      form.resetFields();\n    }\n  }, [name, form, fields]);\n\n  return (\n    <ModalForm\n      form={form}\n      title={intl.formatMessage({\n        id: name === 'new' ? 'newModelField' : 'editModelField',\n        defaultMessage: name === 'new' ? 'new Model Field' : 'edit Model Field',\n      })}\n      width=\"800px\"\n      visible={visible}\n      onVisibleChange={onVisibleChange}\n      onFinish={onFinish}\n    >\n      <ProFormText\n        required\n        label={<FormattedMessage id=\"name\" defaultMessage=\"name\" />}\n        tooltip={<FormattedMessage id=\"name_tooltip\" defaultMessage=\"name_tooltip\" />}\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n        width=\"md\"\n        name=\"name\"\n      />\n\n      <ProFormRadio.Group\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n        name=\"type\"\n        label={<FormattedMessage id=\"type\" defaultMessage=\"type\" />}\n        tooltip={<FormattedMessage id=\"type_tooltip\" defaultMessage=\"type_tooltip\" />}\n        options={(Object.keys(ModelFieldType) as (keyof typeof ModelFieldType)[]).map((key) => ({\n          label: intl.formatMessage({\n            id: `model.${ModelFieldType[key]}`,\n          }),\n          value: ModelFieldType[key],\n        }))}\n      />\n\n      <ProFormText\n        width=\"md\"\n        name=\"default\"\n        label={<FormattedMessage id=\"default\" defaultMessage=\"default\" />}\n        tooltip={<FormattedMessage id=\"default_tooltip\" defaultMessage=\"default_tooltip\" />}\n        placeholder={intl.formatMessage({\n          id: 'default',\n        })}\n      />\n\n      <ProForm.Item\n        name=\"rules\"\n        label={\n          <span>\n            <FormattedMessage id=\"rules\" defaultMessage=\"rules\" />{' '}\n            <a\n              rel=\"noreferrer\"\n              href=\"https://laravel.com/docs/9.x/validation#available-validation-rules\"\n              target=\"_blank\"\n            >\n              <FormattedMessage\n                id=\"available-validation-rules\"\n                defaultMessage=\"available-validation-rules\"\n              />\n            </a>\n          </span>\n        }\n        tooltip={<FormattedMessage id=\"available-validation-rules-tooltip\" />}\n        valuePropName=\"value\"\n      >\n        <JsonEditor />\n      </ProForm.Item>\n\n      {/** \n * this int must be power of 2 \n * example :// \n    const PUBLIC        = 1 << 0; // 1\n    const AUTHORIZED    = 1 << 1; // 2\n    const ADMIN         = 1 << 2; // 4\n    etc... \n */}\n      <ProFormDigit\n        width=\"md\"\n        name=\"visibility\"\n        label={<FormattedMessage id=\"visibility\" />}\n        tooltip={<FormattedMessage id=\"visibility_tooltip\" />}\n        placeholder={intl.formatMessage({\n          id: 'visibility',\n          defaultMessage: 'visibility',\n        })}\n        min={1}\n        max={1024}\n        fieldProps={{ step: 1 }}\n        rules={[\n          {\n            validator: async (_, value) => {\n              if (Math.pow(2, Math.ceil(Math.log2(value))) - value) {\n                return Promise.reject(\n                  new Error(\n                    intl.formatMessage({\n                      id: 'notPowerOfTwo',\n                      defaultMessage: 'notPowerOfTwo',\n                    }),\n                  ),\n                );\n              }\n              return Promise.resolve();\n            },\n          },\n        ]}\n      />\n\n      <ProForm.Item\n        name=\"extra\"\n        label={<FormattedMessage id=\"extra\" />}\n        tooltip={<FormattedMessage id=\"extra_tooltip\" />}\n        valuePropName=\"value\"\n      >\n        <JsonEditor />\n      </ProForm.Item>\n    </ModalForm>\n  );\n};\n\nexport default ModelFieldsModalForm;\n","import React, { useCallback, useState, useRef, Fragment } from 'react';\n\nimport { useIntl, FormattedMessage } from 'umi';\nimport type { ProColumns, ActionType } from '@ant-design/pro-table';\nimport ProTable from '@ant-design/pro-table';\nimport { PlusOutlined, DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport { Button, Tooltip, Popconfirm, message } from 'antd';\n\nimport { fields as fetchFields, deleteField } from '@/services/escola-lms/fields';\n\nimport ModelFieldsModalForm from './ModalForm';\n\nexport const TableColumns: ProColumns<EscolaLms.ModelFields.Models.Metadata>[] = [\n  {\n    title: <FormattedMessage id=\"name\" defaultMessage=\"name\" />,\n    dataIndex: 'name',\n    hideInSearch: true,\n    sorter: true,\n  },\n\n  {\n    title: <FormattedMessage id=\"type\" defaultMessage=\"type\" />,\n    dataIndex: 'type',\n    sorter: true,\n  },\n\n  {\n    title: <FormattedMessage id=\"default\" defaultMessage=\"default\" />,\n    dataIndex: 'default',\n    hideInSearch: true,\n  },\n];\n\nexport const ModelFields: React.FC<{\n  class_type: string;\n}> = ({ class_type }) => {\n  const actionRef = useRef<ActionType>();\n  const [loading, setLoading] = useState(false);\n  const intl = useIntl();\n  const [modalVisible, setModalVisible] = useState<string | false>(false);\n  const [fields, setFields] = useState<EscolaLms.ModelFields.Models.Metadata[]>([]);\n\n  const handleRemove = useCallback(\n    async ({ class_type_to_remove, name }: { class_type_to_remove: string; name: string }) => {\n      setLoading(true);\n      const hide = message.loading(<FormattedMessage id=\"loading\" defaultMessage=\"loading\" />);\n      try {\n        await deleteField({ class_type: class_type_to_remove, name }).then((response) => {\n          setLoading(false);\n          if (response.success) {\n            message.success(response.message);\n          }\n        });\n        hide();\n        setLoading(false);\n        actionRef.current?.reload();\n        return true;\n      } catch (error) {\n        hide();\n        message.error(<FormattedMessage id=\"error\" defaultMessage=\"error\" />);\n        setLoading(false);\n        return false;\n      }\n    },\n    [actionRef],\n  );\n\n  return (\n    <Fragment>\n      <ModelFieldsModalForm\n        fields={fields}\n        onResponse={() => {\n          setModalVisible(false);\n          actionRef.current?.reload();\n        }}\n        class_type={class_type}\n        name={modalVisible}\n        visible={typeof modalVisible === 'string'}\n        onVisibleChange={(value) => value === false && setModalVisible(false)}\n      />\n\n      <ProTable<EscolaLms.ModelFields.Models.Metadata>\n        search={false}\n        headerTitle={intl.formatMessage({\n          id: 'ModelFields',\n          defaultMessage: 'Model Fields',\n        })}\n        toolBarRender={() => [\n          <Button type=\"primary\" key=\"new\" onClick={() => setModalVisible('new')}>\n            <PlusOutlined /> <FormattedMessage id=\"new\" defaultMessage=\"new\" />\n          </Button>,\n        ]}\n        loading={loading}\n        actionRef={actionRef}\n        rowKey=\"id\"\n        request={({ pageSize, current }, sort) => {\n          const sortArr = sort && Object.entries(sort)[0];\n          setLoading(true);\n\n          return fetchFields({\n            page: current,\n            per_page: pageSize,\n            class_type,\n            order_by: sortArr && sortArr[0],\n            order: sortArr ? (sortArr[1] === 'ascend' ? 'ASC' : 'DESC') : undefined,\n          }).then((response) => {\n            setLoading(false);\n            if (response.success) {\n              setFields(response.data);\n              return {\n                data: response.data,\n                total: response.data.length,\n                success: true,\n              };\n            }\n            return [];\n          });\n        }}\n        columns={[\n          ...TableColumns,\n          {\n            title: <FormattedMessage id=\"options\" defaultMessage=\"options\" />,\n            dataIndex: 'option',\n            valueType: 'option',\n            width: '10%',\n            render: (_, record) => [\n              <Tooltip key=\"edit\" title={<FormattedMessage id=\"edit\" defaultMessage=\"edit\" />}>\n                <Button\n                  type=\"primary\"\n                  icon={<EditOutlined />}\n                  onClick={() => setModalVisible(record.name)}\n                />\n              </Tooltip>,\n              <Popconfirm\n                key=\"delete\"\n                title={\n                  <FormattedMessage\n                    id=\"deleteQuestion\"\n                    defaultMessage=\"Are you sure to delete this record?\"\n                  />\n                }\n                onConfirm={() =>\n                  record.name &&\n                  handleRemove({ class_type_to_remove: class_type, name: record.name })\n                }\n                okText={<FormattedMessage id=\"yes\" defaultMessage=\"Yes\" />}\n                cancelText={<FormattedMessage id=\"no\" defaultMessage=\"No\" />}\n              >\n                <Tooltip title={<FormattedMessage id=\"delete\" defaultMessage=\"delete\" />}>\n                  <Button type=\"primary\" icon={<DeleteOutlined />} danger />\n                </Tooltip>\n              </Popconfirm>,\n            ],\n          },\n        ]}\n      />\n    </Fragment>\n  );\n};\nexport default ModelFields;\n","import React from 'react';\nimport { FormattedMessage, history } from 'umi';\nimport { PageContainer } from '@ant-design/pro-layout';\nimport ProCard from '@ant-design/pro-card';\n\nimport ModelFields from '@/components/ModelFields';\n\nconst UserFields: React.FC = () => {\n  return (\n    <PageContainer>\n      <ProCard\n        tabs={{\n          type: 'card',\n          activeKey: 'fields',\n          onChange: (key) => history.push(`/users/${key}`),\n        }}\n      >\n        <ProCard.TabPane key=\"list\" tab={<FormattedMessage id=\"list\" />} />\n\n        <ProCard.TabPane key=\"fields\" tab={<FormattedMessage id=\"ModelFields\" />}>\n          <ModelFields class_type=\"EscolaLms\\Auth\\Models\\User\" />\n        </ProCard.TabPane>\n      </ProCard>\n    </PageContainer>\n  );\n};\n\nexport default UserFields;\n"],"sourceRoot":""}