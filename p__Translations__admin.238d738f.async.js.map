{"version":3,"file":"p__Translations__admin.238d738f.async.js","mappings":"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","sources":["webpack://ant-design-pro/./node_modules/@ant-design/icons/es/icons/EditOutlined.js","webpack://ant-design-pro/./node_modules/@ant-design/icons-svg/es/asn/PlusCircleFilled.js","webpack://ant-design-pro/./node_modules/@ant-design/icons/es/icons/PlusCircleFilled.js","webpack://ant-design-pro/./node_modules/@ant-design/pro-form/es/components/Text/index.js","webpack://ant-design-pro/./node_modules/@ant-design/pro-table/es/index.js","webpack://ant-design-pro/./src/pages/Translations/components/AdminModalForm.tsx","webpack://ant-design-pro/./src/pages/Translations/admin.tsx","webpack://ant-design-pro/./src/pages/Translations/components/JsonLangEditor.tsx"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EditOutlinedSvg from \"@ant-design/icons-svg/es/asn/EditOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar EditOutlined = function EditOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: EditOutlinedSvg\n  }));\n};\nvar RefIcon = /*#__PURE__*/React.forwardRef(EditOutlined);\nif (process.env.NODE_ENV !== 'production') {\n  RefIcon.displayName = 'EditOutlined';\n}\nexport default RefIcon;","// This icon file is generated automatically.\nvar PlusCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm192 472c0 4.4-3.6 8-8 8H544v152c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V544H328c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h152V328c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v152h152c4.4 0 8 3.6 8 8v48z\" } }] }, \"name\": \"plus-circle\", \"theme\": \"filled\" };\nexport default PlusCircleFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusCircleFilledSvg from \"@ant-design/icons-svg/es/asn/PlusCircleFilled\";\nimport AntdIcon from '../components/AntdIcon';\nvar PlusCircleFilled = function PlusCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusCircleFilledSvg\n  }));\n};\nvar RefIcon = /*#__PURE__*/React.forwardRef(PlusCircleFilled);\nif (process.env.NODE_ENV !== 'production') {\n  RefIcon.displayName = 'PlusCircleFilled';\n}\nexport default RefIcon;","import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"fieldProps\", \"proFieldProps\"],\n  _excluded2 = [\"fieldProps\", \"proFieldProps\"];\nimport { useMountMergeState } from '@ant-design/pro-utils';\nimport { Form, Popover } from 'antd';\nimport omit from 'omit.js';\nimport React, { useState } from 'react';\nimport ProField from \"../Field\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar valueType = 'text';\n/**\n * 文本组件\n *\n * @param\n */\nvar ProFormText = function ProFormText(_ref) {\n  var fieldProps = _ref.fieldProps,\n    proFieldProps = _ref.proFieldProps,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/_jsx(ProField, _objectSpread({\n    valueType: valueType,\n    fieldProps: fieldProps,\n    filedConfig: {\n      valueType: valueType\n    },\n    proFieldProps: proFieldProps\n  }, rest));\n};\nvar PassWordStrength = function PassWordStrength(props) {\n  var _useMountMergeState = useMountMergeState(props.open || false, {\n      value: props.open,\n      onChange: props.onOpenChange\n    }),\n    _useMountMergeState2 = _slicedToArray(_useMountMergeState, 2),\n    open = _useMountMergeState2[0],\n    setOpen = _useMountMergeState2[1];\n  return /*#__PURE__*/_jsx(Form.Item, {\n    shouldUpdate: true,\n    noStyle: true,\n    children: function children(form) {\n      var _props$statusRender;\n      var value = form.getFieldValue(props.name || []);\n      return /*#__PURE__*/_jsx(Popover, _objectSpread(_objectSpread({\n        getPopupContainer: function getPopupContainer(node) {\n          if (node && node.parentNode) {\n            return node.parentNode;\n          }\n          return node;\n        },\n        onOpenChange: function onOpenChange(e) {\n          return setOpen(e);\n        },\n        content: /*#__PURE__*/_jsxs(\"div\", {\n          style: {\n            padding: '4px 0'\n          },\n          children: [(_props$statusRender = props.statusRender) === null || _props$statusRender === void 0 ? void 0 : _props$statusRender.call(props, value), props.strengthText ? /*#__PURE__*/_jsx(\"div\", {\n            style: {\n              marginTop: 10\n            },\n            children: /*#__PURE__*/_jsx(\"span\", {\n              children: props.strengthText\n            })\n          }) : null]\n        }),\n        overlayStyle: {\n          width: 240\n        },\n        placement: \"rightTop\"\n      }, props.popoverProps), {}, {\n        open: open,\n        children: props.children\n      }));\n    }\n  });\n};\nvar Password = function Password(_ref2) {\n  var fieldProps = _ref2.fieldProps,\n    proFieldProps = _ref2.proFieldProps,\n    rest = _objectWithoutProperties(_ref2, _excluded2);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    open = _useState2[0],\n    setOpen = _useState2[1];\n  if (fieldProps !== null && fieldProps !== void 0 && fieldProps.statusRender && rest.name) {\n    return /*#__PURE__*/_jsx(PassWordStrength, {\n      name: rest.name,\n      statusRender: fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.statusRender,\n      popoverProps: fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.popoverProps,\n      strengthText: fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.strengthText,\n      open: open,\n      onOpenChange: setOpen,\n      children: /*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsx(ProField, _objectSpread({\n          valueType: \"password\",\n          fieldProps: _objectSpread(_objectSpread({}, omit(fieldProps, ['statusRender', 'popoverProps', 'strengthText'])), {}, {\n            onBlur: function onBlur(e) {\n              var _fieldProps$onBlur;\n              fieldProps === null || fieldProps === void 0 || (_fieldProps$onBlur = fieldProps.onBlur) === null || _fieldProps$onBlur === void 0 || _fieldProps$onBlur.call(fieldProps, e);\n              setOpen(false);\n            },\n            onClick: function onClick(e) {\n              var _fieldProps$onClick;\n              fieldProps === null || fieldProps === void 0 || (_fieldProps$onClick = fieldProps.onClick) === null || _fieldProps$onClick === void 0 || _fieldProps$onClick.call(fieldProps, e);\n              setOpen(true);\n            }\n          }),\n          proFieldProps: proFieldProps,\n          filedConfig: {\n            valueType: valueType\n          }\n        }, rest))\n      })\n    });\n  }\n  return /*#__PURE__*/_jsx(ProField, _objectSpread({\n    valueType: \"password\",\n    fieldProps: fieldProps,\n    proFieldProps: proFieldProps,\n    filedConfig: {\n      valueType: valueType\n    }\n  }, rest));\n};\nvar WrappedProFormText = ProFormText;\nWrappedProFormText.Password = Password;\n\n// @ts-ignore\n// eslint-disable-next-line no-param-reassign\nWrappedProFormText.displayName = 'ProFormComponent';\nexport default WrappedProFormText;","import { FieldIndexColumn, FieldStatus } from '@ant-design/pro-field';\nimport { ConfigConsumer, arEGIntl, caESIntl, createIntl, enUSIntl, esESIntl, frFRIntl, itITIntl, jaJPIntl, msMYIntl, ptBRIntl, ruRUIntl, thTHIntl, viVNIntl, zhCNIntl, zhTWIntl } from '@ant-design/pro-provider';\nimport ProTable from \"./Table\";\nimport DragSortTable from \"./components/DragSortTable\";\nimport TableDropdown from \"./components/Dropdown\";\nimport EditableProTable from \"./components/EditableTable\";\nimport { CellEditorTable } from \"./components/EditableTable/CellEditorTable\";\nimport { RowEditorTable } from \"./components/EditableTable/RowEditorTable\";\nimport Search from \"./components/Form\";\nimport ListToolBar from \"./components/ListToolBar\";\nexport { CellEditorTable, ConfigConsumer, DragSortTable, EditableProTable, FieldIndexColumn as IndexColumn, ConfigConsumer as IntlConsumer, ListToolBar, ProTable, RowEditorTable, Search, TableDropdown, FieldStatus as TableStatus, arEGIntl, caESIntl, createIntl, enUSIntl, esESIntl, frFRIntl, itITIntl, jaJPIntl, msMYIntl, ptBRIntl, ruRUIntl, thTHIntl, viVNIntl, zhCNIntl, zhTWIntl };\nexport default ProTable;","import ProForm, { ModalForm, ProFormText } from '@ant-design/pro-form';\nimport { Form } from 'antd';\nimport React, { useEffect } from 'react';\nimport { FormattedMessage, useIntl } from 'umi';\nimport { JsonLangEditor } from './JsonLangEditor';\n\nexport const TranslationModalForm: React.FC<{\n  langKey?: string;\n  visible: boolean;\n  onVisibleChange: (visible: boolean) => void;\n  onFinish: (formData: API.Translation) => Promise<boolean | void>;\n  defaultValue?: Record<string, string>;\n}> = ({ visible, onVisibleChange, onFinish, langKey, defaultValue }) => {\n  const intl = useIntl();\n\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    form.setFieldsValue({\n      key: langKey,\n      text: defaultValue,\n    });\n  }, [langKey, form]);\n\n  return (\n    <ModalForm\n      form={form}\n      title={intl.formatMessage({\n        id: 'editTranslation',\n        defaultMessage: 'Edit Translation',\n      })}\n      width=\"700px\"\n      visible={visible}\n      onVisibleChange={onVisibleChange}\n      onFinish={(values) => onFinish({ ...values })}\n    >\n      <ProForm.Group>\n        <ProFormText\n          disabled\n          label={<FormattedMessage id=\"group\" defaultMessage=\"group\" />}\n          name=\"group\"\n          initialValue={'Admin'}\n        />\n        <ProFormText\n          disabled\n          name=\"key\"\n          label={<FormattedMessage id=\"key\" />}\n          placeholder={intl.formatMessage({\n            id: 'key',\n          })}\n          required\n        />\n      </ProForm.Group>\n      <ProForm.Item\n        name={'text'}\n        label={<FormattedMessage id={'translationJsonText'} />}\n        tooltip={<FormattedMessage id={'translationJsonText_tooltip'} />}\n        valuePropName=\"value\"\n      >\n        <JsonLangEditor />\n      </ProForm.Item>\n    </ModalForm>\n  );\n};\n\nexport default TranslationModalForm;\n","import {\n  createTranslation,\n  translations,\n  updateTranslation,\n} from '@/services/escola-lms/translations';\nimport { sortByKey } from '@/utils/utils';\nimport { localeInfo } from '@@/plugin-locale/localeExports';\nimport { EditOutlined } from '@ant-design/icons';\nimport { PageContainer } from '@ant-design/pro-layout';\nimport type { ActionType, ProColumns } from '@ant-design/pro-table';\nimport ProTable from '@ant-design/pro-table';\nimport { Button, Tooltip } from 'antd';\nimport React, { useCallback, useMemo, useRef, useState } from 'react';\nimport { FormattedMessage, addLocale, getAllLocales, useIntl } from 'umi';\nimport AdminModalForm from './components/AdminModalForm';\n\ntype LangRow = { lang: string; key: string; value: string | number; id: string };\n\nexport const TableColumns: ProColumns<LangRow>[] = [\n  {\n    title: <FormattedMessage id=\"language\" defaultMessage=\"Language\" />,\n    dataIndex: 'lang',\n    sorter: true,\n    valueType: 'select',\n    valueEnum: getAllLocales().reduce(\n      (acc, local) => ({ ...acc, [local]: local }),\n      {} as Record<string, string>,\n    ),\n  },\n  {\n    title: <FormattedMessage id=\"key\" defaultMessage=\"key\" />,\n    dataIndex: 'key',\n    sorter: true,\n  },\n  {\n    title: <FormattedMessage id=\"value\" defaultMessage=\"value\" />,\n    dataIndex: 'value',\n    sorter: true,\n  },\n];\n\nconst Translations: React.FC = () => {\n  const [rndNumber, setRndNumber] = useState(Math.random());\n  const actionRef = useRef<ActionType>();\n  const [editTranslationKey, setEditTranslationKey] = useState<{\n    key: string;\n    defaultValue: Record<string, string>;\n  }>();\n\n  const intl = useIntl();\n\n  const getRows = useMemo(() => {\n    const rows: LangRow[] = [];\n    const langs = Object.keys(localeInfo);\n\n    for (const lang of langs) {\n      const messages: Record<string, string> | undefined = localeInfo[lang].messages;\n      if (messages) {\n        Object.keys(messages).forEach((key) => {\n          rows.push({\n            id: `${lang}-${key}`,\n            lang: lang,\n            key: key,\n            value: messages[key as keyof typeof messages] || '',\n          });\n        });\n      }\n    }\n    return rows;\n  }, [rndNumber]);\n\n  const onEditClick = useCallback((key: string) => {\n    //FIXME\n    //@ts-ignore\n    const defaultValue = getRows.reduce((acc, row) => {\n      if (row.key === key) {\n        return { ...acc, [row.lang]: row.value };\n      }\n      return acc;\n    }, {} as Record<string, string>);\n    //FIXME\n    //@ts-ignore\n    setEditTranslationKey({ key, defaultValue });\n  }, []);\n\n  return (\n    <PageContainer>\n      <ProTable<LangRow>\n        headerTitle={intl.formatMessage({\n          id: 'menu.Configuration.Translations',\n          defaultMessage: 'Translations',\n        })}\n        actionRef={actionRef}\n        search={{\n          layout: 'vertical',\n        }}\n        rowKey=\"id\"\n        request={({ lang, key, value }, sort) => {\n          const sortArr = sort && Object.entries(sort)[0];\n          return new Promise((resolve) => {\n            let rows = getRows.filter((row) => {\n              let result = true;\n              if (result && lang && row.lang !== lang) {\n                result = false;\n              }\n              if (result && key && !row.key.includes(key)) {\n                result = false;\n              }\n              if (\n                result &&\n                value &&\n                typeof row.value === 'string' &&\n                row.value &&\n                !row.value.includes(value)\n              ) {\n                result = false;\n              }\n              return result;\n            });\n\n            if (sortArr) {\n              console.log('rows: ', rows);\n              console.log('sortArr: ', sortArr);\n              rows = rows.sort(\n                sortByKey<LangRow>(sortArr[0], sortArr[1] === 'ascend' ? false : true),\n              );\n            }\n\n            resolve({\n              data: rows,\n              success: true,\n              total: rows.length,\n            });\n          });\n        }}\n        columns={[\n          ...TableColumns,\n          {\n            title: <FormattedMessage id=\"options\" defaultMessage=\"options\" />,\n            dataIndex: 'option',\n            valueType: 'option',\n            width: '10%',\n            render: (_, record) => [\n              <Tooltip key=\"edit\" title={<FormattedMessage id=\"edit\" defaultMessage=\"edit\" />}>\n                <Button\n                  type=\"primary\"\n                  icon={<EditOutlined />}\n                  onClick={() => onEditClick(record.key)}\n                />\n              </Tooltip>,\n              ,\n            ],\n          },\n        ]}\n      />{' '}\n      <AdminModalForm\n        langKey={editTranslationKey?.key}\n        defaultValue={editTranslationKey?.defaultValue}\n        visible={!!editTranslationKey}\n        onVisibleChange={(value) => {\n          return value === false && setEditTranslationKey(undefined);\n        }}\n        onFinish={async (values) => {\n          Object.entries(values.text).forEach((txt) => {\n            if (txt[1]) {\n              addLocale(\n                txt[0],\n                { [values.key]: txt[1] },\n                {\n                  antd: localeInfo[txt[0]].antd,\n                  momentLocale: localeInfo[txt[0]].momentLocale,\n                },\n              );\n            }\n          });\n\n          if (actionRef.current) {\n            setRndNumber(Math.random());\n            actionRef.current.reload();\n          }\n\n          const t = await translations({ group: 'Admin', key: values.key });\n\n          if (t.success) {\n            if (t.data.length > 0 && t.data[0].id) {\n              updateTranslation(t.data[0].id, values);\n            } else {\n              await createTranslation(values);\n            }\n          }\n\n          setEditTranslationKey(undefined);\n\n          return true;\n        }}\n      />\n    </PageContainer>\n  );\n};\n\nexport default Translations;\n","import { Button, Col, Input, Row } from 'antd';\nimport React, { useCallback, useEffect, useState } from 'react';\n\nimport 'jsoneditor-react/es/editor.min.css';\n\nimport { PlusCircleFilled } from '@ant-design/icons';\nimport { getAllLocales } from 'umi';\n\nconst defaultValue = () =>\n  getAllLocales().reduce((acc, curr) => {\n    return { ...acc, [curr]: '' };\n  }, {} as Record<string, string>);\n\nexport const JsonLangEditor: React.FC<{\n  value?: string | object;\n  onChange?: (value: string | object) => void;\n}> = ({ value, onChange }) => {\n  const [state, setState] = useState<Record<string, string>>(defaultValue());\n\n  useEffect(() => {\n    const obj = typeof value === 'object' ? value : JSON.parse(value ?? '{}');\n    setState(Object.assign(defaultValue(), obj));\n  }, [value]);\n\n  useEffect(() => {\n    if (onChange) {\n      if (JSON.stringify(state) !== JSON.stringify(value)) {\n        onChange(state);\n      }\n    }\n  }, [state]);\n\n  const onLangAdd = useCallback(() => {\n    setState((prevState) => ({ ...prevState, lang: '' }));\n  }, []);\n\n  const onRowChange = useCallback((index: number, lang: string, newValue: string) => {\n    setState((prevState) =>\n      Object.entries(prevState).reduce((acc, curr, i) => {\n        if (i === index) {\n          return {\n            ...acc,\n            [lang]: newValue,\n          };\n        }\n        return { ...acc, [curr[0]]: curr[1] };\n      }, {}),\n    );\n  }, []);\n\n  return (\n    <div>\n      {Object.entries(state).map((entry, i) => (\n        <Row key={entry[0]}>\n          <Col span={6}>\n            <Input\n              disabled={getAllLocales().includes(entry[0])}\n              value={entry[0]}\n              maxLength={5}\n              onChange={(e) => onRowChange(i, e.target.value, entry[1])}\n            />\n          </Col>\n          <Col span={24 - 6}>\n            <Input value={entry[1]} onChange={(e) => onRowChange(i, entry[0], e.target.value)} />\n          </Col>\n        </Row>\n      ))}\n      <Button onClick={() => onLangAdd()} icon={<PlusCircleFilled />} />\n    </div>\n  );\n};\n\nexport default JsonLangEditor;\n"],"names":["EditOutlined","props","ref","RefIcon","PlusCircleFilled","AntdIcon","_excluded","_excluded2","valueType","ProFormText","_ref","fieldProps","proFieldProps","rest","PassWordStrength","_useMountMergeState","_useMountMergeState2","open","setOpen","form","_props$statusRender","value","node","e","Password","_ref2","_useState","_useState2","_fieldProps$onBlur","_fieldProps$onClick","WrappedProFormText","TranslationModalForm","visible","onVisibleChange","onFinish","langKey","defaultValue","intl","useIntl","_Form$useForm","Form","useForm","_Form$useForm2","_slicedToArray","useEffect","setFieldsValue","key","text","_jsxs","ModalForm","title","formatMessage","id","defaultMessage","width","values","_objectSpread","children","ProForm","_jsx","disabled","label","FormattedMessage","name","initialValue","placeholder","required","Item","tooltip","valuePropName","JsonLangEditor","TableColumns","dataIndex","sorter","valueEnum","getAllLocales","reduce","acc","local","_defineProperty","Translations","useState","Math","random","rndNumber","setRndNumber","actionRef","useRef","_useState3","_useState4","editTranslationKey","setEditTranslationKey","getRows","useMemo","rows","langs","Object","keys","localeInfo","_loop","lang","_langs","_i","messages","forEach","push","concat","length","onEditClick","useCallback","row","PageContainer","ProTable","headerTitle","search","layout","rowKey","request","sort","sortArr","entries","Promise","resolve","filter","result","includes","console","log","sortByKey","data","success","total","columns","render","_","record","Tooltip","Button","type","icon","onClick","AdminModalForm","undefined","_asyncToGenerator","_regeneratorRuntime","mark","_callee","t","wrap","_context","prev","next","txt","addLocale","antd","momentLocale","current","reload","translations","group","sent","updateTranslation","createTranslation","abrupt","stop","_x","apply","arguments","curr","onChange","state","setState","obj","_typeof","JSON","parse","assign","stringify","onLangAdd","prevState","onRowChange","index","newValue","i","map","entry","Row","Col","span","Input","maxLength","target"],"sourceRoot":""}