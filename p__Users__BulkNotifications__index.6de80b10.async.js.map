{"version":3,"file":"p__Users__BulkNotifications__index.6de80b10.async.js","mappings":"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","sources":["webpack://ant-design-pro/./src/pages/Users/BulkNotifications/List/index.tsx","webpack://ant-design-pro/./src/pages/Users/BulkNotifications/index.tsx","webpack://ant-design-pro/./src/services/escola-lms/bulk-notifications.ts"],"sourcesContent":["import TypeButtonDrawer from '@/components/TypeButtonDrawer';\nimport UserSelect from '@/components/UserSelect';\nimport PERMISSIONS from '@/consts/permissions';\nimport { usePermissions } from '@/hooks/usePermissions';\nimport { bulkNotifications } from '@/services/escola-lms/bulk-notifications';\nimport {\n  type BulkNotificationChannelsEnum,\n  BulkNotificationSectionsKeysEnum,\n} from '@/services/escola-lms/enums';\nimport { PlusOutlined } from '@ant-design/icons';\nimport type { ActionType, ProColumns } from '@ant-design/pro-table';\nimport ProTable from '@ant-design/pro-table';\nimport { Button } from 'antd';\nimport React, { useRef } from 'react';\nimport { FormattedMessage, Link, useIntl } from 'umi';\n\nexport const TableColumns: ProColumns<API.BulkNotification>[] = [\n  {\n    title: <FormattedMessage id=\"ID\" defaultMessage=\"ID\" />,\n    dataIndex: 'id',\n    hideInSearch: true,\n    sorter: true,\n    width: '80px',\n  },\n  {\n    title: <FormattedMessage id=\"user_id\" defaultMessage=\"user_id\" />,\n    dataIndex: 'notifiable_id',\n    hideInSearch: true,\n    sorter: true,\n    valueType: 'select',\n    renderFormItem: (item, { type, defaultRender, ...rest }) => {\n      return <UserSelect {...rest} />;\n    },\n    render: (_, record) =>\n      record.users &&\n      record.users.map((userId) => (\n        <TypeButtonDrawer key={`user-${userId}`} type=\"App\\Models\\User\" type_id={userId} />\n      )),\n  },\n  {\n    title: <FormattedMessage id=\"title\" defaultMessage=\"title\" />,\n    dataIndex: 'sections',\n    hideInSearch: true,\n    sorter: false,\n    valueType: 'select',\n    render: (_, record) =>\n      record.sections.find(({ key }) => key === BulkNotificationSectionsKeysEnum.TITLE)?.value ||\n      '',\n  },\n  {\n    title: <FormattedMessage id=\"content\" defaultMessage=\"content\" />,\n    dataIndex: 'sections',\n    hideInSearch: true,\n    sorter: false,\n    valueType: 'select',\n    render: (_, record) =>\n      record.sections.find(({ key }) => key === BulkNotificationSectionsKeysEnum.BODY)?.value || '',\n  },\n];\n\nconst TableList: React.FC<{ templateType: string; channel: BulkNotificationChannelsEnum }> = ({\n  templateType,\n  channel,\n}) => {\n  const actionRef = useRef<ActionType>();\n  const intl = useIntl();\n  const { checkPermission } = usePermissions();\n\n  return (\n    <ProTable<API.BulkNotification>\n      headerTitle={intl.formatMessage({\n        id: 'Bulknotifications.pushListTitle',\n        defaultMessage: 'Push notifications sent',\n      })}\n      actionRef={actionRef}\n      rowKey=\"id\"\n      search={false}\n      toolBarRender={() =>\n        checkPermission(PERMISSIONS.UserBulkNotificationCreate)\n          ? [\n              <Link key={'new'} to={`/users/notifications/${templateType}/new`}>\n                <Button type=\"primary\" key=\"primary\">\n                  <PlusOutlined /> <FormattedMessage id=\"new\" defaultMessage=\"new\" />\n                </Button>\n              </Link>,\n            ]\n          : []\n      }\n      request={({ pageSize, current }, sort) => {\n        const sortArr = sort && Object.entries(sort)[0];\n        return bulkNotifications({\n          per_page: pageSize,\n          page: current,\n          order_by: sortArr && sortArr[0],\n          order: sortArr ? (sortArr[1] === 'ascend' ? 'ASC' : 'DESC') : undefined,\n          channel,\n        }).then((response) => {\n          if (response.success) {\n            return {\n              data: response.data,\n              total: response.meta.total,\n              success: true,\n            };\n          }\n          return [];\n        });\n      }}\n      columns={[...TableColumns]}\n    />\n  );\n};\n\nexport default TableList;\n","import TableList from '@/pages/Users/BulkNotifications/List';\nimport { BulkNotificationChannelsEnum } from '@/services/escola-lms/enums';\nimport ProCard from '@ant-design/pro-card';\nimport { PageContainer } from '@ant-design/pro-layout';\nimport React from 'react';\nimport { FormattedMessage, history, useParams } from 'umi';\n\nconst BulkNotifications: React.FC = () => {\n  const params = useParams<{ template?: string }>();\n  const { template } = params;\n\n  return (\n    <PageContainer>\n      <ProCard\n        tabs={{\n          type: 'card',\n          activeKey: template,\n          onChange: (key) => history.push(`/configuration/templates/${key}`),\n        }}\n      >\n        <ProCard.TabPane key=\"push\" tab={<FormattedMessage id=\"Bulknotifications.push\" />}>\n          <TableList templateType={'push'} channel={BulkNotificationChannelsEnum.PUSH} />\n        </ProCard.TabPane>\n      </ProCard>\n    </PageContainer>\n  );\n};\n\nexport default BulkNotifications;\n","import type { AxiosRequestConfig } from '@umijs/max';\nimport { request } from 'umi';\n\n/**  GET /api/admin/bulkNotifications */\nexport async function bulkNotifications(\n  params?: API.BulkNotificationsParams,\n  options?: AxiosRequestConfig,\n) {\n  return request<API.BulkNotificationsList>(`/api/admin/bulk-notifications`, {\n    method: 'GET',\n    /* useCache: true */ useCache: false,\n    params,\n    ...(options || {}),\n  });\n}\n\nexport async function sendBulkNotification(\n  body: API.BulkNotificationBody,\n  options?: AxiosRequestConfig,\n) {\n  return request<API.DefaultResponse<API.BulkNotification>>(`/api/admin/bulk-notifications/send`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    data: body,\n    ...(options || {}),\n  });\n}\n\nexport async function sendBulkNotificationForAll(\n  body: API.BulkNotificationBody,\n  options?: AxiosRequestConfig,\n) {\n  return request<API.DefaultResponse<API.BulkNotification>>(\n    `/api/admin/bulk-notifications/send/multicast`,\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      data: body,\n      ...(options || {}),\n    },\n  );\n}\n"],"names":["TableColumns","title","_jsx","FormattedMessage","id","defaultMessage","dataIndex","hideInSearch","sorter","width","valueType","renderFormItem","item","_ref","type","defaultRender","rest","_objectWithoutProperties","_excluded","UserSelect","_objectSpread","render","_","record","users","map","userId","TypeButtonDrawer","type_id","concat","_record$sections$find","sections","find","_ref2","key","BulkNotificationSectionsKeysEnum","TITLE","value","_record$sections$find2","_ref3","BODY","TableList","_ref4","templateType","channel","actionRef","useRef","intl","useIntl","_usePermissions","usePermissions","checkPermission","ProTable","headerTitle","formatMessage","rowKey","search","toolBarRender","PERMISSIONS","UserBulkNotificationCreate","Link","to","children","_jsxs","Button","PlusOutlined","request","_ref5","sort","pageSize","current","sortArr","Object","entries","bulkNotifications","per_page","page","order_by","order","undefined","then","response","success","data","total","meta","columns","BulkNotifications","params","useParams","template","PageContainer","ProCard","tabs","activeKey","onChange","history","push","TabPane","tab","BulkNotificationChannelsEnum","PUSH","_x","_x2","_bulkNotifications","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","options","wrap","_context","prev","next","abrupt","method","useCache","stop","sendBulkNotification","_x3","_x4","_sendBulkNotification","_callee2","body","_context2","headers","sendBulkNotificationForAll","_x5","_x6","_sendBulkNotificationForAll","_callee3","_context3"],"sourceRoot":""}