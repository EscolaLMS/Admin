{"version":3,"sources":["webpack:///./src/components/EditValidateModal/index.tsx","webpack:///./src/components/ConfirmModal/index.tsx","webpack:///./node_modules/@ant-design/pro-form/es/components/Digit/index.js","webpack:///./node_modules/date-fns/esm/isPast/index.js","webpack:///./src/hooks/useValidateFormEdit.tsx","webpack:///./src/components/ProductWidget/index.tsx","webpack:///./node_modules/@ant-design/pro-form/es/components/DateTimePicker/index.js","webpack:///./src/pages/Webinars/form.tsx","webpack:///./node_modules/@ant-design/pro-form/es/components/Select/index.js"],"names":["EditValidateModal","visible","setManage","showModal","disableEdit","clicked","ConfirmModal","open","onOk","onCancel","title","content","okText","loading","_excluded","ProFormDigit","_ref","ref","fieldProps","min","proFieldProps","max","rest","_objectWithoutProperties","_jsx","ProFormField","_objectSpread","valueType","filedConfig","defaultProps","width","React","forwardRef","dirtyDate","requiredArgs","arguments","toDate","getTime","Date","now","useState","manageCourseEdit","setManageCourseEdit","validateCourseEdit","modelData","status","active_from","isPast","ProductWidget","productable","type","tab","setTab","newTab","ProFormDateTimePicker","context","useContext","FieldContext","ProField","getPopupContainer","customLightMode","TabNames","WebinarForm","intl","useIntl","params","useParams","webinar","ATTRIBUTES","isNew","data","setData","useValidateFormEdit","ProForm","useForm","form","fetchData","useCallback","getWebinar","Number","response","success","tags","map","tagsArrToIds","useEffect","name","formProps","useMemo","onValuesChange","valuesChanged","onFinish","values","postData","String","active_to","image_url","image_path","splitImagePath","logotype_url","logotype_path","trainers","author","id","createWebinar","history","push","updateWebinar","message","showConfirmModal","initialValues","breadcrumb","routes","path","breadcrumbName","formatMessage","activeKey","onChange","key","marginBottom","defaultMessage","draft","published","archived","required","class_type","class_id","quantity","PRODUCT","info","file","removedPath","prevState","MEDIA","TAGS","BRANDING","USER_SUBMISSION","submit","_excluded2","ProFormSelectComponents","children","mode","valueEnum","request","showSearch","options","runFunction","SearchSelect","_ref2","props","labelInValue","showArrow","autoClearSearchValue","optionLabelProp","ProFormSelect","ProFormSearchSelect","WrappedProFormSelect","displayName"],"mappings":"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","file":"p__Webinars__form.3c4c4fa7.async.js","sourcesContent":["import { Modal } from 'antd';\nimport { FormattedMessage } from 'umi';\n\ntype Data = {\n  showModal: boolean;\n  disableEdit: boolean;\n  clicked: boolean;\n};\n\nconst EditValidateModal: React.FC<{\n  visible: boolean;\n  setManage: (data: Data) => void;\n}> = ({ visible, setManage }) => {\n  return (\n    <Modal\n      width={'600px'}\n      title={\n        <FormattedMessage\n          id=\"course.validate_edit.header\"\n          defaultMessage=\"course.validate_edit.header\"\n        />\n      }\n      visible={visible}\n      onOk={() =>\n        setManage({\n          showModal: false,\n          disableEdit: false,\n          clicked: true,\n        })\n      }\n      onCancel={() =>\n        setManage({\n          showModal: false,\n          disableEdit: true,\n          clicked: false,\n        })\n      }\n      okText=\"OK\"\n      cancelText=\"Cancel\"\n    >\n      <p>\n        <FormattedMessage\n          id=\"course.validate_edit.content\"\n          defaultMessage=\"course.validate_edit.content\"\n        />\n      </p>\n    </Modal>\n  );\n};\n\nexport default EditValidateModal;\n","import { Modal } from 'antd';\nimport { FormattedMessage } from 'umi';\n\nconst ConfirmModal: React.FC<{\n  open: boolean;\n  onOk: () => void;\n  onCancel: () => void;\n  title?: React.ReactNode;\n  content?: React.ReactNode;\n  okText?: React.ReactNode;\n  loading?: boolean;\n}> = ({ open, onOk, onCancel, title, content, okText, loading }) => {\n  return (\n    <Modal\n      width={'600px'}\n      title={title ?? <FormattedMessage id=\"confirmModal.title\" />}\n      open={open}\n      onOk={onOk}\n      onCancel={onCancel}\n      okText={okText ?? <FormattedMessage id=\"save\" />}\n      cancelText={<FormattedMessage id=\"cancel\" />}\n      confirmLoading={loading}\n    >\n      {content ?? (\n        <p>\n          <FormattedMessage id=\"confirmModal.content\" />\n        </p>\n      )}\n    </Modal>\n  );\n};\n\nexport default ConfirmModal;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"fieldProps\", \"min\", \"proFieldProps\", \"max\"];\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport ProFormField from '../Field';\n/**\n * 数组选择组件\n *\n * @param\n */\n\nvar ProFormDigit = function ProFormDigit(_ref, ref) {\n  var fieldProps = _ref.fieldProps,\n      min = _ref.min,\n      proFieldProps = _ref.proFieldProps,\n      max = _ref.max,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return _jsx(ProFormField, _objectSpread({\n    valueType: \"digit\",\n    fieldProps: _objectSpread({\n      min: min,\n      max: max\n    }, fieldProps),\n    ref: ref,\n    filedConfig: {\n      defaultProps: {\n        width: '100%'\n      }\n    },\n    proFieldProps: proFieldProps\n  }, rest));\n};\n\nexport default /*#__PURE__*/React.forwardRef(ProFormDigit);","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isPast\n * @category Common Helpers\n * @summary Is the given date in the past?\n * @pure false\n *\n * @description\n * Is the given date in the past?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in the past\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 2 July 2014 in the past?\n * const result = isPast(new Date(2014, 6, 2))\n * //=> true\n */\nexport default function isPast(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getTime() < Date.now();\n}","import { useState } from 'react';\nimport { isPast } from 'date-fns';\n\ninterface ManageProps {\n  showModal: boolean;\n  disableEdit: boolean;\n  clicked: boolean;\n  valuesChanged?: boolean;\n  showConfirmModal?: boolean;\n  loading?: boolean;\n}\n\nexport default function useValidateFormEdit() {\n  const [manageCourseEdit, setManageCourseEdit] = useState<ManageProps>({\n    showModal: false,\n    disableEdit: false,\n    clicked: false,\n  });\n\n  const validateCourseEdit = (modelData: API.Course | API.Webinar | API.Consultation) => {\n    if (\n      modelData?.status === 'published' &&\n      modelData?.active_from &&\n      isPast(new Date(modelData?.active_from)) &&\n      !manageCourseEdit.clicked\n    ) {\n      setManageCourseEdit({\n        ...manageCourseEdit,\n        showModal: false,\n        disableEdit: true,\n        clicked: false,\n      });\n    } else {\n      setManageCourseEdit({\n        ...manageCourseEdit,\n        showModal: false,\n        disableEdit: false,\n        clicked: false,\n      });\n    }\n  };\n\n  return { manageCourseEdit, setManageCourseEdit, validateCourseEdit };\n}\n","import ProductsForm from '@/pages/Products/components/form';\nimport React, { useState } from 'react';\n\nexport const ProductWidget: React.FC<{\n  type?: 'line' | 'card';\n  productable?: {\n    name?: string;\n    class_type?: string;\n    class_id?: string | number;\n    quantity?: number;\n  };\n}> = ({ productable, type = 'card' }) => {\n  const [tab, setTab] = useState<string>('attributes');\n  return (\n    <ProductsForm\n      productable={productable}\n      tab={tab}\n      onTabChange={(newTab) => setTab(newTab)}\n      type={type}\n    />\n  );\n};\n\nexport default ProductWidget;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"fieldProps\", \"proFieldProps\"];\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useContext } from 'react';\nimport FieldContext from '../../FieldContext';\nimport ProField from '../Field';\nvar valueType = 'dateTime';\n/**\n * 时间日期选择组件\n *\n * @param\n */\n\nvar ProFormDateTimePicker = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var fieldProps = _ref.fieldProps,\n      proFieldProps = _ref.proFieldProps,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var context = useContext(FieldContext);\n  return _jsx(ProField, _objectSpread({\n    ref: ref,\n    fieldProps: _objectSpread({\n      getPopupContainer: context.getPopupContainer\n    }, fieldProps),\n    valueType: valueType,\n    proFieldProps: proFieldProps,\n    filedConfig: {\n      valueType: valueType,\n      customLightMode: true\n    }\n  }, rest));\n});\nexport default ProFormDateTimePicker;","import { useMemo, useState, useEffect } from 'react';\nimport { message, Spin, Row, Col, Alert, Button } from 'antd';\nimport ProForm, {\n  ProFormText,\n  ProFormSelect,\n  ProFormTextArea,\n  ProFormDateTimePicker,\n} from '@ant-design/pro-form';\nimport ProCard from '@ant-design/pro-card';\nimport WysiwygMarkdown from '@/components/WysiwygMarkdown';\nimport { PageContainer } from '@ant-design/pro-layout';\nimport { useParams, history, useIntl, FormattedMessage } from 'umi';\nimport { useCallback } from 'react';\nimport { createWebinar, getWebinar, updateWebinar } from '@/services/escola-lms/webinars';\nimport UserSelect from '@/components/UserSelect';\nimport ProFormImageUpload from '@/components/ProFormImageUpload';\nimport { splitImagePath, tagsArrToIds } from '@/utils/utils';\nimport TagsInput from '@/components/TagsInput';\nimport useValidateFormEdit from '@/hooks/useValidateFormEdit';\nimport EditValidateModal from '@/components/EditValidateModal';\nimport ProductWidget from '@/components/ProductWidget';\nimport UserSubmissions from '@/components/UsersSubmissions';\nimport ConfirmModal from '@/components/ConfirmModal';\n\nenum TabNames {\n  ATTRIBUTES = 'attributes',\n  PRODUCT = 'product',\n  MEDIA = 'media',\n  TAGS = 'tags',\n  BRANDING = 'branding',\n  USER_SUBMISSION = 'user_submission',\n}\n\nconst WebinarForm = () => {\n  const intl = useIntl();\n  const params = useParams<{ webinar?: string; tab?: string }>();\n  const { webinar, tab = TabNames.ATTRIBUTES } = params;\n  const isNew = webinar === 'new';\n  const [data, setData] = useState<Partial<API.Webinar>>();\n  const { manageCourseEdit, setManageCourseEdit, validateCourseEdit } = useValidateFormEdit();\n\n  const [form] = ProForm.useForm();\n\n  const fetchData = useCallback(async () => {\n    const response = await getWebinar(Number(webinar));\n    if (response.success) {\n      if (tab === TabNames.ATTRIBUTES) {\n        validateCourseEdit(response.data);\n      }\n\n      setData({\n        ...response.data,\n        tags: response.data.tags?.map(tagsArrToIds),\n      });\n    }\n  }, [webinar]);\n\n  useEffect(() => {\n    if (isNew) {\n      setData({\n        name: 'new',\n      });\n      return;\n    }\n\n    fetchData();\n  }, [webinar]);\n\n  const formProps = useMemo(\n    () => ({\n      onValuesChange: () => {\n        setManageCourseEdit({\n          ...manageCourseEdit,\n          valuesChanged: true,\n        });\n      },\n      onFinish: async (values: Partial<API.Webinar>) => {\n        if (manageCourseEdit.disableEdit) {\n          setManageCourseEdit({\n            showModal: true,\n            disableEdit: true,\n            clicked: false,\n          });\n          return;\n        }\n\n        const postData = {\n          ...values,\n          active_from: new Date(String(values.active_from)) || data?.active_from || null,\n          active_to: new Date(String(values.active_to)) || data?.active_to || null,\n          image_url: data?.image_url,\n          image_path: data?.image_url && splitImagePath(data.image_url),\n          logotype_url: data?.logotype_url,\n          logotype_path: data?.logotype_path && splitImagePath(data.logotype_path),\n          trainers:\n            values.trainers &&\n            values.trainers.map((author) => (typeof author === 'object' ? author.id : author)),\n        };\n\n        let response: API.DefaultResponse<API.Webinar>;\n        if (isNew) {\n          response = await createWebinar(postData);\n          if (response.success) {\n            history.push(`/courses/webinars/${response.data.id}`);\n          }\n        } else {\n          response = await updateWebinar(Number(webinar), postData);\n          if (response.success) {\n            validateCourseEdit(response.data);\n            history.push(`/courses/webinars/${response.data.id}/${tab}`);\n          }\n        }\n        message.success(response.message);\n        setManageCourseEdit({\n          ...manageCourseEdit,\n          showConfirmModal: false,\n          loading: false,\n          valuesChanged: false,\n        });\n      },\n      initialValues: data,\n      form,\n    }),\n    [data, webinar, tab, manageCourseEdit, form],\n  );\n\n  if (!data) {\n    return <Spin />;\n  }\n\n  return (\n    <PageContainer\n      title={\n        isNew ? <FormattedMessage id=\"menu.Webinars\" /> : <FormattedMessage id=\"webinar.edit\" />\n      }\n      header={{\n        breadcrumb: {\n          routes: [\n            {\n              path: 'webinars',\n              breadcrumbName: intl.formatMessage({\n                id: 'menu.Webinars',\n              }),\n            },\n            {\n              path: String(webinar),\n              breadcrumbName: intl.formatMessage({\n                id: 'form',\n              }),\n            },\n            {\n              path: '/',\n              breadcrumbName: intl.formatMessage({\n                id: String(data.name),\n              }),\n            },\n            {\n              path: String(tab),\n              breadcrumbName: intl.formatMessage({\n                id: String(tab),\n              }),\n            },\n          ],\n        },\n      }}\n    >\n      <ProCard\n        tabs={{\n          type: 'card',\n          activeKey: tab,\n          onChange: (key) => {\n            if (key !== TabNames.ATTRIBUTES && manageCourseEdit.valuesChanged) {\n              setManageCourseEdit({\n                ...manageCourseEdit,\n                showConfirmModal: true,\n              });\n            } else {\n              history.push(`/courses/webinars/${webinar}/${key}`);\n            }\n          },\n        }}\n      >\n        <ProCard.TabPane key={TabNames.ATTRIBUTES} tab={<FormattedMessage id=\"attributes\" />}>\n          {manageCourseEdit.disableEdit && (\n            <Alert\n              closable\n              style={{ marginBottom: '20px' }}\n              type=\"warning\"\n              message={\n                <FormattedMessage\n                  id=\"course_edit_warning_message\"\n                  defaultMessage=\"course_edit_warning_message\"\n                />\n              }\n              action={\n                <Button\n                  onClick={() =>\n                    setManageCourseEdit({\n                      showModal: true,\n                      disableEdit: true,\n                      clicked: true,\n                    })\n                  }\n                  type=\"primary\"\n                >\n                  <FormattedMessage\n                    id=\"questionnaire.submit\"\n                    defaultMessage=\"questionnaire.submit\"\n                  />\n                </Button>\n              }\n            />\n          )}\n          <EditValidateModal visible={manageCourseEdit.showModal} setManage={setManageCourseEdit} />\n          <ProForm {...formProps}>\n            <ProForm.Group>\n              <ProFormText\n                width=\"md\"\n                name=\"name\"\n                label={<FormattedMessage id=\"name\" />}\n                tooltip={<FormattedMessage id=\"name\" />}\n                placeholder={intl.formatMessage({\n                  id: 'name',\n                  defaultMessage: 'name',\n                })}\n                required\n                disabled={manageCourseEdit.disableEdit}\n              />\n\n              <ProFormText\n                width=\"sm\"\n                name=\"duration\"\n                label={<FormattedMessage id=\"duration_freemode\" />}\n                tooltip={<FormattedMessage id=\"duration_freemode_description\" />}\n                placeholder={intl.formatMessage({\n                  id: 'duration_freemode',\n                  defaultMessage: 'duration_freemode',\n                })}\n                disabled={manageCourseEdit.disableEdit}\n              />\n              <ProFormSelect\n                name=\"status\"\n                width=\"sm\"\n                label={<FormattedMessage id=\"status\" />}\n                valueEnum={{\n                  draft: intl.formatMessage({\n                    id: 'draft',\n                    defaultMessage: 'draft',\n                  }),\n                  published: intl.formatMessage({\n                    id: 'published',\n                    defaultMessage: 'published',\n                  }),\n                  archived: intl.formatMessage({\n                    id: 'archived',\n                    defaultMessage: 'archived',\n                  }),\n                }}\n                initialValue={{\n                  draft: intl.formatMessage({\n                    id: 'draft',\n                    defaultMessage: 'draft',\n                  }),\n                }}\n                placeholder={intl.formatMessage({\n                  id: 'status',\n                })}\n                rules={[{ required: true, message: <FormattedMessage id=\"select\" /> }]}\n                disabled={manageCourseEdit.disableEdit}\n              />\n            </ProForm.Group>\n            <ProForm.Group>\n              <ProFormDateTimePicker\n                width=\"sm\"\n                name=\"active_from\"\n                label={<FormattedMessage id=\"active_from\" />}\n                tooltip={<FormattedMessage id=\"active_from\" />}\n                placeholder={intl.formatMessage({\n                  id: 'active_from',\n                  defaultMessage: 'active_from',\n                })}\n                disabled={manageCourseEdit.disableEdit}\n              />\n              <ProFormDateTimePicker\n                width=\"sm\"\n                name=\"active_to\"\n                label={<FormattedMessage id=\"active_to\" />}\n                tooltip={<FormattedMessage id=\"active_to\" />}\n                placeholder={intl.formatMessage({\n                  id: 'active_to',\n                  defaultMessage: 'active_to',\n                })}\n                disabled={manageCourseEdit.disableEdit}\n              />\n              <ProForm.Item\n                name=\"trainers\"\n                label={<FormattedMessage id=\"tutor\" />}\n                valuePropName=\"value\"\n              >\n                <UserSelect multiple />\n              </ProForm.Item>\n            </ProForm.Group>\n            <ProForm.Group>\n              <ProFormTextArea\n                name=\"short_desc\"\n                label={<FormattedMessage id=\"short_description\" />}\n                tooltip={<FormattedMessage id=\"short_description\" />}\n                width=\"lg\"\n              />\n            </ProForm.Group>\n            <ProForm.Item\n              name=\"agenda\"\n              label={<FormattedMessage id=\"program\" />}\n              tooltip={<FormattedMessage id=\"program\" />}\n              valuePropName=\"value\"\n            >\n              <WysiwygMarkdown directory={`webinars/${webinar}/wysiwyg`} />\n            </ProForm.Item>\n            <ProForm.Item\n              name=\"description\"\n              label={<FormattedMessage id=\"description\" />}\n              tooltip={<FormattedMessage id=\"description_tooltip\" />}\n              valuePropName=\"value\"\n            >\n              <WysiwygMarkdown directory={`webinars/${webinar}/wysiwyg`} />\n            </ProForm.Item>\n          </ProForm>\n        </ProCard.TabPane>{' '}\n        {!isNew && (\n          <ProCard.TabPane\n            key={TabNames.PRODUCT}\n            tab={<FormattedMessage id=\"product\" />}\n            disabled={manageCourseEdit.disableEdit}\n          >\n            {webinar && (\n              <ProductWidget\n                productable={{\n                  class_type: 'App\\\\Models\\\\Webinar',\n                  class_id: webinar,\n                  name: String(data.name),\n                  quantity: 1,\n                }}\n              />\n            )}\n          </ProCard.TabPane>\n        )}\n        {!isNew && (\n          <ProCard.TabPane\n            key={TabNames.MEDIA}\n            tab={<FormattedMessage id=\"media\" />}\n            disabled={manageCourseEdit.disableEdit}\n          >\n            <ProForm {...formProps}>\n              <ProFormImageUpload\n                folder={`webinar/${webinar}`}\n                title=\"image\"\n                action={`/api/admin/webinars/${webinar}`}\n                src_name=\"image_url\"\n                form_name=\"image\"\n                getUploadedSrcField={(info) => info.file.response.data.image_url}\n                setPath={(removedPath) =>\n                  setData((prevState) => ({\n                    ...prevState,\n                    ...removedPath,\n                  }))\n                }\n              />\n            </ProForm>\n          </ProCard.TabPane>\n        )}\n        {!isNew && (\n          <ProCard.TabPane\n            key={TabNames.TAGS}\n            tab={<FormattedMessage id=\"tags\" />}\n            disabled={manageCourseEdit.disableEdit}\n          >\n            <Row>\n              <Col span={12}>\n                <ProForm {...formProps}>\n                  <ProForm.Item\n                    label={<FormattedMessage id=\"tags\" />}\n                    name=\"tags\"\n                    valuePropName=\"value\"\n                  >\n                    <TagsInput />\n                  </ProForm.Item>\n                </ProForm>\n              </Col>\n            </Row>\n          </ProCard.TabPane>\n        )}{' '}\n        {!isNew && (\n          <ProCard.TabPane\n            key={TabNames.BRANDING}\n            tab={<FormattedMessage id=\"branding\" />}\n            disabled={manageCourseEdit.disableEdit}\n          >\n            <ProForm {...formProps}>\n              <ProFormImageUpload\n                folder={`webinar/${webinar}`}\n                title=\"logotype\"\n                action={`/api/admin/webinars/${webinar}`}\n                src_name=\"logotype_url\"\n                form_name=\"logotype\"\n                getUploadedSrcField={(info) => info.file.response.data.logotype_url}\n                setPath={(removedPath) =>\n                  setData((prevState) => ({\n                    ...prevState,\n                    ...removedPath,\n                  }))\n                }\n              />\n            </ProForm>\n          </ProCard.TabPane>\n        )}{' '}\n        {!isNew && (\n          <ProCard.TabPane\n            key={TabNames.USER_SUBMISSION}\n            tab={<FormattedMessage id=\"user_submission\" />}\n            disabled={manageCourseEdit.disableEdit}\n          >\n            {webinar && <UserSubmissions id={Number(webinar)} type=\"App\\Models\\Webinar\" />}\n          </ProCard.TabPane>\n        )}\n      </ProCard>\n      {/* CONFIRM MODAL COMPONENT */}\n      <ConfirmModal\n        open={!!manageCourseEdit.showConfirmModal}\n        onOk={() => {\n          setManageCourseEdit({\n            ...manageCourseEdit,\n            loading: true,\n          });\n          form.submit();\n        }}\n        onCancel={() => {\n          setManageCourseEdit({\n            ...manageCourseEdit,\n            showConfirmModal: false,\n          });\n        }}\n        loading={!!manageCourseEdit.loading}\n      />\n    </PageContainer>\n  );\n};\n\nexport default WebinarForm;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"fieldProps\", \"children\", \"params\", \"proFieldProps\", \"mode\", \"valueEnum\", \"request\", \"showSearch\", \"options\"],\n    _excluded2 = [\"fieldProps\", \"children\", \"params\", \"proFieldProps\", \"mode\", \"valueEnum\", \"request\", \"options\"];\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { runFunction } from '@ant-design/pro-utils';\nimport React, { useContext } from 'react';\nimport FieldContext from '../../FieldContext';\nimport ProFormField from '../Field';\n/**\n * 选择框\n *\n * @param\n */\n\nvar ProFormSelectComponents = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var fieldProps = _ref.fieldProps,\n      children = _ref.children,\n      params = _ref.params,\n      proFieldProps = _ref.proFieldProps,\n      mode = _ref.mode,\n      valueEnum = _ref.valueEnum,\n      request = _ref.request,\n      showSearch = _ref.showSearch,\n      options = _ref.options,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var context = useContext(FieldContext);\n  return _jsx(ProFormField, _objectSpread(_objectSpread({\n    valueEnum: runFunction(valueEnum),\n    request: request,\n    params: params,\n    valueType: \"select\",\n    filedConfig: {\n      customLightMode: true\n    },\n    fieldProps: _objectSpread({\n      options: options,\n      mode: mode,\n      showSearch: showSearch,\n      getPopupContainer: context.getPopupContainer\n    }, fieldProps),\n    ref: ref,\n    proFieldProps: proFieldProps\n  }, rest), {}, {\n    children: children\n  }));\n});\nvar SearchSelect = /*#__PURE__*/React.forwardRef(function (_ref2, ref) {\n  var fieldProps = _ref2.fieldProps,\n      children = _ref2.children,\n      params = _ref2.params,\n      proFieldProps = _ref2.proFieldProps,\n      mode = _ref2.mode,\n      valueEnum = _ref2.valueEnum,\n      request = _ref2.request,\n      options = _ref2.options,\n      rest = _objectWithoutProperties(_ref2, _excluded2);\n\n  var props = _objectSpread({\n    options: options,\n    mode: mode || 'multiple',\n    labelInValue: true,\n    showSearch: true,\n    showArrow: false,\n    autoClearSearchValue: true,\n    optionLabelProp: 'label'\n  }, fieldProps);\n\n  var context = useContext(FieldContext);\n  return _jsx(ProFormField, _objectSpread(_objectSpread({\n    valueEnum: runFunction(valueEnum),\n    request: request,\n    params: params,\n    valueType: \"select\",\n    filedConfig: {\n      customLightMode: true\n    },\n    fieldProps: _objectSpread({\n      getPopupContainer: context.getPopupContainer\n    }, props),\n    ref: ref,\n    proFieldProps: proFieldProps\n  }, rest), {}, {\n    children: children\n  }));\n});\nvar ProFormSelect = ProFormSelectComponents;\nvar ProFormSearchSelect = SearchSelect;\nvar WrappedProFormSelect = ProFormSelect;\nWrappedProFormSelect.SearchSelect = ProFormSearchSelect; // @ts-ignore\n// eslint-disable-next-line no-param-reassign\n\nWrappedProFormSelect.displayName = 'ProFormComponent';\nexport default WrappedProFormSelect;"],"sourceRoot":""}