{"version":3,"sources":["webpack:///./src/services/escola-lms/tracker.ts","webpack:///./src/components/LogsWidget/index.tsx","webpack:///./src/pages/Logs/index.tsx"],"names":["params","options","request","method","useCache","per_page","pageSize","page","current","TableColumns","title","dataIndex","hideInSearch","sorter","width","hideInForm","hideInTable","valueType","fieldProps","allowEmpty","valueEnum","GET","POST","PUT","DELETE","PATCH","LogsWidget","useAsWidget","userID","actionRef","useRef","useState","loading","setLoading","intl","useIntl","formatMessage","id","defaultMessage","layout","sort","user_id","dateRange","path","sortArr","Object","entries","date_from","format","Date","DATETIME_FORMAT","undefined","date_to","track","order_by","order","then","response","success","data","total","meta","key","renderFormItem","item","form","type","defaultRender","rest","stateType","getFieldValue","render","_","record","user","Logs"],"mappings":"0NAIO,WAAP,oC,qDAAO,WACLA,EASAC,EAVK,oGAYEC,YAAO,wCAGVC,OAAQ,MACaC,SAAU,GAC/BJ,OAAQ,2BACHA,GADC,IAEJK,SAAUL,EAAOM,SACjBC,KAAMP,EAAOQ,WAEXP,GAAW,UAtBd,qC,2FCMMQ,EAAkE,CAC7E,CACEC,MAAO,cAAC,IAAD,CAAkB,GAAG,KAAK,eAAe,OAChDC,UAAW,KACXC,aAAc,GACdC,OAAQ,GACRC,MAAO,QAET,CACEJ,MAAO,cAAC,IAAD,CAAkB,GAAG,YAAY,eAAe,eACvDC,UAAW,YACXC,aAAc,GACdG,WAAY,GACZC,YAAa,GACbC,UAAW,YACXC,WAAY,CACVC,WAAY,CAAC,GAAM,MAGvB,CACET,MAAO,cAAC,IAAD,CAAkB,GAAG,cAAc,eAAe,gBACzDC,UAAW,SACXC,aAAc,GACdC,OAAQ,GACRO,UAAW,CACTC,IAAK,MACLC,KAAM,OACNC,IAAK,MACLC,OAAQ,SACRC,MAAO,UAGX,CACEf,MAAO,cAAC,IAAD,CAAkB,GAAG,OAAO,eAAe,SAClDC,UAAW,OACXE,OAAQ,GACRD,aAAc,KAIZc,EAAmE,SAAC,EAGpE,IAFJC,GAEI,EAFJA,YACAC,EACI,EADJA,OAEMC,EAAYC,mBAClB,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAOC,cACb,MACE,eAAC,IAAD,CASE,YAAaD,EAAKE,cAAc,CAC9BC,GAAI,sBACJC,eAAgB,wBAElB,QAASN,EACT,UAAWH,EACX,OAAO,KACP,OAAQ,CACNU,OAAQ,YAEV,QAAS,WAA0DC,EAAS,IAAhEC,GAAgE,EAAhEA,QAAStC,EAAuD,EAAvDA,OAAQuC,EAA+C,EAA/CA,UAAWC,EAAoC,EAApCA,KAAMrC,EAA8B,EAA9BA,SAAUE,EAAoB,EAApBA,QAChDoC,EAAUJ,GAAQK,OAAOC,QAAQN,GAAM,GAC7CP,EAAW,IACX,GAAMc,GACJL,GAAaA,EAAU,GAAKM,YAAO,GAAIC,MAAKP,EAAU,IAAKQ,KAAmBC,OAC1EC,EACJV,GAAaA,EAAU,GAAKM,YAAO,GAAIC,MAAKP,EAAU,IAAKQ,KAAmBC,OAEhF,MAAOE,GAAM,CACXZ,QAASd,EAAcC,EAASa,EAChCtC,SACAG,WACAE,UACAmC,OACAI,YACAK,UACAE,SAAUV,GAAWA,EAAQ,GAC7BW,MAAOX,EAAWA,EAAQ,KAAO,SAAW,MAAQ,OAAUO,SAC7DK,KAAK,SAACC,EAAa,CAEpB,MADAxB,GAAW,IACPwB,EAASC,QACJ,CACLC,KAAMF,EAASE,KACfC,MAAOH,EAASI,KAAKD,MACrBF,QAAS,IAGN,MAGX,QAAO,UACFjD,EADE,CAEL,CACEC,MAAO,cAAC,IAAD,CAAkB,GAAG,OAAO,eAAe,SAClDC,UAAW,UACXmD,IAAK,UACLlD,aAAce,EACdd,OAAQ,GACRkD,eAAgB,SAACC,EAAD,EAAyCC,EAAS,IAAzCC,GAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,cAAkBC,EAAiB,iBAChE,GAAIF,IAAS,OACX,MAAO,MAET,GAAMG,GAAYJ,EAAKK,cAAc,SACrC,MACE,eAAC,IAAD,2BACMF,GADN,IAEE,MAAO,CACLF,KAAMG,OAKdE,OAAQ,SAACC,EAAGC,EAAJ,OACNA,GAAOC,MAAQ,cAAC,IAAD,CAAkB,KAAM,oBAAqB,QAASD,EAAOC,KAAKrC,YAO9EX,S,oCCzIf,6EAKMiD,EAAiB,UAAM,CAC3B,MACE,eAAC,IAAD,UACE,cAAC,IAAD,OAKSA","file":"p__Logs.dbf7a058.async.js","sourcesContent":["import { request } from 'umi';\nimport type { RequestOptionsInit } from 'umi-request';\n\n/**  GET /api/admin/track/routes */\nexport async function track(\n  params: API.PaginationParams & {\n    current?: number;\n    pageSize?: number;\n    date_from?: string;\n    date_to?: string;\n    user_id?: number;\n    path?: string;\n    method: 'string';\n  },\n  options?: RequestOptionsInit,\n) {\n  return request<API.DefaultMetaResponse<EscolaLms.Tracker.Models.TrackRoute>>(\n    `/api/admin/tracks/routes`,\n    {\n      method: 'GET',\n      /* useCache: true */ useCache: false,\n      params: {\n        ...params,\n        per_page: params.pageSize,\n        page: params.current,\n      },\n      ...(options || {}),\n    },\n  );\n}\n","import React, { useRef, useState } from 'react';\nimport { useIntl, FormattedMessage } from 'umi';\nimport type { ProColumns, ActionType } from '@ant-design/pro-table';\nimport ProTable from '@ant-design/pro-table';\nimport { format } from 'date-fns/esm';\nimport { DATETIME_FORMAT } from '@/consts/dates';\nimport { track } from '@/services/escola-lms/tracker';\nimport TypeButtonDrawer from '@/components/TypeButtonDrawer';\nimport UserSelect from '@/components/UserSelect';\n\nexport const TableColumns: ProColumns<EscolaLms.Tracker.Models.TrackRoute>[] = [\n  {\n    title: <FormattedMessage id=\"ID\" defaultMessage=\"ID\" />,\n    dataIndex: 'id',\n    hideInSearch: true,\n    sorter: true,\n    width: '80px',\n  },\n  {\n    title: <FormattedMessage id=\"dateRange\" defaultMessage=\"Date Range\" />,\n    dataIndex: 'dateRange',\n    hideInSearch: false,\n    hideInForm: true,\n    hideInTable: true,\n    valueType: 'dateRange',\n    fieldProps: {\n      allowEmpty: [true, true],\n    },\n  },\n  {\n    title: <FormattedMessage id=\"http_method\" defaultMessage=\"http_method\" />,\n    dataIndex: 'method',\n    hideInSearch: false,\n    sorter: true,\n    valueEnum: {\n      GET: 'GET',\n      POST: 'POST',\n      PUT: 'PUT',\n      DELETE: 'DELETE',\n      PATCH: 'PATCH',\n    },\n  },\n  {\n    title: <FormattedMessage id=\"path\" defaultMessage=\"path\" />,\n    dataIndex: 'path',\n    sorter: true,\n    hideInSearch: false,\n  },\n];\n\nconst LogsWidget: React.FC<{ useAsWidget?: boolean; userID?: number }> = ({\n  useAsWidget,\n  userID,\n}) => {\n  const actionRef = useRef<ActionType>();\n  const [loading, setLoading] = useState(false);\n  const intl = useIntl();\n  return (\n    <ProTable<\n      EscolaLms.Tracker.Models.TrackRoute,\n      API.PageParams & {\n        user_id?: number;\n        method: 'string';\n        dateRange: [string, string];\n        path: string;\n      }\n    >\n      headerTitle={intl.formatMessage({\n        id: 'menu.Analytics.Logs',\n        defaultMessage: 'menu.Analytics.Logs',\n      })}\n      loading={loading}\n      actionRef={actionRef}\n      rowKey=\"id\"\n      search={{\n        layout: 'vertical',\n      }}\n      request={({ user_id, method, dateRange, path, pageSize, current }, sort) => {\n        const sortArr = sort && Object.entries(sort)[0];\n        setLoading(true);\n        const date_from =\n          dateRange && dateRange[0] ? format(new Date(dateRange[0]), DATETIME_FORMAT) : undefined;\n        const date_to =\n          dateRange && dateRange[1] ? format(new Date(dateRange[1]), DATETIME_FORMAT) : undefined;\n\n        return track({\n          user_id: useAsWidget ? userID : user_id,\n          method,\n          pageSize,\n          current,\n          path,\n          date_from,\n          date_to,\n          order_by: sortArr && sortArr[0],\n          order: sortArr ? (sortArr[1] === 'ascend' ? 'ASC' : 'DESC') : undefined,\n        }).then((response) => {\n          setLoading(false);\n          if (response.success) {\n            return {\n              data: response.data,\n              total: response.meta.total,\n              success: true,\n            };\n          }\n          return [];\n        });\n      }}\n      columns={[\n        ...TableColumns,\n        {\n          title: <FormattedMessage id=\"user\" defaultMessage=\"user\" />,\n          dataIndex: 'user_id',\n          key: 'user_id',\n          hideInSearch: useAsWidget,\n          sorter: true,\n          renderFormItem: (item, { type, defaultRender, ...rest }, form) => {\n            if (type === 'form') {\n              return null;\n            }\n            const stateType = form.getFieldValue('state');\n            return (\n              <UserSelect\n                {...rest}\n                state={{\n                  type: stateType,\n                }}\n              />\n            );\n          },\n          render: (_, record) =>\n            record.user && <TypeButtonDrawer type={'App\\\\Models\\\\User'} type_id={record.user.id} />,\n        },\n      ]}\n    />\n  );\n};\n\nexport default LogsWidget;\n","import React from 'react';\n\nimport LogsWidget from '@/components/LogsWidget';\nimport { PageContainer } from '@ant-design/pro-layout';\n\nconst Logs: React.FC = () => {\n  return (\n    <PageContainer>\n      <LogsWidget />\n    </PageContainer>\n  );\n};\n\nexport default Logs;\n"],"sourceRoot":""}