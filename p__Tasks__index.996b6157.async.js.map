{"version":3,"file":"p__Tasks__index.996b6157.async.js","mappings":"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","sources":["webpack://ant-design-pro/./src/pages/Tasks/index.tsx","webpack://ant-design-pro/./src/services/escola-lms/tasks.ts"],"sourcesContent":["import UserSelect from '@/components/UserSelect';\nimport { DATETIME_FORMAT } from '@/consts/dates';\nimport { DeleteOutlined, EditOutlined, PlusOutlined } from '@ant-design/icons';\nimport { PageContainer } from '@ant-design/pro-layout';\nimport type { ActionType, ProColumns } from '@ant-design/pro-table';\nimport ProTable from '@ant-design/pro-table';\nimport { Button, Popconfirm, Tag, Tooltip, message } from 'antd';\nimport { format } from 'date-fns';\nimport React, { useRef } from 'react';\nimport { FormattedMessage, Link, useIntl } from 'umi';\n\nimport TypeButtonDrawer from '@/components/TypeButtonDrawer';\nimport { deleteTask, tasks } from '@/services/escola-lms/tasks';\n\nconst handleRemove = async (id: number) => {\n  return deleteTask(id).then((response) => {\n    if (response.success) {\n      message.success(response.message);\n    }\n    return true;\n  });\n};\n\nconst TableList: React.FC = () => {\n  const actionRef = useRef<ActionType>();\n  const intl = useIntl();\n\n  const columns: ProColumns<API.TaskListItem>[] = [\n    {\n      title: <FormattedMessage id=\"ID\" defaultMessage=\"ID\" />,\n      dataIndex: 'id',\n      hideInSearch: true,\n      sorter: true,\n      width: '80px',\n    },\n    {\n      title: <FormattedMessage id=\"title\" defaultMessage=\"title\" />,\n      dataIndex: 'title',\n      sorter: true,\n    },\n\n    {\n      title: <FormattedMessage id=\"type\" defaultMessage=\"type\" />,\n      dataIndex: 'type',\n      sorter: true,\n    },\n\n    {\n      title: <FormattedMessage id=\"author\" defaultMessage=\"author\" />,\n      dataIndex: 'created_by_id',\n      renderFormItem: (item, { type, defaultRender, ...rest }, form) => {\n        if (type === 'form') {\n          return null;\n        }\n        const stateType = form.getFieldValue('state');\n        return (\n          <UserSelect\n            {...rest}\n            state={{\n              type: stateType,\n            }}\n          />\n        );\n      },\n      render: (_, record) =>\n        record.created_by?.id && (\n          <TypeButtonDrawer\n            key={'user'}\n            type=\"EscolaLms\\Core\\Models\\User\"\n            type_id={record.created_by?.id}\n          />\n        ),\n    },\n    {\n      title: <FormattedMessage id=\"assigned\" defaultMessage=\"assigned\" />,\n      dataIndex: 'user_id',\n      renderFormItem: (item, { type, defaultRender, ...rest }, form) => {\n        if (type === 'form') {\n          return null;\n        }\n        const stateType = form.getFieldValue('state');\n        return (\n          <UserSelect\n            {...rest}\n            state={{\n              type: stateType,\n            }}\n          />\n        );\n      },\n      render: (_, record) =>\n        record.user?.id && (\n          <TypeButtonDrawer\n            key={'user'}\n            type=\"EscolaLms\\Core\\Models\\User\"\n            type_id={record.user?.id}\n          />\n        ),\n    },\n    {\n      title: <FormattedMessage id=\"completed_at\" defaultMessage=\"Completed at\" />,\n      dataIndex: 'completed_at',\n      hideInSearch: true,\n      sorter: true,\n      render: (_, record) =>\n        record.completed_at ? (\n          format(new Date(record.completed_at), DATETIME_FORMAT)\n        ) : (\n          <Tag>\n            <FormattedMessage id=\"uncompleted\" defaultMessage=\"uncompleted\" />\n          </Tag>\n        ),\n    },\n    {\n      hideInSearch: true,\n      title: <FormattedMessage id=\"pages.searchTable.titleOption\" defaultMessage=\"option\" />,\n      dataIndex: 'option',\n      valueType: 'option',\n      render: (_, record) => [\n        <Link to={`/other/tasks/${record.id}`} key=\"edit\">\n          <Tooltip title={<FormattedMessage id=\"edit\" defaultMessage=\"edit\" />}>\n            <Button type=\"primary\" icon={<EditOutlined />} />\n          </Tooltip>\n        </Link>,\n        <Popconfirm\n          key=\"delete\"\n          title={\n            <FormattedMessage\n              id=\"deleteQuestion\"\n              defaultMessage=\"Are you sure to delete this record?\"\n            />\n          }\n          onConfirm={async () => {\n            const success = await handleRemove(record.id);\n            if (success) {\n              if (actionRef.current) {\n                actionRef.current.reload();\n              }\n            }\n          }}\n          okText={<FormattedMessage id=\"yes\" />}\n          cancelText={<FormattedMessage id=\"no\" />}\n        >\n          <Tooltip title={<FormattedMessage id=\"delete\" defaultMessage=\"delete\" />}>\n            <Button type=\"primary\" icon={<DeleteOutlined />} danger />\n          </Tooltip>\n        </Popconfirm>,\n      ],\n    },\n  ];\n\n  return (\n    <PageContainer>\n      <ProTable<API.TaskListItem, API.TaskListParams>\n        headerTitle={intl.formatMessage({\n          id: 'menu.Other activities.Tasks',\n          defaultMessage: 'Tasks',\n        })}\n        actionRef={actionRef}\n        rowKey=\"id\"\n        search={{\n          layout: 'vertical',\n        }}\n        toolBarRender={() => [\n          <Link to=\"/other/tasks/new\" key=\"new\">\n            <Button type=\"primary\" key=\"primary\">\n              <PlusOutlined /> <FormattedMessage id=\"new\" defaultMessage=\"new\" />\n            </Button>\n          </Link>,\n        ]}\n        request={({ pageSize, current, title, user_id, created_by_id }, sort) => {\n          const sortArr = sort && Object.entries(sort)[0];\n          return tasks({\n            pageSize,\n            current,\n            title,\n            created_by_id,\n            user_id,\n            order_by: sortArr && sortArr[0], // i like nested ternary\n            /* eslint-disable */ order: sortArr\n              ? sortArr[1] === 'ascend'\n                ? 'ASC'\n                : 'DESC'\n              : undefined,\n          }).then((response) => {\n            if (response.success) {\n              return {\n                data: response.data,\n                total: response.meta.total,\n                success: true,\n              };\n            }\n            return [];\n          });\n        }}\n        columns={columns}\n      />\n    </PageContainer>\n  );\n};\n\nexport default TableList;\n","import { request } from 'umi';\n\nimport type { AxiosRequestConfig } from '@umijs/max';\n\n/**  GET /api/admin/tasks */\nexport async function tasks(\n  params: API.TaskListParams & API.PaginationParams,\n  options?: AxiosRequestConfig,\n) {\n  return request<API.TaskList>(`/api/admin/tasks`, {\n    method: 'GET',\n    params: {\n      ...params,\n      per_page: params.pageSize,\n      page: params.current,\n    },\n    ...(options || {}),\n  });\n}\n\n/**  DELETE /api/admin/tasks/:id */\nexport async function deleteTask(id: number, options?: AxiosRequestConfig) {\n  return request<API.DefaultResponse<API.Task>>(`/api/admin/tasks/${id}`, {\n    method: 'DELETE',\n    ...(options || {}),\n  });\n}\n\n/**  GET /api/admin/tasks/:id */\nexport async function getTask(id: number, options?: AxiosRequestConfig) {\n  return request<API.DefaultResponse<API.Task>>(`/api/admin/tasks/${id}`, {\n    method: 'GET',\n    ...(options || {}),\n  });\n}\n\n/** POST /api/admin/task */\nexport async function createTask(body: EscolaLms.Tasks.Http.Requests.Admin.AdminCreateTaskRequest) {\n  return request<API.DefaultResponse<API.Task>>(`/api/admin/tasks`, {\n    method: 'POST',\n    data: body,\n  });\n}\n\n/**  PATCH /api/admin/tasks/:id */\nexport async function updateTask(\n  id: number,\n  body: EscolaLms.Tasks.Http.Requests.Admin.AdminUpdateTaskRequest,\n  options?: AxiosRequestConfig,\n) {\n  return request<API.DefaultResponse<API.Task>>(`/api/admin/tasks/${id}`, {\n    method: 'PATCH',\n    data: body,\n    ...(options || {}),\n  });\n}\n\n/**  POST /api/admin/tasks/complete/:id */\nexport async function completeTask(id: number, options?: AxiosRequestConfig) {\n  return request<API.DefaultResponse<API.Task>>(`/api/admin/tasks/complete/${id}`, {\n    method: 'POST',\n    ...(options || {}),\n  });\n}\n\n/**  POST /api/admin/tasks/incomplete/:id */\nexport async function incompleteTask(id: number, options?: AxiosRequestConfig) {\n  return request<API.DefaultResponse<API.Task>>(`/api/admin/tasks/incomplete/${id}`, {\n    method: 'POST',\n    ...(options || {}),\n  });\n}\n\n/** POST /api/admin/task/notes */\nexport async function createTaskNote(\n  // TODO #1045 replace with admin Request\n  body: EscolaLms.Tasks.Http.Requests.CreateTaskNoteRequest,\n) {\n  return request<API.DefaultResponse<API.TaskNote>>(`/api/admin/tasks/notes`, {\n    method: 'POST',\n    data: body,\n  });\n}\n\n/** PATCH /api/admin/task/notes */\nexport async function updateTaskNote(\n  id: number,\n  body: EscolaLms.Tasks.Http.Requests.UpdateTaskNoteRequest,\n) {\n  return request<API.DefaultResponse<API.TaskNote>>(`/api/admin/tasks/notes/${id}`, {\n    method: 'PATCH',\n    data: body,\n  });\n}\n\n/** DELETE /api/admin/task/notes */\nexport async function deleteTaskNote(id: number) {\n  return request<API.DefaultResponse<API.TaskNote>>(`/api/admin/tasks/notes/${id}`, {\n    method: 'DELETE',\n  });\n}\n"],"names":["handleRemove","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","wrap","_context","prev","next","abrupt","deleteTask","then","response","success","message","stop","_x","apply","arguments","TableList","actionRef","useRef","intl","useIntl","columns","title","_jsx","FormattedMessage","defaultMessage","dataIndex","hideInSearch","sorter","width","renderFormItem","item","_ref2","form","type","defaultRender","rest","_objectWithoutProperties","_excluded","stateType","getFieldValue","UserSelect","_objectSpread","state","render","_","record","_record$created_by","_record$created_by2","created_by","TypeButtonDrawer","type_id","_ref3","_excluded2","_record$user","_record$user2","user","completed_at","format","Date","DATETIME_FORMAT","Tag","children","valueType","Link","to","concat","Tooltip","Button","icon","EditOutlined","Popconfirm","onConfirm","_callee2","_context2","sent","current","reload","okText","cancelText","DeleteOutlined","danger","PageContainer","ProTable","headerTitle","formatMessage","rowKey","search","layout","toolBarRender","_jsxs","PlusOutlined","request","_ref5","sort","pageSize","user_id","created_by_id","sortArr","Object","entries","tasks","order_by","order","undefined","data","total","meta","_x2","_tasks","params","options","method","per_page","page","_x3","_x4","_deleteTask","getTask","_x5","_x6","_getTask","_callee3","_context3","createTask","_x7","_createTask","_callee4","body","_context4","updateTask","_x8","_x9","_x10","_updateTask","_callee5","_context5","completeTask","_x11","_x12","_completeTask","_callee6","_context6","incompleteTask","_x13","_x14","_incompleteTask","_callee7","_context7","createTaskNote","_x15","_createTaskNote","_callee8","_context8","updateTaskNote","_x16","_x17","_updateTaskNote","_callee9","_context9","deleteTaskNote","_x18","_deleteTaskNote","_callee10","_context10"],"sourceRoot":""}