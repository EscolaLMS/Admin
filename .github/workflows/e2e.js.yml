name: Cypress end-to-end Tests

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - main
      - master
      - develop
  pull_request:

jobs:
  cypress-e2e:
    runs-on: ubuntu-latest
    container:
      image: escolalms/php:8-work

    services:
      mailhog:
        image: mailhog/mailhog
        ports:
          - 1025:1025 # smtp server
          - 8025:8025 # web ui

      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test
        ports:
          - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Check out my other private repo
        uses: actions/checkout@master
        with:
          repository: EscolaLMS/API
          path: api

      - name: Install composer dependencies
        run: |
          cd api && composer install --no-scripts

      - name: Prepare Laravel Application
        run: |
          cd api
          cp docker/envs/.env.ci.mysql .env
          cp docker/envs/.env.ci.mysql .env.testing
          cp docker/envs/phpunit.xml.mysql phpunit.xml
          php artisan key:generate
          php artisan migrate:fresh --seed
          php artisan passport:keys --force
          php artisan passport:client --personal --no-interaction

      - name: Start Laravel server
        run: cd api && nohup php artisan serve --port=80 &

      - name: Cypress dependencies
        run: apt-get update && apt-get install libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb -y --fix-missing

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Node dependencies
        run: npm i

      - name: Node dependencies serve
        run: npm i serve -g

      - name: Node build
        run: BASE_PATH=/ REACT_APP_API_URL='' npm run build

      - name: Cypress.io
        uses: cypress-io/github-action@v2.8.2
        with:
          record: true
          start: "serve dist -l 8000"
          wait-on: http://localhost:8000
          wait-on-timeout: 120
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BASE_PATH: /
          BASE_URL: http://localhost:8000
          PORT: 8000
          REACT_APP_API_URL: http://localhost
          VERIFY_TEST_RUNNER_TIMEOUT_MS: 100000

      # after the test run completes
      # store videos and any screenshots
      # NOTE: screenshots will be generated only if E2E test failed
      # thus we store screenshots only on failures
      # Alternative: create and commit an empty cypress/screenshots folder
      # to always have something to upload
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
      # Test run video was always captured, so this action uses "always()" condition
      - uses: actions/upload-artifact@v1
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos
